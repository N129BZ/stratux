{"version":3,"file":"map.js","sources":["../node_modules/ol/CollectionEventType.js","../node_modules/ol/ObjectEventType.js","../node_modules/ol/events/EventType.js","../node_modules/ol/Disposable.js","../node_modules/ol/array.js","../node_modules/ol/functions.js","../node_modules/ol/obj.js","../node_modules/ol/events/Event.js","../node_modules/ol/events/Target.js","../node_modules/ol/events.js","../node_modules/ol/Observable.js","../node_modules/ol/util.js","../node_modules/ol/Object.js","../node_modules/ol/Collection.js","../node_modules/ol/asserts.js","../node_modules/ol/Feature.js","../node_modules/ol/extent/Relationship.js","../node_modules/ol/extent.js","../node_modules/ol/math.js","../node_modules/ol/sphere.js","../node_modules/ol/console.js","../node_modules/ol/coordinate.js","../node_modules/ol/proj/Units.js","../node_modules/ol/proj/Projection.js","../node_modules/ol/proj/epsg3857.js","../node_modules/ol/proj/epsg4326.js","../node_modules/ol/proj/projections.js","../node_modules/ol/proj/transforms.js","../node_modules/ol/proj/utm.js","../node_modules/ol/proj.js","../node_modules/ol/transform.js","../node_modules/ol/geom/flat/transform.js","../node_modules/ol/geom/Geometry.js","../node_modules/ol/geom/SimpleGeometry.js","../node_modules/ol/geom/flat/area.js","../node_modules/ol/geom/flat/closest.js","../node_modules/ol/geom/flat/deflate.js","../node_modules/ol/geom/flat/inflate.js","../node_modules/ol/geom/flat/simplify.js","../node_modules/ol/geom/LinearRing.js","../node_modules/ol/geom/Point.js","../node_modules/ol/geom/flat/contains.js","../node_modules/ol/geom/flat/interiorpoint.js","../node_modules/ol/geom/flat/segments.js","../node_modules/ol/geom/flat/intersectsextent.js","../node_modules/ol/geom/flat/reverse.js","../node_modules/ol/geom/flat/orient.js","../node_modules/ol/geom/Polygon.js","../node_modules/ol/geom/flat/interpolate.js","../node_modules/ol/geom/flat/length.js","../node_modules/ol/render/EventType.js","../node_modules/ol/has.js","../node_modules/ol/ImageState.js","../node_modules/ol/dom.js","../node_modules/ol/color.js","../node_modules/ol/Image.js","../node_modules/ol/style/IconImageCache.js","../node_modules/ol/style/IconImage.js","../node_modules/ol/colorlike.js","../node_modules/ol/render/VectorContext.js","../node_modules/ol/css.js","../node_modules/ol/render/canvas.js","../node_modules/ol/render/canvas/Immediate.js","../node_modules/ol/renderer/vector.js","../node_modules/ol/featureloader.js","../node_modules/ol/loadingstrategy.js","../node_modules/ol/geom/flat/center.js","../node_modules/ol/render/Feature.js","../node_modules/quickselect/index.js","../node_modules/rbush/index.js","../node_modules/ol/structs/RBush.js","../node_modules/ol/source/Source.js","../node_modules/ol/source/VectorEventType.js","../node_modules/ol/source/Vector.js","../node_modules/ol/style/Fill.js","../node_modules/ol/style/Stroke.js","../node_modules/ol/size.js","../node_modules/ol/style/Image.js","../node_modules/ol/style/RegularShape.js","../node_modules/ol/style/Circle.js","../node_modules/ol/style/Style.js","../node_modules/ol/style/Text.js","../node_modules/ol/ViewHint.js","../node_modules/ol/render/canvas/Instruction.js","../node_modules/ol/render/canvas/Builder.js","../node_modules/ol/render/canvas/ImageBuilder.js","../node_modules/ol/render/canvas/LineStringBuilder.js","../node_modules/ol/render/canvas/PolygonBuilder.js","../node_modules/ol/geom/flat/linechunk.js","../node_modules/ol/geom/flat/straightchunk.js","../node_modules/ol/render/canvas/TextBuilder.js","../node_modules/ol/render/canvas/BuilderGroup.js","../node_modules/ol/geom/flat/textpath.js","../node_modules/ol/render/canvas/ZIndexContext.js","../node_modules/ol/render/canvas/Executor.js","../node_modules/ol/render/canvas/ExecutorGroup.js","../node_modules/ol/style/Icon.js","../node_modules/ol/render/canvas/hitdetect.js","../node_modules/ol/render/Event.js","../node_modules/ol/renderer/Layer.js","../node_modules/ol/renderer/canvas/Layer.js","../node_modules/ol/renderer/canvas/VectorLayer.js","../node_modules/ol/expr/expression.js","../node_modules/ol/expr/cpu.js","../node_modules/ol/render/canvas/style.js","../node_modules/ol/ViewProperty.js","../node_modules/ol/centerconstraint.js","../node_modules/ol/easing.js","../node_modules/ol/resolutionconstraint.js","../node_modules/ol/rotationconstraint.js","../node_modules/ol/tilegrid/common.js","../node_modules/ol/View.js","../node_modules/ol/layer/Property.js","../node_modules/ol/layer/Base.js","../node_modules/ol/layer/Layer.js","../node_modules/ol/layer/BaseVector.js","../node_modules/ol/layer/Vector.js","../node_modules/ol/TileState.js","../node_modules/ol/Tile.js","../node_modules/ol/ImageTile.js","../node_modules/ol/Kinetic.js","../node_modules/ol/MapEvent.js","../node_modules/ol/MapBrowserEvent.js","../node_modules/ol/MapBrowserEventType.js","../node_modules/ol/pointer/EventType.js","../node_modules/ol/MapBrowserEventHandler.js","../node_modules/ol/MapEventType.js","../node_modules/ol/MapProperty.js","../node_modules/ol/structs/PriorityQueue.js","../node_modules/ol/TileQueue.js","../node_modules/ol/control/Control.js","../node_modules/ol/control/Attribution.js","../node_modules/ol/control/Rotate.js","../node_modules/ol/control/Zoom.js","../node_modules/ol/control/defaults.js","../node_modules/ol/interaction/Property.js","../node_modules/ol/interaction/Interaction.js","../node_modules/ol/interaction/DoubleClickZoom.js","../node_modules/ol/events/condition.js","../node_modules/ol/interaction/Pointer.js","../node_modules/ol/interaction/DragPan.js","../node_modules/ol/interaction/DragRotate.js","../node_modules/ol/render/Box.js","../node_modules/ol/interaction/DragBox.js","../node_modules/ol/interaction/DragZoom.js","../node_modules/ol/events/Key.js","../node_modules/ol/interaction/KeyboardPan.js","../node_modules/ol/interaction/KeyboardZoom.js","../node_modules/ol/interaction/MouseWheelZoom.js","../node_modules/ol/interaction/PinchRotate.js","../node_modules/ol/interaction/PinchZoom.js","../node_modules/ol/interaction/defaults.js","../node_modules/ol/layer/Group.js","../node_modules/ol/renderer/Map.js","../node_modules/ol/renderer/Composite.js","../node_modules/ol/Map.js","../node_modules/ol/Overlay.js","../node_modules/ol/TileRange.js","../node_modules/ol/DataTile.js","../node_modules/ol/reproj.js","../node_modules/ol/reproj/Triangulation.js","../node_modules/ol/reproj/common.js","../node_modules/ol/reproj/Tile.js","../node_modules/ol/structs/LRUCache.js","../node_modules/ol/tilecoord.js","../node_modules/ol/renderer/canvas/TileLayer.js","../node_modules/ol/layer/TileProperty.js","../node_modules/ol/layer/BaseTile.js","../node_modules/ol/layer/Tile.js","../node_modules/ol/tilegrid/TileGrid.js","../node_modules/ol/tilegrid.js","../node_modules/ol/uri.js","../node_modules/ol/tileurlfunction.js","../node_modules/ol/source/Tile.js","../node_modules/ol/source/TileEventType.js","../node_modules/ol/source/UrlTile.js","../node_modules/ol/source/TileImage.js","../node_modules/ol/source/XYZ.js","../node_modules/ol/source/OSM.js","../node_modules/ol/control/ScaleLine.js","../node_modules/ol-layerswitcher/dist/ol-layerswitcher.js","../src/mapsettings.js","../src/airportInfo.js","../src/stratuxconversion.js","../src/map.js"],"sourcesContent":["/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>|undefined} */\n  let lastArgs;\n\n  let lastThis;\n\n  /**\n   * @this {*} Only need to know if `this` changed, don't care what type\n   * @return {ReturnType} Memoized value\n   */\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!lastArgs || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\nimport Event from './Event.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (once) {\n    const originalListener = listener;\n    /**\n     * @param {Event|import('./events/Event.js').default} event The event\n     * @return {void|boolean} When the function returns `false`, event propagation will stop.\n     * @this {typeof target}\n     */\n    listener = function (event) {\n      target.removeEventListener(type, listener);\n      return originalListener.call(thisArg ?? this, event);\n    };\n  } else if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '10.5.0';\n","/**\n * @module ol/Object\n */\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/Collection\n */\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index),\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      ),\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport {assert} from './asserts.js';\nimport EventType from './events/EventType.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this,\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @param {boolean} [multiWorld] Return all worlds\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection, multiWorld) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth && !multiWorld) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n\n/**\n * Wraps a number between some minimum and maximum values.\n * @param {number} n The number to wrap.\n * @param {number} min The minimum of the range (inclusive).\n * @param {number} max The maximum of the range (exclusive).\n * @return {number} The wrapped number.\n */\nexport function wrap(n, min, max) {\n  if (n >= min && n < max) {\n    return n;\n  }\n  const range = max - min;\n  return ((((n - min) % range) + range) % range) + min;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * The function is called with a `number` view resolution and a\n * {@link module:ol/coordinate~Coordinate} as arguments, and returns the `number` resolution\n * in projection units at the passed coordinate.\n * @typedef {function(number, import(\"../coordinate.js\").Coordinate):number} GetPointResolution\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {GetPointResolution} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * In most cases, you should not need to create instances of this class.\n * Instead, where projection information is required, you can use a string\n * projection code or identifier (e.g. `EPSG:4326`) instead of a projection\n * instance.\n *\n * The library includes support for transforming coordinates between the following\n * projections:\n *\n *  WGS 84 / Geographic - Using codes `EPSG:4326`, `CRS:84`, `urn:ogc:def:crs:EPSG:6.6:4326`,\n *    `urn:ogc:def:crs:OGC:1.3:CRS84`, `urn:ogc:def:crs:OGC:2:84`, `http://www.opengis.net/gml/srs/epsg.xml#4326`,\n *    or `urn:x-ogc:def:crs:EPSG:4326`\n *  WGS 84 / Spherical Mercator - Using codes `EPSG:3857`, `EPSG:102100`, `EPSG:102113`, `EPSG:900913`,\n *    `urn:ogc:def:crs:EPSG:6.18:3:3857`, or `http://www.opengis.net/gml/srs/epsg.xml#3857`\n *  WGS 84 / UTM zones - Using codes `EPSG:32601` through `EPSG:32660` for northern zones\n *    and `EPSG:32701` through `EPSG:32760` for southern zones. Note that the built-in UTM transforms\n *    are lower accuracy (with errors on the order of 0.1 m) than those that you might get in a\n *    library like [proj4js](https://github.com/proj4js/proj4js).\n *\n * For additional projection support, or to use higher accuracy transforms than the built-in ones, you can use\n * the [proj4js](https://github.com/proj4js/proj4js) library. With `proj4js`, after adding any new projection\n * definitions, call the {@link module:ol/proj/proj4.register} function.\n *\n * You can use the {@link module:ol/proj.get} function to retrieve a projection instance\n * for one of the registered projections.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {GetPointResolution|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {GetPointResolution|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default|null} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|null} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    return transforms[sourceCode][destinationCode];\n  }\n  return null;\n}\n","/**\n * @module ol/proj/utm\n */\n\n/**\n * Adapted from https://github.com/Turbo87/utm\n * Copyright (c) 2012-2017 Tobias Bieniek\n *\n * The functions here provide approximate transforms to and from UTM.\n * They are not appropriate for use beyond the validity extend of a UTM\n * zone, and the accuracy of the transform decreases toward the zone\n * edges.\n */\n\nimport {toDegrees, toRadians, wrap} from '../math.js';\nimport Projection from './Projection.js';\n\n/**\n * @typedef {Object} UTMZone\n * @property {number} number The zone number (1 - 60).\n * @property {boolean} north The northern hemisphere.\n */\n\nconst K0 = 0.9996;\n\nconst E = 0.00669438;\nconst E2 = E * E;\nconst E3 = E2 * E;\nconst E_P2 = E / (1 - E);\n\nconst SQRT_E = Math.sqrt(1 - E);\nconst _E = (1 - SQRT_E) / (1 + SQRT_E);\nconst _E2 = _E * _E;\nconst _E3 = _E2 * _E;\nconst _E4 = _E3 * _E;\nconst _E5 = _E4 * _E;\n\nconst M1 = 1 - E / 4 - (3 * E2) / 64 - (5 * E3) / 256;\nconst M2 = (3 * E) / 8 + (3 * E2) / 32 + (45 * E3) / 1024;\nconst M3 = (15 * E2) / 256 + (45 * E3) / 1024;\nconst M4 = (35 * E3) / 3072;\n\nconst P2 = (3 / 2) * _E - (27 / 32) * _E3 + (269 / 512) * _E5;\nconst P3 = (21 / 16) * _E2 - (55 / 32) * _E4;\nconst P4 = (151 / 96) * _E3 - (417 / 128) * _E5;\nconst P5 = (1097 / 512) * _E4;\n\nconst R = 6378137;\n\n/**\n * @param {number} easting Easting value of coordinate.\n * @param {number} northing Northing value of coordinate.\n * @param {UTMZone} zone The UTM zone.\n * @return {import(\"../coordinate.js\").Coordinate} The transformed coordinate.\n */\nfunction toLonLat(easting, northing, zone) {\n  const x = easting - 500000;\n  const y = zone.north ? northing : northing - 10000000;\n\n  const m = y / K0;\n  const mu = m / (R * M1);\n\n  const pRad =\n    mu +\n    P2 * Math.sin(2 * mu) +\n    P3 * Math.sin(4 * mu) +\n    P4 * Math.sin(6 * mu) +\n    P5 * Math.sin(8 * mu);\n\n  const pSin = Math.sin(pRad);\n  const pSin2 = pSin * pSin;\n\n  const pCos = Math.cos(pRad);\n\n  const pTan = pSin / pCos;\n  const pTan2 = pTan * pTan;\n  const pTan4 = pTan2 * pTan2;\n\n  const epSin = 1 - E * pSin2;\n  const epSinSqrt = Math.sqrt(1 - E * pSin2);\n\n  const n = R / epSinSqrt;\n  const r = (1 - E) / epSin;\n\n  const c = E_P2 * pCos ** 2;\n  const c2 = c * c;\n\n  const d = x / (n * K0);\n  const d2 = d * d;\n  const d3 = d2 * d;\n  const d4 = d3 * d;\n  const d5 = d4 * d;\n  const d6 = d5 * d;\n\n  const latitude =\n    pRad -\n    (pTan / r) *\n      (d2 / 2 - (d4 / 24) * (5 + 3 * pTan2 + 10 * c - 4 * c2 - 9 * E_P2)) +\n    (d6 / 720) * (61 + 90 * pTan2 + 298 * c + 45 * pTan4 - 252 * E_P2 - 3 * c2);\n\n  let longitude =\n    (d -\n      (d3 / 6) * (1 + 2 * pTan2 + c) +\n      (d5 / 120) * (5 - 2 * c + 28 * pTan2 - 3 * c2 + 8 * E_P2 + 24 * pTan4)) /\n    pCos;\n\n  longitude = wrap(\n    longitude + toRadians(zoneToCentralLongitude(zone.number)),\n    -Math.PI,\n    Math.PI,\n  );\n\n  return [toDegrees(longitude), toDegrees(latitude)];\n}\n\nconst MIN_LATITUDE = -80;\nconst MAX_LATITUDE = 84;\nconst MIN_LONGITUDE = -180;\nconst MAX_LONGITUDE = 180;\n\n/**\n * @param {number} longitude The longitude.\n * @param {number} latitude The latitude.\n * @param {UTMZone} zone The UTM zone.\n * @return {import('../coordinate.js').Coordinate} The UTM coordinate.\n */\nfunction fromLonLat(longitude, latitude, zone) {\n  longitude = wrap(longitude, MIN_LONGITUDE, MAX_LONGITUDE);\n\n  if (latitude < MIN_LATITUDE) {\n    latitude = MIN_LATITUDE;\n  } else if (latitude > MAX_LATITUDE) {\n    latitude = MAX_LATITUDE;\n  }\n\n  const latRad = toRadians(latitude);\n  const latSin = Math.sin(latRad);\n  const latCos = Math.cos(latRad);\n\n  const latTan = latSin / latCos;\n  const latTan2 = latTan * latTan;\n  const latTan4 = latTan2 * latTan2;\n\n  const lonRad = toRadians(longitude);\n  const centralLon = zoneToCentralLongitude(zone.number);\n  const centralLonRad = toRadians(centralLon);\n\n  const n = R / Math.sqrt(1 - E * latSin ** 2);\n  const c = E_P2 * latCos ** 2;\n\n  const a = latCos * wrap(lonRad - centralLonRad, -Math.PI, Math.PI);\n  const a2 = a * a;\n  const a3 = a2 * a;\n  const a4 = a3 * a;\n  const a5 = a4 * a;\n  const a6 = a5 * a;\n\n  const m =\n    R *\n    (M1 * latRad -\n      M2 * Math.sin(2 * latRad) +\n      M3 * Math.sin(4 * latRad) -\n      M4 * Math.sin(6 * latRad));\n\n  const easting =\n    K0 *\n      n *\n      (a +\n        (a3 / 6) * (1 - latTan2 + c) +\n        (a5 / 120) * (5 - 18 * latTan2 + latTan4 + 72 * c - 58 * E_P2)) +\n    500000;\n\n  let northing =\n    K0 *\n    (m +\n      n *\n        latTan *\n        (a2 / 2 +\n          (a4 / 24) * (5 - latTan2 + 9 * c + 4 * c ** 2) +\n          (a6 / 720) * (61 - 58 * latTan2 + latTan4 + 600 * c - 330 * E_P2)));\n\n  if (!zone.north) {\n    northing += 10000000;\n  }\n\n  return [easting, northing];\n}\n\n/**\n * @param {number} zone The zone number.\n * @return {number} The central longitude in degrees.\n */\nfunction zoneToCentralLongitude(zone) {\n  return (zone - 1) * 6 - 180 + 3;\n}\n\n/**\n * @type {Array<RegExp>}\n */\nconst epsgRegExes = [\n  /^EPSG:(\\d+)$/,\n  /^urn:ogc:def:crs:EPSG::(\\d+)$/,\n  /^http:\\/\\/www\\.opengis\\.net\\/def\\/crs\\/EPSG\\/0\\/(\\d+)$/,\n];\n\n/**\n * @param {string} code The projection code.\n * @return {UTMZone|null} The UTM zone info (or null if not UTM).\n */\nexport function zoneFromCode(code) {\n  let epsgId = 0;\n  for (const re of epsgRegExes) {\n    const match = code.match(re);\n    if (match) {\n      epsgId = parseInt(match[1]);\n      break;\n    }\n  }\n  if (!epsgId) {\n    return null;\n  }\n\n  let number = 0;\n  let north = false;\n  if (epsgId > 32700 && epsgId < 32761) {\n    number = epsgId - 32700;\n  } else if (epsgId > 32600 && epsgId < 32661) {\n    north = true;\n    number = epsgId - 32600;\n  }\n  if (!number) {\n    return null;\n  }\n\n  return {number, north};\n}\n\n/**\n * @param {function(number, number, UTMZone): import('../coordinate.js').Coordinate} transformer The transformer.\n * @param {UTMZone} zone The UTM zone.\n * @return {import('../proj.js').TransformFunction} The transform function.\n */\nfunction makeTransformFunction(transformer, zone) {\n  return function (input, output, dimension, stride) {\n    const length = input.length;\n    dimension = dimension > 1 ? dimension : 2;\n    stride = stride ?? dimension;\n    if (!output) {\n      if (dimension > 2) {\n        output = input.slice();\n      } else {\n        output = new Array(length);\n      }\n    }\n    for (let i = 0; i < length; i += stride) {\n      const x = input[i];\n      const y = input[i + 1];\n      const coord = transformer(x, y, zone);\n      output[i] = coord[0];\n      output[i + 1] = coord[1];\n    }\n    return output;\n  };\n}\n\n/**\n * @param {string} code The projection code.\n * @return {import('./Projection.js').default|null} A projection or null if unable to create one.\n */\nexport function makeProjection(code) {\n  const zone = zoneFromCode(code);\n  if (!zone) {\n    return null;\n  }\n  return new Projection({code, units: 'm'});\n}\n\n/**\n * @param {import('./Projection.js').default} projection The projection.\n * @return {import('../proj.js').Transforms|null} The transforms lookup or null if unable to handle projection.\n */\nexport function makeTransforms(projection) {\n  const zone = zoneFromCode(projection.getCode());\n  if (!zone) {\n    return null;\n  }\n\n  return {\n    forward: makeTransformFunction(fromLonLat, zone),\n    inverse: makeTransformFunction(toLonLat, zone),\n  };\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {warn} from './console.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport Projection from './proj/Projection.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {\n  makeProjection as makeUTMProjection,\n  makeTransforms as makeUTMTransforms,\n} from './proj/utm.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * @typedef {Object} Transforms\n * @property {TransformFunction} forward The forward transform (from geographic).\n * @property {TransformFunction} inverse The inverse transform (to geographic).\n */\n\n/**\n * @type {Array<function(Projection): Transforms|null>}\n */\nconst transformFactories = [makeUTMTransforms];\n\n/**\n * @type {Array<function(string): Projection|null>}\n */\nconst projectionFactories = [makeUTMProjection];\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @callback TransformFunction\n * @param {Array<number>} input\n * @param {Array<number>} [output]\n * @param {number} [dimension]\n * @param {number} [stride]\n * @return {Array<number>}\n *\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  if (!(typeof projectionLike === 'string')) {\n    return projectionLike;\n  }\n  const projection = getProj(projectionLike);\n  if (projection) {\n    return projection;\n  }\n  for (const makeProjection of projectionFactories) {\n    const projection = makeProjection(projectionLike);\n    if (projection) {\n      return projection;\n    }\n  }\n  return null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (!toEPSG4326 && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimensions that should be transformed.\n     * @param {number} [stride] Stride.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension, stride) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      stride = stride ?? dimension;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += stride) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = stride; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} source Source Projection object.\n * @param {Projection} destination Destination Projection\n *     object.\n * @return {TransformFunction|null} Transform function.\n */\nexport function getTransformFromProjections(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (transformFunc) {\n    return transformFunc;\n  }\n\n  /**\n   * @type {Transforms|null}\n   */\n  let sourceTransforms = null;\n\n  /**\n   * @type {Transforms|null}\n   */\n  let destinationTransforms = null;\n\n  // lazily add projections if we have supported transforms\n  for (const makeTransforms of transformFactories) {\n    if (!sourceTransforms) {\n      sourceTransforms = makeTransforms(source);\n    }\n    if (!destinationTransforms) {\n      destinationTransforms = makeTransforms(destination);\n    }\n  }\n\n  if (!sourceTransforms && !destinationTransforms) {\n    return null;\n  }\n\n  const intermediateCode = 'EPSG:4326';\n  if (!destinationTransforms) {\n    const toDestination = getTransformFunc(intermediateCode, destinationCode);\n    if (toDestination) {\n      transformFunc = composeTransformFuncs(\n        sourceTransforms.inverse,\n        toDestination,\n      );\n    }\n  } else if (!sourceTransforms) {\n    const fromSource = getTransformFunc(sourceCode, intermediateCode);\n    if (fromSource) {\n      transformFunc = composeTransformFuncs(\n        fromSource,\n        destinationTransforms.forward,\n      );\n    }\n  } else {\n    transformFunc = composeTransformFuncs(\n      sourceTransforms.inverse,\n      destinationTransforms.forward,\n    );\n  }\n\n  if (transformFunc) {\n    addProjection(source);\n    addProjection(destination);\n    addTransformFunc(source, destination, transformFunc);\n  }\n\n  return transformFunc;\n}\n\n/**\n * @param {TransformFunction} t1 The first transform function.\n * @param {TransformFunction} t2 The second transform function.\n * @return {TransformFunction} The composed transform function.\n */\nfunction composeTransformFuncs(t1, t2) {\n  return function (input, output, dimensions, stride) {\n    output = t1(input, output, dimensions, stride);\n    return t2(output, output, dimensions, stride);\n  };\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original). If there\n * is no available transform between the two projection, the function will throw\n * an error.\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  if (!transformFunc) {\n    const sourceCode = get(source).getCode();\n    const destinationCode = get(destination).getCode();\n    throw new Error(\n      `No transform available between ${sourceCode} and ${destinationCode}`,\n    );\n  }\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e5, 1e5, 1e5, 1e5, 2, 2];\n\n/**\n * A matrix string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  return transformString;\n}\n\n/**\n * Create a transform from a CSS transform matrix string.\n * @param {string} cssTransform The CSS string to parse.\n * @return {!Transform} The transform.\n */\nfunction fromString(cssTransform) {\n  const values = cssTransform.substring(7, cssTransform.length - 1).split(',');\n  return values.map(parseFloat);\n}\n\n/**\n * Compare two matrices for equality.\n * @param {!string} cssTransform1 A CSS transform matrix string.\n * @param {!string} cssTransform2 A CSS transform matrix string.\n * @return {boolean} The two matrices are equal.\n */\nexport function equivalent(cssTransform1, cssTransform2) {\n  const mat1 = fromString(cssTransform1);\n  const mat2 = fromString(cssTransform2);\n  for (let i = 0; i < 6; ++i) {\n    if (Math.round((mat1[i] - mat2[i]) * matrixPrecision[i]) !== 0) {\n      return false;\n    }\n  }\n  return true;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [destinationStride] Stride of destination coordinates; if unspecified, assumed to be 2.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n  destinationStride,\n) {\n  dest = dest ? dest : [];\n  destinationStride = destinationStride ? destinationStride : 2;\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n\n    for (let k = 2; k < destinationStride; k++) {\n      dest[i++] = flatCoordinates[j + k];\n    }\n  }\n\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {memoizeOne} from '../functions.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {abstract} from '../util.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/** @type {import('../coordinate.js').Coordinate} */\nconst tmpPoint = [NaN, NaN];\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return this.closestPointXY(x, y, tmpPoint, Number.MIN_VALUE) === 0;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            const transformed = transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            const projTransform = getTransform(sourceProj, destination);\n            if (projTransform) {\n              return projTransform(transformed, transformed, stride);\n            }\n            return transformed;\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {abstract} from '../util.js';\nimport Geometry from './Geometry.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(\n        this.flatCoordinates,\n        this.flatCoordinates,\n        this.layout.startsWith('XYZ') ? 3 : 2,\n        this.stride,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  const x0 = flatCoordinates[end - stride];\n  const y0 = flatCoordinates[end - stride + 1];\n  let dx1 = 0;\n  let dy1 = 0;\n  for (; offset < end; offset += stride) {\n    const dx2 = flatCoordinates[offset] - x0;\n    const dy2 = flatCoordinates[offset + 1] - y0;\n    twiceArea += dy1 * dx2 - dx1 * dy2;\n    dx1 = dx2;\n    dy1 = dy2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {squaredDistance as squaredDx} from '../math.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n\n/**\n * Calculate the intersection point of two line segments.\n * Reference: https://stackoverflow.com/a/72474223/2389327\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} segment1 The first line segment as an array of two points.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} segment2 The second line segment as an array of two points.\n * @return {import(\"../../coordinate.js\").Coordinate|undefined} The intersection point or `undefined` if no intersection.\n */\nexport function getIntersectionPoint(segment1, segment2) {\n  const [a, b] = segment1;\n  const [c, d] = segment2;\n  const t =\n    ((a[0] - c[0]) * (c[1] - d[1]) - (a[1] - c[1]) * (c[0] - d[0])) /\n    ((a[0] - b[0]) * (c[1] - d[1]) - (a[1] - b[1]) * (c[0] - d[0]));\n  const u =\n    ((a[0] - c[0]) * (a[1] - b[1]) - (a[1] - c[1]) * (a[0] - b[0])) /\n    ((a[0] - b[0]) * (c[1] - d[1]) - (a[1] - b[1]) * (c[0] - d[0]));\n\n  // Check if lines actually intersect\n  if (0 <= t && t <= 1 && 0 <= u && u <= 1) {\n    return [a[0] + t * (b[0] - a[0]), a[1] + t * (b[1] - a[1])];\n  }\n  return undefined;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {import('../../extent.js').Extent} [coordinatesExtent] Coordinates extent\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n  coordinatesExtent,\n) {\n  coordinatesExtent =\n    coordinatesExtent ??\n    extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (\n    (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) ||\n    (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3])\n  ) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension,\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n          ? flatCoordinates[o + i]\n          : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate,\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t,\n      ),\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate,\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate,\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false,\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.lastChild.remove();\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/color\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {clamp, toFixed} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Color to indicate that no color should be rendered. This is meant to be used for per-reference\n * comparisons only.\n * @type {Color}\n */\nexport const NO_COLOR = [NaN, NaN, NaN, 0];\n\nlet colorParseContext;\n/**\n * @return {CanvasRenderingContext2D} The color parse context\n */\nfunction getColorParseContext() {\n  if (!colorParseContext) {\n    colorParseContext = createCanvasContext2D(1, 1, undefined, {\n      willReadFrequently: true,\n      desynchronized: true,\n    });\n  }\n  return colorParseContext;\n}\n\nconst rgbModernRegEx =\n  /^rgba?\\(\\s*(\\d+%?)\\s+(\\d+%?)\\s+(\\d+%?)(?:\\s*\\/\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst rgbLegacyAbsoluteRegEx =\n  /^rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)(?:\\s*,\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst rgbLegacyPercentageRegEx =\n  /^rgba?\\(\\s*(\\d+%)\\s*,\\s*(\\d+%)\\s*,\\s*(\\d+%)(?:\\s*,\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst hexRegEx = /^#([\\da-f]{3,4}|[\\da-f]{6}|[\\da-f]{8})$/i;\n\n/**\n * @param {string} s Color component as number or percentage.\n * @param {number} divider Divider for percentage.\n * @return {number} Color component.\n */\nfunction toColorComponent(s, divider) {\n  return s.endsWith('%')\n    ? Number(s.substring(0, s.length - 1)) / divider\n    : Number(s);\n}\n\n/**\n * @param {string} color Color string.\n */\nfunction throwInvalidColor(color) {\n  throw new Error('failed to parse \"' + color + '\" as color');\n}\n\n/**\n * @param {string} color Color string.\n * @return {Color} RGBa color array.\n */\nfunction parseRgba(color) {\n  // Fast lane for rgb(a) colors\n  if (color.toLowerCase().startsWith('rgb')) {\n    const rgb =\n      color.match(rgbLegacyAbsoluteRegEx) ||\n      color.match(rgbModernRegEx) ||\n      color.match(rgbLegacyPercentageRegEx);\n    if (rgb) {\n      const alpha = rgb[4];\n      const rgbDivider = 100 / 255;\n      return [\n        clamp((toColorComponent(rgb[1], rgbDivider) + 0.5) | 0, 0, 255),\n        clamp((toColorComponent(rgb[2], rgbDivider) + 0.5) | 0, 0, 255),\n        clamp((toColorComponent(rgb[3], rgbDivider) + 0.5) | 0, 0, 255),\n        alpha !== undefined ? clamp(toColorComponent(alpha, 100), 0, 1) : 1,\n      ];\n    }\n    throwInvalidColor(color);\n  }\n  // Fast lane for hex colors (also with alpha)\n  if (color.startsWith('#')) {\n    if (hexRegEx.test(color)) {\n      const hex = color.substring(1);\n      const step = hex.length <= 4 ? 1 : 2;\n      const colorFromHex = [0, 0, 0, 255];\n      for (let i = 0, ii = hex.length; i < ii; i += step) {\n        let colorComponent = parseInt(hex.substring(i, i + step), 16);\n        if (step === 1) {\n          colorComponent += colorComponent << 4;\n        }\n        colorFromHex[i / step] = colorComponent;\n      }\n      colorFromHex[3] = colorFromHex[3] / 255;\n      return colorFromHex;\n    }\n    throwInvalidColor(color);\n  }\n  // Use canvas color serialization to parse the color into hex or rgba\n  // See https://www.w3.org/TR/2021/SPSD-2dcontext-20210128/#serialization-of-a-color\n  const context = getColorParseContext();\n  context.fillStyle = '#abcdef';\n  let invalidCheckFillStyle = context.fillStyle;\n  context.fillStyle = color;\n  if (context.fillStyle === invalidCheckFillStyle) {\n    context.fillStyle = '#fedcba';\n    invalidCheckFillStyle = context.fillStyle;\n    context.fillStyle = color;\n    if (context.fillStyle === invalidCheckFillStyle) {\n      throwInvalidColor(color);\n    }\n  }\n  const colorString = context.fillStyle;\n  if (colorString.startsWith('#') || colorString.startsWith('rgba')) {\n    return parseRgba(colorString);\n  }\n  context.clearRect(0, 0, 1, 1);\n  context.fillRect(0, 0, 1, 1);\n  const colorFromImage = Array.from(context.getImageData(0, 0, 1, 1).data);\n  colorFromImage[3] = toFixed(colorFromImage[3] / 255, 3);\n  return colorFromImage;\n}\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n// The functions b1, b2, a1, a2, rgbaToLcha and lchaToRgba below are adapted from\n// https://stackoverflow.com/a/67219995/2389327\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction b1(v) {\n  return v > 0.0031308 ? Math.pow(v, 1 / 2.4) * 269.025 - 14.025 : v * 3294.6;\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction b2(v) {\n  return v > 0.2068965 ? Math.pow(v, 3) : (v - 4 / 29) * (108 / 841);\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction a1(v) {\n  return v > 10.314724 ? Math.pow((v + 14.025) / 269.025, 2.4) : v / 3294.6;\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction a2(v) {\n  return v > 0.0088564 ? Math.pow(v, 1 / 3) : v / (108 / 841) + 4 / 29;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const r = a1(color[0]);\n  const g = a1(color[1]);\n  const b = a1(color[2]);\n  const y = a2(r * 0.222488403 + g * 0.716873169 + b * 0.06060791);\n  const l = 500 * (a2(r * 0.452247074 + g * 0.399439023 + b * 0.148375274) - y);\n  const q = 200 * (y - a2(r * 0.016863605 + g * 0.117638439 + b * 0.865350722));\n  const h = Math.atan2(q, l) * (180 / Math.PI);\n  return [\n    116 * y - 16,\n    Math.sqrt(l * l + q * q),\n    h < 0 ? h + 360 : h,\n    color[3],\n  ];\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const l = (color[0] + 16) / 116;\n  const c = color[1];\n  const h = (color[2] * Math.PI) / 180;\n  const y = b2(l);\n  const x = b2(l + (c / 500) * Math.cos(h));\n  const z = b2(l - (c / 200) * Math.sin(h));\n  const r = b1(x * 3.021973625 - y * 1.617392459 - z * 0.404875592);\n  const g = b1(x * -0.943766287 + y * 1.916279586 + z * 0.027607165);\n  const b = b1(x * 0.069407491 - y * 0.22898585 + z * 1.159737864);\n  return [\n    clamp((r + 0.5) | 0, 0, 255),\n    clamp((g + 0.5) | 0, 0, 255),\n    clamp((b + 0.5) | 0, 0, 255),\n    color[3],\n  ];\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (s === 'none') {\n    return NO_COLOR;\n  }\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throwInvalidColor(s);\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throwInvalidColor(s);\n    }\n  }\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch {\n    return false;\n  }\n}\n","/**\n * @module ol/Image\n */\nimport ImageState from './ImageState.js';\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {Loader|null}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              (CREATE_IMAGE_BITMAP && image instanceof ImageBitmap) ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 1024;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `1024`. Change this value when\n   * your map uses more than 1024 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/IconImage\n */\n\nimport {decodeFallback} from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport EventTarget from '../events/Target.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const ctx = createCanvasContext2D(\n      Math.ceil(image.width * pixelRatio),\n      Math.ceil(image.height * pixelRatio),\n    );\n    const canvas = ctx.canvas;\n\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          const onChange = () => {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          };\n          this.addEventListener(EventType.CHANGE, onChange);\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image && 'src' in image ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {toString} from './color.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   * @param {number} [index] Render order index.\n   */\n  drawFeature(feature, style, index) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z0-9]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {getFontParameters} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text,\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text,\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        const [style, weight, family] = font.split('\\n');\n        if (isAvailable(style, weight, family)) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      lineHeight = 0;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {toFixed} from '../../math.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   * @override\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   * @override\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   * @override\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   * @override\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutter,\n  index,\n) {\n  const loadingPromises = [];\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let loading = true;\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      loading = false;\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n    }\n    if (loading) {\n      loadingPromises.push(imageStyle.ready());\n    }\n  }\n  const fillStyle = style.getFill();\n  if (fillStyle && fillStyle.loading()) {\n    loadingPromises.push(fillStyle.ready());\n  }\n  const loading = loadingPromises.length > 0;\n  if (loading) {\n    Promise.all(loadingPromises).then(() => listener(null));\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutter,\n    index,\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutter,\n  index,\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform,\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      index,\n      declutter,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer(),\n    index,\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup,\n  index,\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup,\n      index,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && imageStyle && hasText ? {} : undefined;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && hasImage && hasText ? {} : undefined;\n  if (hasImage) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n","/**\n * @module ol/featureloader\n */\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), a\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").FeatureLike]\n * @typedef {(\n *           extent: import(\"./extent.js\").Extent,\n *           resolution: number,\n *           projection: import(\"./proj/Projection.js\").default,\n *           success?: (features: Array<FeatureType>) => void,\n *           failure?: () => void) => void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<FeatureType>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure,\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true,\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      try {\n        /** @type {Document|Node|Object|string|undefined} */\n        let source;\n        if (type == 'text' || type == 'json') {\n          source = xhr.responseText;\n        } else if (type == 'xml') {\n          source = xhr.responseXML || xhr.responseText;\n        } else if (type == 'arraybuffer') {\n          source = /** @type {ArrayBuffer} */ (xhr.response);\n        }\n        if (source) {\n          success(\n            /** @type {Array<FeatureType>} */\n            (\n              format.readFeatures(source, {\n                extent: extent,\n                featureProjection: projection,\n              })\n            ),\n            format.readProjection(source),\n          );\n        } else {\n          failure();\n        }\n      } catch {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @return {FeatureLoader<FeatureType>} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<FeatureType>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector.js\").default<FeatureType>}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<FeatureType>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      (features, dataProjection) => {\n        this.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      () => {\n        this.changed();\n        if (failure !== undefined) {\n          failure();\n        }\n      },\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection),\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z,\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection),\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride,\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {extend} from '../array.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {memoizeOne} from '../functions.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.ends_ = ends || null;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2,\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        this.ends_,\n        2,\n        flatCenter,\n        0,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5,\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0,\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_,\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_?.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_,\n    );\n  }\n\n  /**\n   * @return {Array<number>|null} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_,\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds()),\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = renderFeature.getEnds();\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {import(\"rbush\").BBox & {value: T}} Entry\n * @template T\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template {Object} T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     * @type {RBush_<Entry<T>>}\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry<T>>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry<T>} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry<T>} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {import(\"rbush\").BBox} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): R} callback Callback.\n   * @return {R|undefined} Callback return value.\n   * @template R\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): R} callback Callback.\n   * @return {R|undefined} Callback return value.\n   * @template R\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): R} callback Callback.\n   * @return {R|undefined} Callback return value.\n   * @template R\n   * @private\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush<T>} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * a simple string (e.g. `'© Acme Inc.'`)\n * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible ?? true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n  if (!Array.isArray(attributionLike)) {\n    attributionLike = [attributionLike];\n  }\n  return (frameState) => attributionLike;\n}\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty} from '../obj.js';\nimport RenderFeature from '../render/Feature.js';\nimport RBush from '../structs/RBush.js';\nimport {getUid} from '../util.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {FeatureType} [feature] Feature.\n   * @param {Array<FeatureType>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {FeatureType|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<FeatureType>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template {import(\"../Feature.js\").FeatureLike} [T=import(\"../Feature.js\").default]\n * @typedef {T extends RenderFeature ? T|Array<T> : T} FeatureClassOrArrayOfRenderFeatures\n */\n\n/***\n * @template Return\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent<FeatureType>, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<FeatureType>|Collection<FeatureType>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default<FeatureType>} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader<FeatureType>} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<FeatureType>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader<import(\"../Feature.js\").FeatureLike>}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<FeatureType>|null}\n     */\n    this.format_ = options.format || null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, this.format_);\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<FeatureType>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import('../Feature.js').FeatureLike|Array<import('../Feature.js').FeatureLike>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<FeatureType>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<FeatureType>} */\n    let collection;\n    /** @type {Array<FeatureType>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if a {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {FeatureType} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature),\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    if (feature instanceof RenderFeature) {\n      return;\n    }\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this,\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    if (feature.getId() !== undefined) {\n      const id = String(feature.getId());\n      if (!(id in this.idIndex_)) {\n        this.idIndex_[id] = feature;\n      } else if (feature instanceof RenderFeature) {\n        const indexedFeature = this.idIndex_[id];\n        if (!(indexedFeature instanceof RenderFeature)) {\n          valid = false;\n        } else if (!Array.isArray(indexedFeature)) {\n          this.idIndex_[id] = [indexedFeature, feature];\n        } else {\n          indexedFeature.push(feature);\n        }\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source',\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<FeatureType>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<FeatureType>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    /** @type {Array<FeatureType>} */\n    const newFeatures = [];\n    /** @type {Array<FeatureType>} */\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<FeatureType>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach((feature) => {\n          this.removeFeatureInternal(feature);\n        });\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * For {@link module:ol/render/Feature~RenderFeature} features, the callback will be\n   * called for all features.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (\n        geometry instanceof RenderFeature ||\n        geometry.intersectsCoordinate(coordinate)\n      ) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (\n          geometry instanceof RenderFeature ||\n          geometry.intersectsExtent(extent)\n        ) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      },\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with a {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<FeatureType>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    /** @type {Array<FeatureType>} */\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent)),\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false` and the features in this source are of type\n   * {@link module:ol/Feature~Feature}.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {FeatureType} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance =\n            geometry instanceof RenderFeature\n              ? 0\n              : geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      },\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()). When `RenderFeature`s\n   * are used, `getFeatureById()` can return an array of `RenderFeature`s. This allows for handling\n   * of `GeometryCollection` geometries, where format readers create one `RenderFeature` per\n   * `GeometryCollection` member.\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {FeatureClassOrArrayOfRenderFeatures<FeatureType>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined\n      ? /** @type {FeatureClassOrArrayOfRenderFeatures<FeatureType>} */ (\n          feature\n        )\n      : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {FeatureType|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default<FeatureType>|null}} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {FeatureType} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature),\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        },\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART),\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          /**\n           * @param {Array<FeatureType>} features Loaded features\n           */\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features,\n              ),\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR),\n            );\n          },\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const obj = loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        return object;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Batch remove features from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {Array<FeatureType>} features Features to remove.\n   * @api\n   */\n  removeFeatures(features) {\n    let removed = false;\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      removed = this.removeFeatureInternal(features[i]) || removed;\n    }\n    if (removed) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove a single feature from the source. If you want to batch remove\n   * features, use the {@link module:ol/source/Vector~VectorSource#removeFeatures #removeFeatures()} method\n   * instead.\n   * @param {FeatureType} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const removed = this.removeFeatureInternal(feature);\n    if (removed) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} True if the feature was removed, false if it was not found.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    if (!(featureKey in this.uidIndex_)) {\n      return false;\n    }\n\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    featureChangeKeys?.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      const idString = id.toString();\n      const indexedFeature = this.idIndex_[idString];\n      if (indexedFeature === feature) {\n        delete this.idIndex_[idString];\n      } else if (Array.isArray(indexedFeature)) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n        if (indexedFeature.length === 1) {\n          this.idIndex_[idString] = indexedFeature[0];\n        }\n      }\n    }\n    delete this.uidIndex_[featureKey];\n    if (this.hasListener(VectorEventType.REMOVEFEATURE)) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature),\n      );\n    }\n    return true;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        break;\n      }\n    }\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n\n  /**\n   * @param {boolean} overlaps The source can have overlapping geometries.\n   */\n  setOverlaps(overlaps) {\n    this.overlaps_ = overlaps;\n    this.changed();\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getUid} from '../util.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is a {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {string} Key of the fill for cache lookup.\n   */\n  getKey() {\n    const fill = this.getColor();\n    if (!fill) {\n      return '';\n    }\n    return fill instanceof CanvasPattern || fill instanceof CanvasGradient\n      ? getUid(fill)\n      : typeof fill === 'object' && 'src' in fill\n        ? fill.src + ':' + fill.offset\n        : asArray(fill).toString();\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/style/Image\n */\nimport {toSize} from '../size.js';\nimport {abstract} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\nimport IconImage from './IconImage.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport ImageStyle from './Image.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    /**\n     * @private\n     */\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    const fillKey = this.fill_?.getKey();\n    const cacheKey =\n      `${pixelRatio},${this.angle_},${this.radius},${this.radius2_},${this.points_},${fillKey}` +\n      Object.values(this.renderOptions_).join(',');\n    let image = /** @type {HTMLCanvasElement} */ (\n      iconImageCache.get(cacheKey, null, null)?.getImage(1)\n    );\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const size = Math.ceil(renderOptions.size * pixelRatio);\n      const context = createCanvasContext2D(size, size);\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      iconImageCache.set(\n        cacheKey,\n        null,\n        null,\n        new IconImage(image, undefined, null, ImageState.LOADED, null),\n      );\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Style\n */\n\nimport {assert} from '../asserts.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * **declutter**: Overlapping symbols and text are decluttered.\n * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport {toSize} from '../size.js';\nimport Fill from './Fill.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {boolean} [keepUpright=true] Whether the text can be rotated 180° to prevent being rendered upside down.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.keepUpright_ = options.keepUpright;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      keepUpright: this.getKeepUpright(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Determine whether the text can be rendered upside down.\n   * @return {boolean|undefined} Keep text upright.\n   * @api\n   */\n  getKeepUpright() {\n    return this.keepUpright_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set whether the text can be rendered upside down.\n   *\n   * @param {boolean} keepUpright Keep text upright.\n   * @api\n   */\n  setKeepUpright(keepUpright) {\n    this.keepUpright_ = keepUpright;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport Relationship from '../../extent/Relationship.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst,\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false,\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds,\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n            index,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n            index,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          undefined,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          undefined,\n          index,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} index Render order index\n   */\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import('../canvas.js').FillStrokeState} [state] State.\n   * @return {import('../canvas.js').FillStrokeState} State.\n   */\n  fillStyleToState(\n    fillStyle,\n    state = /** @type {import('../canvas.js').FillStrokeState} */ ({}),\n  ) {\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale =\n        fillStyleColor &&\n        typeof fillStyleColor === 'object' &&\n        'src' in fillStyleColor\n          ? this.pixelRatio\n          : 1;\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    return state;\n  }\n\n  /**\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {import(\"../canvas.js\").FillStrokeState} State.\n   */\n  strokeStyleToState(\n    strokeStyle,\n    state = /** @type {import('../canvas.js').FillStrokeState} */ ({}),\n  ) {\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n    return state;\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    this.fillStyleToState(fillStyle, state);\n    this.strokeStyleToState(strokeStyle, state);\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align and scale it!\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      state.lineDash ? this.applyPixelRatio(state.lineDash) : null,\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport {containsCoordinate} from '../../extent.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPoint(pointGeometry, feature, index) {\n    if (\n      !this.image_ ||\n      (this.maxExtent &&\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\n    ) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature, index);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature, index);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const filteredFlatCoordinates = [];\n    for (\n      let i = 0, ii = flatCoordinates.length;\n      i < ii;\n      i += multiPointGeometry.getStride()\n    ) {\n      if (\n        !this.maxExtent ||\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\n      ) {\n        filteredFlatCoordinates.push(\n          flatCoordinates[i],\n          flatCoordinates[i + 1],\n        );\n      }\n    }\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false,\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawLineString(lineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride,\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @override\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport {snap} from '../../geom/flat/simplify.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke,\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCircle(circleGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false,\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPolygon(polygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride,\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride,\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1),\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1],\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport {getUid} from '../../util.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textKeepUpright_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride,\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2,\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      const backgroundFill = textState.backgroundFill\n        ? this.createFill(this.fillStyleToState(textState.backgroundFill))\n        : null;\n      const backgroundStroke = textState.backgroundStroke\n        ? this.createStroke(this.strokeStyleToState(textState.backgroundStroke))\n        : null;\n\n      this.beginGeometry(geometry, feature, index);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        backgroundFill,\n        backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const hitDetectionBackgroundFill = backgroundFill\n        ? backgroundFill.slice(0)\n        : null;\n      if (hitDetectionBackgroundFill) {\n        hitDetectionBackgroundFill[1] = defaultFillStyle;\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding,\n        hitDetectionBackgroundFill,\n        backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n      this.declutterMode_,\n      this.textKeepUpright_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n      this.declutterMode_,\n      this.textKeepUpright_,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle,\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle,\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textKeepUpright = textStyle.getKeepUpright();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textKeepUpright_ =\n        textKeepUpright === undefined ? true : textKeepUpright;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ =\n        fillState && fillState.fillStyle\n          ? typeof fillState.fillStyle == 'string'\n            ? fillState.fillStyle\n            : '|' + getUid(fillState.fillStyle)\n          : '';\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_,\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @param {boolean} keepUpright Whether the text needs to be kept upright\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation,\n  keepUpright = true,\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright if the option is selected\n  let reverse = false;\n  if (keepUpright) {\n    if (rotation) {\n      const flat = [beginX, beginY, endX, endY];\n      rotate(flat, 0, 4, 2, rotation, flat, flat);\n      reverse = flat[0] > flat[2];\n    } else {\n      reverse = beginX > endX;\n    }\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @private\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(getSharedCanvasContext2D(), {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          this.push_(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          this.push_(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @param {...*} args Arguments to push to the instructions array.\n   * @private\n   */\n  push_(...args) {\n    const instructions = this.instructions_;\n    const index = this.zIndex + this.offset_;\n    if (!instructions[index]) {\n      instructions[index] = [];\n    }\n    instructions[index].push(...args);\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.push_(args);\n    return this;\n  };\n\n  /**\n   * Push a function that renders to the context directly.\n   * @param {function(CanvasRenderingContext2D): void} render Function.\n   */\n  pushFunction(render) {\n    this.push_(render);\n  }\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; ++i) {\n        const property = instructionsAtIndex[i];\n        if (typeof property === 'function') {\n          property(context);\n          continue;\n        }\n        const instructionAtIndex = instructionsAtIndex[++i];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/render/canvas/Executor\n */\nimport {equals} from '../../array.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport ZIndexContext from '../canvas/ZIndexContext.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\n\n/**\n * @typedef {import('../../structs/RBush.js').Entry<import('../../Feature.js').FeatureLike>} DeclutterEntry\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {DeclutterEntry} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, import(\"../../style/Style.js\").DeclutterMode): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {DeclutterEntry} Declutter rbush entry.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\n/**\n * Converts rich text to plain text for text along lines.\n * @param {string} result The resulting plain text.\n * @param {string} part Item of the rich text array.\n * @param {number} index Index of the item in the rich text array.\n * @return {string} The resulting plain text.\n */\nfunction richTextToPlainText(result, part, index) {\n  if (index % 2 === 0) {\n    result += part;\n  }\n  return result;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\n   */\n  constructor(\n    resolution,\n    pixelRatio,\n    overlaps,\n    instructions,\n    deferredRendering,\n  ) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.alignAndScaleFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\n     */\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\n  }\n\n  /**\n   * @return {ZIndexContext} ZIndex context.\n   */\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign,\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = Array.isArray(text)\n      ? text\n      : String(text).split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks,\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\n      context.fillStyle = /** @type {string} */ (fillInstruction[1]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction),\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature,\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY,\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent,\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent,\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    scaledCanvasSize,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale,\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign,\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    scaledCanvasSize,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree,\n  ) {\n    const zIndexContext = this.zIndexContext_;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_,\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      /** @type {import('../../style/Style.js').DeclutterMode} */\n      declutterMode,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          declutterMode = instruction[14] || 'declutter';\n          const declutterImageWithText =\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey,\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFillInstruction, backgroundStrokeInstruction;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFillInstruction = /** @type {Array<*>} */ (\n              instruction[17]\n            );\n            backgroundStrokeInstruction = /** @type {Array<*>} */ (\n              instruction[18]\n            );\n          } else {\n            padding = defaultPadding;\n            backgroundFillInstruction = null;\n            backgroundStrokeInstruction = null;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              !!backgroundFillInstruction || !!backgroundStrokeInstruction,\n              feature,\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              scaledCanvasSize,\n              image,\n              dimensions,\n              opacity,\n              backgroundFillInstruction,\n              backgroundStrokeInstruction,\n            ];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  // We now have the image for an image+text combination.\n                  declutterImageWithText[index] = {args, declutterMode};\n                  // Don't render anything for now, wait for the text.\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              // We now have image and text for an image+text combination.\n              let renderImage, renderText;\n              if (\n                imageArgs &&\n                (imageDeclutterMode !== 'declutter' ||\n                  !declutterTree.collides(imageDeclutterBox))\n              ) {\n                renderImage = true;\n              }\n              if (\n                declutterMode !== 'declutter' ||\n                !declutterTree.collides(dimensions.declutterBox)\n              ) {\n                renderText = true;\n              }\n              if (\n                imageDeclutterMode === 'declutter' &&\n                declutterMode === 'declutter'\n              ) {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== 'none') {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== 'none') {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string|Array<string>} */ (instruction[11]);\n          if (Array.isArray(text)) {\n            //FIXME Add support for rich text along lines\n            text = text.reduce(richTextToPlainText, '');\n          }\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n          declutterMode = instruction[14] || 'declutter';\n\n          const textKeepUpright = /** @type {boolean} */ (instruction[15]);\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_,\n              textKeepUpright,\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree && declutterMode !== 'none') {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(\n              feature,\n              currentGeometry,\n              declutterMode,\n            );\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          context.moveTo(x, y);\n          prevX = (x + 0.5) | 0;\n          prevY = (y + 0.5) | 0;\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          this.alignAndScaleFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree,\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      scaledCanvasSize,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree,\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent,\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      [context.canvas.width, context.canvas.height],\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent,\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport {ascending, descending} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport Executor from './Executor.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const ALL = [\n  'Polygon',\n  'Circle',\n  'LineString',\n  'Image',\n  'Text',\n  'Default',\n];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const DECLUTTER = ['Image', 'Text'];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const NON_DECLUTTER = ALL.filter(\n  (builderType) => !DECLUTTER.includes(builderType),\n);\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer,\n    deferredRendering,\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.renderedContext_ = null;\n\n    /**\n     * @private\n     * @type {Object<number, Array<import(\"./ZIndexContext.js\").default>>}\n     */\n    this.deferredZIndexContexts_ = {};\n\n    this.createExecutors_(allInstructions, deferredRendering);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   * @param {boolean} deferredRendering Enable deferred rendering.\n   */\n  createExecutors_(allInstructions, deferredRendering) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          deferredRendering,\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures,\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1],\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /** @type {import(\"../../extent.js\").Extent|undefined} */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent,\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    /** @type {import(\"../canvas.js\").BuilderType} */\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import('../../style/Style.js').DeclutterMode} declutterMode Declutter mode.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry, declutterMode) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize,\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            declutterMode === 'none' ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ALL.length - 1; j >= 0; --j) {\n        builderType = ALL[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent,\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} targetContext Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ALL}\n   * @param {import(\"rbush\").default<import('./Executor.js').DeclutterEntry>|null} [declutterTree] Declutter tree.\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\n   */\n  execute(\n    targetContext,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree,\n  ) {\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(declutterTree ? descending : ascending);\n\n    builderTypes = builderTypes ? builderTypes : ALL;\n    const maxBuilderTypes = ALL.length;\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      const replays = this.executorsByZIndex_[zIndexKey];\n      for (let j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        const replay = replays[builderType];\n        if (replay !== undefined) {\n          const zIndexContext =\n            declutterTree === null ? undefined : replay.getZIndexContext();\n          const context = zIndexContext\n            ? zIndexContext.getContext()\n            : targetContext;\n          const requireClip =\n            this.maxExtent_ &&\n            builderType !== 'Image' &&\n            builderType !== 'Text';\n          if (requireClip) {\n            context.save();\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            this.clip(context, transform);\n          }\n          if (\n            !zIndexContext ||\n            builderType === 'Text' ||\n            builderType === 'Image'\n          ) {\n            replay.execute(\n              context,\n              scaledCanvasSize,\n              transform,\n              viewRotation,\n              snapToPixel,\n              declutterTree,\n            );\n          } else {\n            zIndexContext.pushFunction((context) =>\n              replay.execute(\n                context,\n                scaledCanvasSize,\n                transform,\n                viewRotation,\n                snapToPixel,\n                declutterTree,\n              ),\n            );\n          }\n          if (requireClip) {\n            context.restore();\n          }\n          if (zIndexContext) {\n            zIndexContext.offset();\n            const index = zs[i] * maxBuilderTypes + j;\n            if (!this.deferredZIndexContexts_[index]) {\n              this.deferredZIndexContexts_[index] = [];\n            }\n            this.deferredZIndexContexts_[index].push(zIndexContext);\n          }\n        }\n      }\n    }\n\n    this.renderedContext_ = targetContext;\n  }\n\n  getDeferredZIndexContexts() {\n    return this.deferredZIndexContexts_;\n  }\n\n  getRenderedContext() {\n    return this.renderedContext_;\n  }\n\n  renderDeferred() {\n    const deferredZIndexContexts = this.deferredZIndexContexts_;\n    const zs = Object.keys(deferredZIndexContexts).map(Number).sort(ascending);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      deferredZIndexContexts[zs[i]].forEach((zIndexContext) => {\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\n        zIndexContext.clear();\n      });\n      deferredZIndexContexts[zs[i]].length = 0;\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/style/Icon\n */\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {get as getIconImage} from './IconImage.js';\nimport ImageStyle from './Image.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if ('complete' in image) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @private\n     */\n    this.initialOptions_;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   * @override\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   * @override\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport {ascending} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {clamp} from '../../math.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {Icon} from '../../style.js';\nimport CanvasImmediateRenderer from './Immediate.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} [squaredTolerance] Squared tolerance.\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation,\n  squaredTolerance,\n  projection,\n) {\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation,\n    squaredTolerance,\n    projection\n      ? getTransformFromProjections(getUserProjection(), projection)\n      : null,\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false},\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          }),\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style,\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/Layer\n */\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport EventType from '../events/EventType.js';\nimport {abstract} from '../util.js';\n\nconst maxStaleKeys = 5;\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.staleKeys_ = new Array();\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.maxStaleKeys = maxStaleKeys;\n  }\n\n  /**\n   * @return {Array<string>} Get the list of stale keys.\n   */\n  getStaleKeys() {\n    return this.staleKeys_;\n  }\n\n  /**\n   * @param {string} key The new stale key.\n   */\n  prependStaleKey(key) {\n    this.staleKeys_.unshift(key);\n    if (this.staleKeys_.length > this.maxStaleKeys) {\n      this.staleKeys_.length = this.maxStaleKeys;\n    }\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getHeight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n} from '../../extent.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  equivalent,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport LayerRenderer from '../Layer.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS transform matrix.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && equivalent(context.canvas.style.transform, transform)) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @protected\n   */\n  prepareContainer(frameState, target) {\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    if (!this.containerReused) {\n      const canvas = this.context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        this.context.clearRect(0, 0, width, height);\n      }\n      if (canvasTransform !== canvas.style.transform) {\n        canvas.style.transform = canvasTransform;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getHeight,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport RenderEventType from '../../render/EventType.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport ExecutorGroup, {\n  ALL,\n  DECLUTTER,\n  NON_DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {getUid} from '../../util.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  getTolerance as getRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.clipped_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedPixelRatio_ = 1;\n\n    /**\n     * @private\n     * @type {import(\"../../render.js\").OrderFunction|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedFrameDeclutter_;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.targetContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} [declutterable] `true` to only render declutterable items,\n   *     `false` to only render non-declutterable items, `undefined` to render all.\n   */\n  renderWorlds(executorGroup, frameState, declutterable) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const declutter = this.getLayer().getDeclutter();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      let transform = this.getRenderTransform(\n        center,\n        resolution,\n        0,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth,\n      );\n      if (frameState.declutter) {\n        transform = transform.slice(0);\n      }\n      executorGroup.execute(\n        context,\n        [context.canvas.width, context.canvas.height],\n        transform,\n        rotation,\n        snapToPixel,\n        declutterable === undefined\n          ? ALL\n          : declutterable\n            ? DECLUTTER\n            : NON_DECLUTTER,\n        declutterable\n          ? declutter && frameState.declutter[declutter]\n          : undefined,\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * @private\n   */\n  setDrawContext_() {\n    if (this.opacity_ !== 1) {\n      this.targetContext_ = this.context;\n      this.context = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetDrawContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.targetContext_.globalAlpha;\n      this.targetContext_.globalAlpha = this.opacity_;\n      this.targetContext_.drawImage(this.context.canvas, 0, 0);\n      this.targetContext_.globalAlpha = alpha;\n      releaseCanvas(this.context);\n      canvasPool.push(this.context.canvas);\n      this.context = this.targetContext_;\n      this.targetContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!this.replayGroup_ || !this.getLayer().getDeclutter()) {\n      return;\n    }\n    this.renderWorlds(this.replayGroup_, frameState, true);\n  }\n\n  /**\n   * Render deferred instructions.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferredInternal(frameState) {\n    if (!this.replayGroup_) {\n      return;\n    }\n    this.replayGroup_.renderDeferred();\n    if (this.clipped_) {\n      this.context.restore();\n    }\n    this.resetDrawContext_();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    this.opacity_ = layerState.opacity;\n    const viewState = frameState.viewState;\n\n    this.prepareContainer(frameState, target);\n    const context = this.context;\n\n    const replayGroup = this.replayGroup_;\n    let render = replayGroup && !replayGroup.isEmpty();\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return this.container;\n      }\n    }\n\n    this.setDrawContext_();\n\n    this.preRender(context, frameState);\n\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    this.clipped_ = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      this.clipped_ = render && !containsExtent(layerExtent, frameState.extent);\n      if (this.clipped_) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(\n        replayGroup,\n        frameState,\n        this.getLayer().getDeclutter() ? false : undefined,\n      );\n    }\n\n    if (!frameState.declutter && this.clipped_) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    if (!frameState.declutter) {\n      this.resetDrawContext_();\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   * @override\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (\n        this.frameState &&\n        !this.hitDetectionImageData_ &&\n        !this.animatingOrInteracting_\n      ) {\n        const size = this.frameState.size.slice();\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0,\n          ).slice(),\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX -= worldWidth;\n          }\n        }\n        const userProjection = getUserProjection();\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation,\n          getSquaredRenderTolerance(resolution, this.renderedPixelRatio_),\n          userProjection ? projection : null,\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_),\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   * @override\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const declutter = this.getLayer().getDeclutter();\n    return this.replayGroup_.forEachFeatureAtCoordinate(\n      coordinate,\n      resolution,\n      rotation,\n      hitTolerance,\n      featureCallback,\n      declutter\n        ? frameState.declutter?.[declutter]?.all().map((item) => item.value)\n        : null,\n    );\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @override\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution,\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      this.renderedFrameDeclutter_ === !!frameState.declutter &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio,\n    );\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection,\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @param {number} index Index.\n       */\n      (feature, index) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            this.getLayer().getDeclutter(),\n            index,\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i], i);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer(),\n      !!frameState.declutter,\n    );\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedFrameDeclutter_ = !!frameState.declutter;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.renderedPixelRatio_ = pixelRatio;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {fromString as colorFromString} from '../color.js';\nimport {toSize} from '../size.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * See below for details on the available operators (with notes for those that are WebGL or Canvas only).\n *\n * Reading operators:\n *   `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   `['get', attributeName]` fetches a feature property value, similar to `feature.get('attributeName')`.\n *   `['get', attributeName, keyOrArrayIndex, ...]` (Canvas only) Access nested properties and array items of a\n *     feature property. The result is `undefined` when there is nothing at the specified key or index.\n *   `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   `['resolution']` returns the current resolution\n *   `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   `['zoom']` The current zoom level (WebGL only).\n *   `['line-metric']` returns the M component of the current point on a line (WebGL only); in case where the geometry layout of the line\n *      does not contain an M component (e.g. XY or XYZ), 0 is returned; 0 is also returned for geometries other than lines.\n *      Please note that the M component will be linearly interpolated between the two points composing a segment.\n *\n * Math operators:\n *   `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   `['/', value1, value2]` divides `value1` by `value2`\n *   `['+', value1, value2, ...]` adds the values\n *   `['-', value1, value2]` subtracts `value2` from `value1`\n *   `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   `['abs', value1]` returns the absolute value of `value1`\n *   `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['string', value1, value2, ...]` returns the first value in the list that evaluates to a string.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 'default value']]`\n *     (Canvas only).\n *   * `['number', value1, value2, ...]` returns the first value in the list that evaluates to a number.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 42]]`\n *     (Canvas only).\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: `['coalesce', ['get','propertyname'], 'default value']]`\n *     (Canvas only).\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['has', attributeName, keyOrArrayIndex, ...]` returns `true` if feature properties include the (nested) key `attributeName`,\n *     `false` otherwise.\n *     Note that for WebGL layers, the hardcoded value `-9999999` is used to distinguish when a property is not defined.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const SizeType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n  [SizeType]: 'size',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * @param {number} type The type.\n * @return {boolean} The type is one of the specific types (not any or a union type).\n */\nfunction isSpecific(type) {\n  return type in typeNames;\n}\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    if (!isSpecific(type)) {\n      throw new Error(\n        `literal expressions must have a specific type, got ${typeName(type)}`,\n      );\n    }\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n * @property {boolean} mapState The style uses the map state (view state or time elapsed).\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n    mapState: false,\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {number} expectedType The expected type.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, expectedType, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded ? 'true' : 'false');\n      }\n      if (!includesType(expectedType, BooleanType)) {\n        throw new Error(\n          `got a boolean, but expected ${typeName(expectedType)}`,\n        );\n      }\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      if (isType(expectedType, SizeType)) {\n        return new LiteralExpression(SizeType, toSize(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded.toString());\n      }\n      if (!includesType(expectedType, NumberType)) {\n        throw new Error(`got a number, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      if (isType(expectedType, ColorType)) {\n        return new LiteralExpression(ColorType, colorFromString(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (!includesType(expectedType, StringType)) {\n        throw new Error(`got a string, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, expectedType, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('expected an array of numbers');\n    }\n  }\n\n  if (isType(expectedType, SizeType)) {\n    if (encoded.length !== 2) {\n      throw new Error(\n        `expected an array of two values for a size, got ${encoded.length}`,\n      );\n    }\n    return new LiteralExpression(SizeType, encoded);\n  }\n\n  if (isType(expectedType, ColorType)) {\n    if (encoded.length === 3) {\n      return new LiteralExpression(ColorType, [...encoded, 1]);\n    }\n    if (encoded.length === 4) {\n      return new LiteralExpression(ColorType, encoded);\n    }\n    throw new Error(\n      `expected an array of 3 or 4 values for a color, got ${encoded.length}`,\n    );\n  }\n\n  if (!includesType(expectedType, NumberArrayType)) {\n    throw new Error(\n      `got an array of numbers, but expected ${typeName(expectedType)}`,\n    );\n  }\n\n  return new LiteralExpression(NumberArrayType, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  LineMetric: 'line-metric',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n  Has: 'has',\n};\n\n/**\n * @typedef {function(Array, number, ParsingContext):Expression} Parser\n *\n * Second argument is the expected type.\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Var]: createCallExpressionParser(hasArgsCount(1, 1), withVarArgs),\n  [Ops.Has]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Id]: createCallExpressionParser(usesFeatureId, withNoArgs),\n  [Ops.Concat]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(StringType),\n  ),\n  [Ops.GeometryType]: createCallExpressionParser(usesGeometryType, withNoArgs),\n  [Ops.LineMetric]: createCallExpressionParser(withNoArgs),\n  [Ops.Resolution]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Zoom]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Time]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Any]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.NotEqual]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.GreaterThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.GreaterThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Multiply]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Coalesce]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Divide]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createCallExpressionParser(\n    hasArgsCount(1, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createCallExpressionParser(\n    hasArgsCount(4, Infinity),\n    hasEvenArgs,\n    withMatchArgs,\n  ),\n  [Ops.Between]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createCallExpressionParser(\n    hasArgsCount(6, Infinity),\n    hasEvenArgs,\n    withInterpolateArgs,\n  ),\n  [Ops.Case]: createCallExpressionParser(\n    hasArgsCount(3, Infinity),\n    hasOddArgs,\n    withCaseArgs,\n  ),\n  [Ops.In]: createCallExpressionParser(hasArgsCount(2, 2), withInArgs),\n  [Ops.Number]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.String]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createCallExpressionParser(\n    hasArgsCount(1, 4),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createCallExpressionParser(\n    hasArgsCount(1, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withPaletteArgs,\n  ),\n  [Ops.ToString]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, number, ParsingContext):Array<Expression>|void} ArgValidator\n *\n * An argument validator applies various checks to an encoded expression arguments and\n * returns the parsed arguments if any.  The second argument is the return type of the call expression.\n */\n\n/**\n * @type {ArgValidator}\n */\nfunction withGetArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n  const args = new Array(argsCount);\n  for (let i = 0; i < argsCount; ++i) {\n    const key = encoded[i + 1];\n    switch (typeof key) {\n      case 'number': {\n        args[i] = new LiteralExpression(NumberType, key);\n        break;\n      }\n      case 'string': {\n        args[i] = new LiteralExpression(StringType, key);\n        break;\n      }\n      default: {\n        throw new Error(\n          `expected a string key or numeric array index for a get operation, got ${key}`,\n        );\n      }\n    }\n    if (i === 0) {\n      context.properties.add(String(key));\n    }\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withVarArgs(encoded, returnType, context) {\n  const name = encoded[1];\n  if (typeof name !== 'string') {\n    throw new Error('expected a string argument for var operation');\n  }\n  context.variables.add(name);\n\n  return [new LiteralExpression(StringType, name)];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesFeatureId(encoded, returnType, context) {\n  context.featureId = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesGeometryType(encoded, returnType, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesMapState(encoded, returnType, context) {\n  context.mapState = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withNoArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction hasArgsCount(minArgs, maxArgs) {\n  return function (encoded, returnType, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withArgsOfReturnType(encoded, returnType, context) {\n  const argCount = encoded.length - 1;\n  /**\n   * @type {Array<Expression>}\n   */\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    const expression = parse(encoded[i + 1], returnType, context);\n    args[i] = expression;\n  }\n  return args;\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsOfType(argType) {\n  return function (encoded, returnType, context) {\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], argType, context);\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasOddArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `expected an odd number of arguments for ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasEvenArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `expected an even number of arguments for operation ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withMatchArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n\n  const inputType = StringType | NumberType | BooleanType;\n\n  const input = parse(encoded[1], inputType, context);\n\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    try {\n      const match = parse(encoded[i + 2], input.type, context);\n      args[i] = match;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of match expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 3], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} of match expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [input, ...args, fallback];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withInterpolateArgs(encoded, returnType, context) {\n  const interpolationType = encoded[1];\n  /**\n   * @type {number}\n   */\n  let base;\n  switch (interpolationType[0]) {\n    case 'linear':\n      base = 1;\n      break;\n    case 'exponential':\n      const b = interpolationType[1];\n      if (typeof b !== 'number' || b <= 0) {\n        throw new Error(\n          `expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(b)} instead`,\n        );\n      }\n      base = b;\n      break;\n    default:\n      throw new Error(\n        `invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n      );\n  }\n\n  const interpolation = new LiteralExpression(NumberType, base);\n\n  let input;\n  try {\n    input = parse(encoded[2], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse argument 1 in interpolate expression: ${err.message}`,\n    );\n  }\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    try {\n      const stop = parse(encoded[i + 3], NumberType, context);\n      args[i] = stop;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} for interpolate expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 4], returnType, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 3} for interpolate expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withCaseArgs(encoded, returnType, context) {\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    try {\n      const condition = parse(encoded[i + 1], BooleanType, context);\n      args[i] = condition;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i} of case expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 2], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of case expression: ${err.message}`,\n      );\n    }\n  }\n\n  args[args.length - 1] = fallback;\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withInArgs(encoded, returnType, context) {\n  let haystack = encoded[2];\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `the second argument for the \"in\" operator must be an array`,\n    );\n  }\n  /**\n   * @type {number}\n   */\n  let needleType;\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `for the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `failed to parse \"in\" expression: the literal operator must be followed by an array`,\n      );\n    }\n    haystack = haystack[1];\n    needleType = StringType;\n  } else {\n    needleType = NumberType;\n  }\n\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    try {\n      const arg = parse(haystack[i], needleType, context);\n      args[i] = arg;\n    } catch (err) {\n      throw new Error(\n        `failed to parse haystack item ${i} for \"in\" expression: ${err.message}`,\n      );\n    }\n  }\n\n  const needle = parse(encoded[1], needleType, context);\n  return [needle, ...args];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withPaletteArgs(encoded, returnType, context) {\n  let index;\n  try {\n    index = parse(encoded[1], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse first argument in palette expression: ${err.message}`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('the second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    let color;\n    try {\n      color = parse(colors[i], ColorType, context);\n    } catch (err) {\n      throw new Error(\n        `failed to parse color at index ${i} in palette expression: ${err.message}`,\n      );\n    }\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `the palette color at index ${i} must be a literal value`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {Array<ArgValidator>} validators A chain of argument validators.  The last validator is expected\n * to return the parsed arguments.\n * @return {Parser} The parser.\n */\nfunction createCallExpressionParser(...validators) {\n  return function (encoded, returnType, context) {\n    const operator = encoded[0];\n\n    /**\n     * @type {Array<Expression>}\n     */\n    let args;\n    for (let i = 0; i < validators.length; i++) {\n      const parsed = validators[i](encoded, returnType, context);\n      if (i == validators.length - 1) {\n        if (!parsed) {\n          throw new Error(\n            'expected last argument validator to return the parsed args',\n          );\n        }\n        args = parsed;\n      }\n    }\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {number} returnType The expected return type of the call expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, returnType, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`unknown operator: ${operator}`);\n  }\n  return parser(encoded, returnType, context);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  fromString,\n  lchaToRgba,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\nimport {ColorType, LiteralExpression, Ops, parse} from './expression.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, type, context);\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var:\n    case Ops.Has: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => {\n        const args = expression.args;\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          value = value[key];\n        }\n        return value;\n      };\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    case Ops.Has: {\n      return (context) => {\n        const args = expression.args;\n        if (!(name in context.properties)) {\n          return false;\n        }\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          if (!value || !Object.hasOwn(value, key)) {\n            return false;\n          }\n          value = value[key];\n        }\n        return true;\n      };\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length - 1; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return lchaToRgba(lcha);\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport {NO_COLOR} from '../../color.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    if (flatStyle[prefix + 'fill-color'] === 'none') {\n      // avoids hit detection\n      return (context) => null;\n    }\n\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === NO_COLOR) {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === NO_COLOR) {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluateKeepUpright = booleanEvaluator(\n    flatStyle,\n    prefix + 'keep-upright',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    if (evaluateKeepUpright) {\n      text.setKeepUpright(evaluateKeepUpright(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], ColorType, context);\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport {\n  add as addCoordinate,\n  equals,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {VOID} from './functions.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_?.length) {\n      if (this.resolutions_.length === 1) {\n        return this.resolutions_[0];\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {abstract} from '../util.js';\nimport LayerProperty from './Property.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/layer/Layer\n */\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {intersects} from '../extent.js';\nimport RenderEventType from '../render/EventType.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n      this.clearRenderer();\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n      if (!layerState) {\n        return false;\n      }\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    const getAttributions = this.getSource()?.getAttributions();\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        this.handlePrecompose_,\n        this,\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} renderEvent Render event\n   * @private\n   */\n  handlePrecompose_(renderEvent) {\n    const layerStatesArray =\n      /** @type {import(\"../render/Event.js\").default} */ (renderEvent)\n        .frameState.layerStatesArray;\n    const layerState = this.getLayerState(false);\n    assert(\n      !layerStatesArray.some(\n        (arrayLayerState) => arrayLayerState.layer === layerState.layer,\n      ),\n      'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n    );\n    layerStatesArray.push(layerState);\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * This will clear the renderer so that a new one can be created next time it is needed\n   */\n  clearRenderer() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.clearRenderer();\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/BaseVector\n */\nimport RBush from 'rbush';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport Layer from './Layer.js';\n\n/***\n * @template T\n * @typedef {T extends import(\"../source/Vector.js\").default<infer U extends import(\"../Feature.js\").FeatureLike> ? U : never} ExtractedFeatureType\n */\n\n/**\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @extends {Layer<VectorSourceType, RendererType>}\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/VectorLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<FeatureType, VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   * @override\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   * @override\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {import(\"../render.js\").OrderFunction|null|undefined} Render order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   * @override\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = style === undefined ? createDefaultStyle : style;\n    const styleLike = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(styleLike);\n    this.changed();\n  }\n\n  /**\n   * @param {boolean|string|number} declutter Declutter images and text.\n   * @api\n   */\n  setDeclutter(declutter) {\n    this.declutter_ = declutter ? String(declutter) : undefined;\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type {Array<import(\"../style/flat.js\").Rule>}\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/layer/Vector\n */\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\nimport BaseVectorLayer from './BaseVector.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"./BaseVector.js\").ExtractedFeatureType<VectorSourceType>]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"./BaseVector.js\").ExtractedFeatureType<VectorSourceType>]\n * @extends {BaseVectorLayer<FeatureType, VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorSourceType, FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {abstract} from './util.js';\n\n/**\n * A function that takes a {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes a {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * A key assigned to the tile. This is used in conjunction with a source key\n     * to determine if a cached version of this tile may be used by the renderer.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @private\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n    this.setState(TileState.EMPTY);\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state === TileState.EMPTY) {\n      // no more state changes\n      return;\n    }\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.release();\n    super.disposeInternal();\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport {listenImage} from './Image.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.unlistenImage_();\n    this.image_ = null;\n    super.disposeInternal();\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {PointerEvent|KeyboardEvent|WheelEvent} [EVENT=PointerEvent|KeyboardEvent|WheelEvent]\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     * @private\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     * @private\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   * @override\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   * @override\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport EventType from './events/EventType.js';\nimport Target from './events/Target.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport PointerEventType from './pointer/EventType.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * @private\n     */\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this,\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this,\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent,\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent,\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent,\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this,\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this,\n        ),\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_,\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging,\n      ),\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import('./tilecoord.js').TileCoord, number): number} PriorityFunction\n */\n\n/**\n * @typedef {[import('./Tile.js').default, string, import('./tilecoord.js').TileCoord, number]} TileQueueElement\n */\n\n/**\n * @extends PriorityQueue<TileQueueElement>}\n */\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      (element) => tilePriorityFunction.apply(null, element),\n      (element) => element[0].getKey(),\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {TileQueueElement} element Element.\n   * @return {boolean} The element was added to the queue.\n   * @override\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      const tile = this.dequeue()[0];\n      const tileKey = tile.getKey();\n      const state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {VOID} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.element?.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.element?.remove();\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_ ?? map.getOverlayContainerStopEvent();\n      if (this.element) {\n        target.appendChild(this.element);\n      }\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this),\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {toPromise} from '../functions.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {string|Array<string>|undefined} [attributions] Optional attribution(s) that will always be\n * displayed regardless of the layers rendered\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {string | Array<string> | undefined}\n     */\n    this.attributions_ = options.attributions;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const layers = this.getMap().getAllLayers();\n    const visibleAttributions = new Set(\n      layers.flatMap((layer) => layer.getAttributions(frameState)),\n    );\n    if (this.attributions_ !== undefined) {\n      Array.isArray(this.attributions_)\n        ? this.attributions_.forEach((item) => visibleAttributions.add(item))\n        : visibleAttributions.add(this.attributions_);\n    }\n\n    if (!this.overrideCollapsible_) {\n      const collapsible = !layers.some(\n        (layer) => layer.getSource()?.getAttributionsCollapsible() === false,\n      );\n      this.setCollapsible(collapsible);\n    }\n    return Array.from(visibleAttributions);\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  async updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = await Promise.all(\n      this.collectSourceAttributions_(frameState).map((attribution) =>\n        toPromise(() => attribution),\n      ),\n    );\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    /**\n     * @private\n     */\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel,\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false,\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel,\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * {@link module:ol/control/Zoom~Zoom}\n * {@link module:ol/control/Rotate~Rotate}\n * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n\n  return rootNode instanceof ShadowRoot\n    ? rootNode.host.contains(activeElement)\n    : targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const tabIndexCandidate =\n    rootNode instanceof ShadowRoot ? rootNode.host : targetElement;\n\n  return tabIndexCandidate.hasAttribute('tabindex') ? focus(event) : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent instanceof PointerEvent &&\n    originalEvent.button == 0 &&\n    !(WEBKIT && MAC && originalEvent.ctrlKey)\n  );\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return (\n    pointerEvent instanceof PointerEvent && pointerEvent.pointerType == 'mouse'\n  );\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return (\n    pointerEvt instanceof PointerEvent && pointerEvt.pointerType === 'touch'\n  );\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt instanceof PointerEvent && pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = mapBrowserEvent.originalEvent;\n  return (\n    pointerEvent instanceof PointerEvent &&\n    pointerEvent.isPrimary &&\n    pointerEvent.button === 0\n  );\n};\n","/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/interaction/DragPan\n */\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    if (!this.map_) {\n      return;\n    }\n\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_,\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {mouseActionButton} from '../events/condition.js';\nimport RenderBox from '../render/Box.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ?? {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea ?? 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ?? mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ =\n      options.boxEndCondition ?? this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return false;\n    }\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel,\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n\n    this.box_.setMap(null);\n    this.startPixel_ = null;\n\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   * @override\n   */\n  setActive(active) {\n    if (!active) {\n      this.box_.setMap(null);\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setActive(active);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @override\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n\n    if (oldMap) {\n      this.box_.setMap(null);\n\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setMap(map);\n  }\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport DragBox from './DragBox.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @override\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../pixel.js\").Pixel}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.pixel;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_,\n      );\n      view.adjustZoom(\n        -delta / this.deltaPerZoom_,\n        this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n      );\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft,\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_,\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(\n      view,\n      delta,\n      this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n      this.duration_,\n    );\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX,\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport Kinetic from '../Kinetic.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * {@link module:ol/interaction/DragRotate~DragRotate}\n * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * {@link module:ol/interaction/DragPan~DragPan}\n * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      }),\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/layer/Group\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getIntersection} from '../extent.js';\nimport {clear} from '../obj.js';\nimport {getUid} from '../util.js';\nimport BaseLayer from './Base.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} GroupEventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {GroupEventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`',\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(\n        layers,\n        CollectionEventType.REMOVE,\n        this.handleLayersRemove_,\n        this,\n      ),\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this,\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this),\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution,\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution,\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent,\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {wrapX} from '../coordinate.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE} from '../functions.js';\nimport {inView} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1],\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2,\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed,\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches,\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg,\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg,\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport ObjectEventType from '../ObjectEventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {replaceChildren} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport BaseVectorLayer from '../layer/BaseVector.js';\nimport {inView} from '../layer/Layer.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport MapRenderer from './Map.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @private\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText,\n      map,\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(\n      (a, b) => a.zIndex - b.zIndex,\n    );\n    const declutter = layerStatesArray.some(\n      (layerState) =>\n        layerState.layer instanceof BaseVectorLayer &&\n        layerState.layer.getDeclutter(),\n    );\n    if (declutter) {\n      // Some layers need decluttering, turn on deferred rendering hint\n      frameState.declutter = {};\n    }\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const renderedLayerStates = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n\n      renderedLayerStates.push(layerState);\n    }\n\n    this.declutter(frameState, renderedLayerStates);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {Array<import('../layer/Layer.js').State>} layerStates Layers.\n   */\n  declutter(frameState, layerStates) {\n    if (!frameState.declutter) {\n      return;\n    }\n    for (let i = layerStates.length - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (layer.getDeclutter()) {\n        layer.renderDeclutter(frameState, layerState);\n      }\n    }\n    layerStates.forEach((layerState) =>\n      layerState.layer.renderDeferred(frameState),\n    );\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/Map\n */\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport BaseObject from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {equals} from './array.js';\nimport {assert} from './asserts.js';\nimport {warn} from './console.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport EventType from './events/EventType.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport Layer from './layer/Layer.js';\nimport PointerEventType from './pointer/EventType.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport RenderEventType from './render/EventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport {hasArea} from './size.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {getUid} from './util.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {Object<string, import(\"rbush\").default<import('./render/canvas/Executor.js').DeclutterEntry>>|null} declutter\n * Declutter trees by declutter group.\n * When null, no decluttering is needed because no layers have decluttering enabled.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n *  `tabindex` atribute must be set on the custom element's host element.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderComplete_ = false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @private\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this),\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_,\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      },\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      },\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      },\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options,\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection(),\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default|null} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection(),\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2),\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    );\n  }\n\n  /**\n   * @param {PointerEvent|KeyboardEvent|WheelEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = mapBrowserEvent.originalEvent;\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n\n      const currentDoc =\n        rootNode instanceof ShadowRoot\n          ? rootNode.host === target\n            ? rootNode.host.ownerDocument\n            : rootNode\n          : rootNode === doc\n            ? doc.documentElement\n            : rootNode;\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !currentDoc.contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState,\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState),\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState),\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    if (frameState) {\n      for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n        postRenderFunctions[i](this, frameState);\n      }\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      this.viewport_.remove();\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_,\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this),\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false,\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n      );\n\n      let keyboardEventTarget;\n      if (!this.keyboardEventTarget_) {\n        // check if map target is in shadowDOM, if yes use host element as target\n        const targetRoot = targetElement.getRootNode();\n        const targetCandidate =\n          targetRoot instanceof ShadowRoot ? targetRoot.host : targetElement;\n        keyboardEventTarget = targetCandidate;\n      } else {\n        keyboardEventTarget = this.keyboardEventTarget_;\n      }\n\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this,\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this,\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined,\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutter: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size,\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size,\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions,\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState),\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState),\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      (this.hasListener(MapEventType.LOADSTART) ||\n        this.hasListener(MapEventType.LOADEND) ||\n        this.hasListener(RenderEventType.RENDERCOMPLETE)) &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.tileQueue_.getCount() &&\n      !this.getLoadingOrNotReady();\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n   *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n   *  `tabindex` atribute must be set on the custom element's host element.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>|null} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [Math.max(0, width), Math.max(0, height)];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\",\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`',\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`',\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`',\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/Overlay\n */\nimport MapEventType from './MapEventType.js';\nimport BaseObject from './Object.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {outerHeight, outerWidth, removeChildren} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {containsExtent} from './extent.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay.js';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      this.element?.remove();\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this,\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement ||\n    data instanceof ImageBitmap\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * This is set as the cancellation reason when a tile is disposed.\n */\nexport const disposedError = new Error('disposed');\n\n/**\n * @type {CanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true},\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.clearRect(0, 0, width, height);\n  sharedContext.drawImage(image, 0, 0);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @property {AbortController} [controller] An abort controller.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n\n    /**\n     * @type {AbortController|null}\n     * @private\n     */\n    this.controller_ = options.controller || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load the tile data.\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.controller_) {\n      this.controller_.abort(disposedError);\n      this.controller_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [clipExtent] Clip extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        if (src.clipExtent) {\n          stitchContext.save();\n          const xPos = (src.clipExtent[0] - sourceDataExtent[0]) * stitchScale;\n          const yPos = -(src.clipExtent[3] - sourceDataExtent[3]) * stitchScale;\n          const width = getWidth(src.clipExtent) * stitchScale;\n          const height = getHeight(src.clipExtent) * stitchScale;\n          stitchContext.rect(\n            interpolate ? xPos : Math.round(xPos),\n            interpolate ? yPos : Math.round(yPos),\n            interpolate ? width : Math.round(xPos + width) - Math.round(xPos),\n            interpolate ? height : Math.round(yPos + height) - Math.round(yPos),\n          );\n          stitchContext.clip();\n        }\n\n        const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n        const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n        const srcWidth = getWidth(src.extent) * stitchScale;\n        const srcHeight = getHeight(src.extent) * stitchScale;\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n\n        if (src.clipExtent) {\n          stitchContext.restore();\n        }\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {\n  createTransformFromCoordinateTransform,\n  getTransform,\n  transform,\n} from '../proj.js';\nimport {apply as applyMatrix} from '../transform.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   * @param {import(\"../transform.js\").Transform} [sourceMatrix] Source transform matrix.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n    sourceMatrix,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = sourceMatrix\n      ? createTransformFromCoordinateTransform((input) =>\n          applyMatrix(\n            sourceMatrix,\n            transform(input, this.targetProj_, this.sourceProj_),\n          ),\n        )\n      : getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Tile\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {releaseCanvas} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\nimport {ERROR_THRESHOLD} from './common.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {import(\"../ImageTile.js\").default} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceProj.getExtent()\n      : undefined;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (tile && tile.getState() == TileState.LOADED) {\n        const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n        extent[0] += source.offset;\n        extent[2] += source.offset;\n        const clipExtent = this.clipExtent_?.slice();\n        if (clipExtent) {\n          clipExtent[0] += source.offset;\n          clipExtent[2] += source.offset;\n        }\n        sources.push({\n          extent: extent,\n          clipExtent: clipExtent,\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(({tile}) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(tile, EventType.CHANGE, (e) => {\n            const state = tile.getState();\n            if (\n              state == TileState.LOADED ||\n              state == TileState.ERROR ||\n              state == TileState.EMPTY\n            ) {\n              unlistenByKey(sourceListenKey);\n              leftToLoad--;\n              if (leftToLoad === 0) {\n                this.unlistenSources_();\n                this.reproject_();\n              }\n            }\n          });\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function ({tile}, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   * @override\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport Disposable from '../Disposable.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  deleteOldest() {\n    const entry = this.pop();\n    if (entry instanceof Disposable) {\n      entry.dispose();\n    }\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache. When the cache entry is a {@link module:ol/Disposable~Disposable},\n   * the entry will be disposed.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    while (this.oldest_) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return hashZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {number} Hash.\n */\nexport function hashZXY(z, x, y) {\n  return (x << z) + y;\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport DataTile, {asImageLike} from '../../DataTile.js';\nimport ImageTile from '../../ImageTile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport {toSize} from '../../size.js';\nimport LRUCache from '../../structs/LRUCache.js';\nimport {createOrUpdate as createTileCoord, getKeyZXY} from '../../tilecoord.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport {getUid} from '../../util.js';\nimport CanvasLayerRenderer from './Layer.js';\n\n/**\n * @param {string} sourceKey The source key.\n * @param {number} z The tile z level.\n * @param {number} x The tile x level.\n * @param {number} y The tile y level.\n * @return {string} The cache key.\n */\nfunction getCacheKey(sourceKey, z, x, y) {\n  return `${sourceKey},${getKeyZXY(z, x, y)}`;\n}\n\n/**\n * @typedef {Object<number, Set<import(\"../../Tile.js\").default>>} TileLookup\n */\n\n/**\n * Add a tile to the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was added to the lookup.\n */\nfunction addTileToLookup(tilesByZ, tile, z) {\n  if (!(z in tilesByZ)) {\n    tilesByZ[z] = new Set([tile]);\n    return true;\n  }\n  const set = tilesByZ[z];\n  const existing = set.has(tile);\n  if (!existing) {\n    set.add(tile);\n  }\n  return !existing;\n}\n\n/**\n * Remove a tile from the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was removed from the lookup.\n */\nfunction removeTileFromLookup(tilesByZ, tile, z) {\n  const set = tilesByZ[z];\n  if (set) {\n    return set.delete(tile);\n  }\n  return false;\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection),\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=512] The cache size.\n */\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer);\n\n    options = options || {};\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default|null}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedSourceKey_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedSourceRevision_;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tempExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<import(\"../../Tile.js\").default>}\n     * @private\n     */\n    this.tileCache_ = new LRUCache(cacheSize);\n\n    this.maxStaleKeys = cacheSize * 0.5;\n  }\n\n  /**\n   * @return {LRUCache} Tile cache.\n   */\n  getTileCache() {\n    return this.tileCache_;\n  }\n\n  /**\n   * Get a tile from the cache or create one if needed.\n   *\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getOrCreateTile(z, x, y, frameState) {\n    const tileCache = this.tileCache_;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const cacheKey = getCacheKey(tileSource.getKey(), z, x, y);\n\n    /** @type {import(\"../../Tile.js\").default} */\n    let tile;\n\n    if (tileCache.containsKey(cacheKey)) {\n      tile = tileCache.get(cacheKey);\n    } else {\n      tile = tileSource.getTile(\n        z,\n        x,\n        y,\n        frameState.pixelRatio,\n        frameState.viewState.projection,\n      );\n      if (!tile) {\n        return null;\n      }\n      tileCache.set(cacheKey, tile);\n    }\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getTile(z, x, y, frameState) {\n    const tile = this.getOrCreateTile(z, x, y, frameState);\n    if (!tile) {\n      return null;\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   * @override\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = this.getTile(z, tileCoord[1], tileCoord[2], frameState);\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      /**\n       * @type {import('../../DataTile.js').ImageLike}\n       */\n      let image;\n      if (tile instanceof ImageTile || tile instanceof ReprojTile) {\n        image = tile.getImage();\n      } else if (tile instanceof DataTile) {\n        image = asImageLike(tile.getData());\n        if (!image) {\n          continue;\n        }\n      } else {\n        continue;\n      }\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(image, col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    if (!this.renderedProjection) {\n      this.renderedProjection = frameState.viewState.projection;\n    } else if (frameState.viewState.projection !== this.renderedProjection) {\n      this.tileCache_.clear();\n      this.renderedProjection = frameState.viewState.projection;\n    }\n\n    const source = this.getLayer().getSource();\n    if (!source) {\n      return false;\n    }\n    const sourceRevision = source.getRevision();\n    if (!this.renderedRevision_) {\n      this.renderedRevision_ = sourceRevision;\n    } else if (this.renderedRevision_ !== sourceRevision) {\n      this.renderedRevision_ = sourceRevision;\n      if (this.renderedSourceKey_ === source.getKey()) {\n        this.tileCache_.clear();\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(frameState, extent, initialZ, tilesByZ, preload) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0),\n        ),\n        tileSource.zDirection,\n      ),\n    );\n    const rotation = viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          viewState.resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_,\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          const tile = this.getTile(z, x, y, frameState);\n          if (!tile) {\n            continue;\n          }\n          const added = addTileToLookup(tilesByZ, tile, z);\n          if (!added) {\n            continue;\n          }\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findStaleTile_(tileCoord, tilesByZ) {\n    const tileCache = this.tileCache_;\n    const z = tileCoord[0];\n    const x = tileCoord[1];\n    const y = tileCoord[2];\n    const staleKeys = this.getStaleKeys();\n    for (let i = 0; i < staleKeys.length; ++i) {\n      const cacheKey = getCacheKey(staleKeys[i], z, x, y);\n      if (tileCache.containsKey(cacheKey)) {\n        const tile = tileCache.peek(cacheKey);\n        if (tile.getState() === TileState.LOADED) {\n          tile.endTransition(getUid(this));\n          addTileToLookup(tilesByZ, tile, z);\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tilesByZ) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_,\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileCache = this.tileCache_;\n    const source = this.getLayer().getRenderSource();\n    const sourceKey = source.getKey();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(sourceKey, altZ, x, y);\n        let loaded = false;\n        if (tileCache.containsKey(cacheKey)) {\n          const tile = tileCache.peek(cacheKey);\n          if (tile.getState() === TileState.LOADED) {\n            addTileToLookup(tilesByZ, tile, altZ);\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * Render the layer.\n   *\n   * The frame rendering logic has three parts:\n   *\n   *  1. Enqueue tiles\n   *  2. Find alt tiles for those that are not yet loaded\n   *  3. Render loaded tiles\n   *\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    this.renderComplete = true;\n\n    /**\n     * TODO:\n     *  maybe skip transition when not fully opaque\n     *  decide if this.renderComplete is useful\n     */\n\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    const sourceKey = tileSource.getKey();\n    if (!this.renderedSourceKey_) {\n      this.renderedSourceKey_ = sourceKey;\n    } else if (this.renderedSourceKey_ !== sourceKey) {\n      this.prependStaleKey(this.renderedSourceKey_);\n      this.renderedSourceKey_ = sourceKey;\n    }\n\n    let frameExtent = frameState.extent;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      frameExtent = getIntersection(\n        frameExtent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    /**\n     * @type {TileLookup}\n     */\n    const tilesByZ = {};\n\n    this.renderedTiles.length = 0;\n\n    /**\n     * Part 1: Enqueue tiles\n     */\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection,\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(frameState, nextExtent, targetZ, tilesByZ, preload);\n    }\n\n    const renderExtent = getRenderExtent(frameState, frameExtent);\n    this.enqueueTiles(frameState, renderExtent, z, tilesByZ, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          renderExtent,\n          z - 1,\n          tilesByZ,\n          preload - 1,\n        );\n      }, 0);\n    }\n\n    if (!(z in tilesByZ)) {\n      return this.container;\n    }\n\n    /**\n     * Part 2: Find alt tiles for those that are not yet loaded\n     */\n\n    const uid = getUid(this);\n    const time = frameState.time;\n\n    // look for cached tiles to use if a target tile is not ready\n    for (const tile of tilesByZ[z]) {\n      const tileState = tile.getState();\n      if (tileState === TileState.EMPTY) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileState === TileState.LOADED) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n      }\n      if (tileState !== TileState.ERROR) {\n        this.renderComplete = false;\n      }\n\n      const hasStaleTile = this.findStaleTile_(tileCoord, tilesByZ);\n      if (hasStaleTile) {\n        // use the stale tile before the new tile's transition has completed\n        removeTileFromLookup(tilesByZ, tile, z);\n        frameState.animate = true;\n        continue;\n      }\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tilesByZ,\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tilesByZ,\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    /**\n     * Part 3: Render loaded tiles\n     */\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    const context = this.getRenderContext(frameState);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (layerState.extent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(tilesByZ).map(Number);\n    zs.sort(ascending);\n\n    let currentClip;\n    const clips = [];\n    const clipZs = [];\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      for (const tile of tilesByZ[currentZ]) {\n        if (tile.getState() !== TileState.LOADED) {\n          continue;\n        }\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = zs.length === 1;\n\n        let contextSaved = false;\n\n        // Clip mask for regions in this tile that already filled by a higher z tile\n        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n        for (let i = 0, ii = clips.length; i < ii; ++i) {\n          if (!transition && currentZ < clipZs[i]) {\n            const clip = clips[i];\n            if (\n              intersects(\n                [x, y, x + w, y + h],\n                [clip[0], clip[3], clip[4], clip[7]],\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n\n        this.drawTile(tile, frameState, x, y, w, h, tileGutter, transition);\n        if (contextSaved) {\n          context.restore();\n        }\n        this.renderedTiles.unshift(tile);\n\n        // TODO: decide if this is necessary\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (this.renderComplete) {\n      /**\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = (map, frameState) => {\n        const tileSourceKey = getUid(tileSource);\n        const wantedTiles = frameState.wantedTiles[tileSourceKey];\n        const tilesCount = wantedTiles ? Object.keys(wantedTiles).length : 0;\n        this.updateCacheSize(tilesCount);\n        this.tileCache_.expireCache();\n      };\n\n      frameState.postRenderFunctions.push(postRenderFunction);\n    }\n\n    return this.container;\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   */\n  updateCacheSize(tileCount) {\n    this.tileCache_.highWaterMark = Math.max(\n      this.tileCache_.highWaterMark,\n      tileCount * 2,\n    );\n  }\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @protected\n   */\n  drawTile(tile, frameState, x, y, w, h, gutter, transition) {\n    let image;\n    if (tile instanceof DataTile) {\n      image = asImageLike(tile.getData());\n      if (!image) {\n        throw new Error('Rendering array data is not yet supported');\n      }\n    } else {\n      image = this.getTileImage(\n        /** @type {import(\"../../ImageTile.js\").default} */ (tile),\n      );\n    }\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [useInterimTilesOnError=true] Deprecated.  Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n * @property {number} [cacheSize=512] The internal tile cache size.  This needs to be large enough to render\n * two zoom levels worth of tiles.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    const cacheSize = options.cacheSize;\n    delete options.cacheSize;\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n  }\n\n  /**\n   * @return {number|undefined} The suggested cache size\n   * @protected\n   */\n  getCacheSize() {\n    return this.cacheSize_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Deprecated.  Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Deprecated.  Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   * @override\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/layer/Tile\n */\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\nimport BaseTileLayer from './BaseTile.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} [TileSourceType=import(\"../source/Tile.js\").default]\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this, {\n      cacheSize: this.getCacheSize(),\n    });\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {toSize} from './size.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/uri\n */\n\nimport {modulo} from './math.js';\nimport {hashZXY} from './tilecoord.js';\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  /** @type {Array<string>} */\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n\nconst zRegEx = /\\{z\\}/g;\nconst xRegEx = /\\{x\\}/g;\nconst yRegEx = /\\{y\\}/g;\nconst dashYRegEx = /\\{-y\\}/g;\n\n/**\n * @param {string} template The URL template.  Should have `{x}`, `{y}`, and `{z}` placeholders.  If\n * the template has a `{-y}` placeholder, the `maxY` parameter must be supplied.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @param {number} [maxY] The maximum y coordinate at the given z level.\n * @return {string} The URL.\n */\nexport function renderXYZTemplate(template, z, x, y, maxY) {\n  return template\n    .replace(zRegEx, z.toString())\n    .replace(xRegEx, x.toString())\n    .replace(yRegEx, y.toString())\n    .replace(dashYRegEx, function () {\n      if (maxY === undefined) {\n        throw new Error(\n          'If the URL template has a {-y} placeholder, the grid extent must be known',\n        );\n      }\n      return (maxY - y).toString();\n    });\n}\n\n/**\n * @param {Array<string>} urls List of URLs.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {string} The chosen URL.\n */\nexport function pickUrl(urls, z, x, y) {\n  const hash = hashZXY(z, x, y);\n  const index = modulo(hash, urls.length);\n  return urls[index];\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\nimport {renderXYZTemplate} from './uri.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default|null} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      let maxY;\n      const z = tileCoord[0];\n      if (tileGrid) {\n        // The `{-y}` placeholder only works for sources that have a tile grid at construction\n        const range = tileGrid.getFullTileRange(z);\n        if (range) {\n          maxY = range.getHeight() - 1;\n        }\n      }\n      return renderXYZTemplate(template, z, tileCoord[1], tileCoord[2], maxY);\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {abstract, getUid} from '../util.js';\nimport Source from './Source.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n *\n * @template {import(\"../Tile.js\").default} [TileType=import(\"../Tile.js\").default]\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     * @protected\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || getUid(this);\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {TileType|null} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    const gridProjection =\n      projection !== undefined ? projection : this.getProjection();\n    const tileGrid =\n      projection !== undefined\n        ? this.getTileGridForProjection(gridProjection)\n        : this.tileGrid || this.getTileGridForProjection(gridProjection);\n    if (this.getWrapX() && gridProjection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, gridProjection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached reprojected tiles from the source. The next render cycle will create new tiles.\n   * @api\n   */\n  clear() {}\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/UrlTile\n */\nimport TileState from '../TileState.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {expandUrl} from '../uri.js';\nimport {getUid} from '../util.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport ImageTile from '../ImageTile.js';\nimport TileState from '../TileState.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\nimport UrlTile from './UrlTile.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @override\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @override\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions,\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @override\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection,\n      );\n    }\n    const tileCoord = [z, x, y];\n    const key = this.getKey();\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions,\n    );\n    tile.key = key;\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    const key = this.getKey();\n    return this.createTile_(z, x, y, pixelRatio, projection, key);\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport TileImage from './TileImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Deprecated.  Use an ImageTile source with a loader\n * instead.  Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] Deprecated.  Use an ImageTile source and provide an array of URLs for the\n * url option instead.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/control/ScaleLine\n */\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {METERS_PER_UNIT, getPointResolution} from '../proj.js';\nimport Control from './Control.js';\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * @typedef {'degrees' | 'imperial' | 'nautical' | 'metric' | 'us'} Units\n * Units for the scale line.\n */\n\n/**\n * @const\n * @type {Array<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n/**\n * @const\n * @type {number}\n */\nconst DEFAULT_DPI = 25.4 / 0.28;\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:units', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |'change:units', Return>} ScaleLineOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className] CSS class name. The default is `ol-scale-bar` when configured with\n * `bar: true`. Otherwise the default is `ol-scale-line`.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {number} [maxWidth] Maximum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n * For cartesian measurements of the scaleline, you need to set the\n * `getPointResolution` method of your projection to simply return the input\n * value, e.g. `projection.setGetPointResolution(r => r);`\n *\n * @api\n */\nclass ScaleLine extends Control {\n  /**\n   * @param {Options} [options] Scale line options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.style.pointerEvents = 'none';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ScaleLineOnSignature<void>}\n     */\n    this.un;\n\n    const className =\n      options.className !== undefined\n        ? options.className\n        : options.bar\n          ? 'ol-scale-bar'\n          : 'ol-scale-line';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.maxWidth_ = options.maxWidth;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    this.addChangeListener(UNITS_PROP, this.handleUnitsChanged_);\n\n    this.setUnits(options.units || 'metric');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBar_ = options.bar || false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleBarSteps_ = options.steps || 4;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBarText_ = options.text || false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.dpi_ = options.dpi || undefined;\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  getUnits() {\n    return this.get(UNITS_PROP);\n  }\n\n  /**\n   * @private\n   */\n  handleUnitsChanged_() {\n    this.updateElement_();\n  }\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  setUnits(units) {\n    this.set(UNITS_PROP, units);\n  }\n\n  /**\n   * Specify the dpi of output device such as printer.\n   * @param {number|undefined} dpi The dpi of output device.\n   * @api\n   */\n  setDpi(dpi) {\n    this.dpi_ = dpi;\n  }\n\n  /**\n   * @private\n   */\n  updateElement_() {\n    const viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const units = this.getUnits();\n    const pointResolutionUnits = units == 'degrees' ? 'degrees' : 'm';\n    let pointResolution = getPointResolution(\n      projection,\n      viewState.resolution,\n      center,\n      pointResolutionUnits,\n    );\n\n    const minWidth =\n      (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n\n    const maxWidth =\n      this.maxWidth_ !== undefined\n        ? (this.maxWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI\n        : undefined;\n\n    let nominalCount = minWidth * pointResolution;\n    let suffix = '';\n    if (units == 'degrees') {\n      const metersPerDegree = METERS_PER_UNIT.degrees;\n      nominalCount *= metersPerDegree;\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == 'imperial') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == 'nautical') {\n      pointResolution /= 1852;\n      suffix = 'NM';\n    } else if (units == 'metric') {\n      if (nominalCount < 1e-6) {\n        suffix = 'nm';\n        pointResolution *= 1e9;\n      } else if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == 'us') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      throw new Error('Invalid units');\n    }\n\n    let i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n    let count, width, decimalCount;\n    let previousCount = 0;\n    let previousWidth, previousDecimalCount;\n    while (true) {\n      decimalCount = Math.floor(i / 3);\n      const decimal = Math.pow(10, decimalCount);\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      }\n      if (maxWidth !== undefined && width >= maxWidth) {\n        count = previousCount;\n        width = previousWidth;\n        decimalCount = previousDecimalCount;\n        break;\n      } else if (width >= minWidth) {\n        break;\n      }\n      previousCount = count;\n      previousWidth = width;\n      previousDecimalCount = decimalCount;\n      ++i;\n    }\n    const html = this.scaleBar_\n      ? this.createScaleBar(width, count, suffix)\n      : count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @return {string} The stringified HTML of the scalebar.\n   */\n  createScaleBar(width, scale, suffix) {\n    const resolutionScale = this.getScaleForResolution();\n    const mapScale =\n      resolutionScale < 1\n        ? Math.round(1 / resolutionScale).toLocaleString() + ' : 1'\n        : '1 : ' + Math.round(resolutionScale).toLocaleString();\n    const steps = this.scaleBarSteps_;\n    const stepWidth = width / steps;\n    const scaleSteps = [this.createMarker('absolute')];\n    for (let i = 0; i < steps; ++i) {\n      const cls =\n        i % 2 === 0 ? 'ol-scale-singlebar-odd' : 'ol-scale-singlebar-even';\n      scaleSteps.push(\n        '<div>' +\n          '<div ' +\n          `class=\"ol-scale-singlebar ${cls}\" ` +\n          `style=\"width: ${stepWidth}px;\"` +\n          '>' +\n          '</div>' +\n          this.createMarker('relative') +\n          // render text every second step, except when only 2 steps\n          (i % 2 === 0 || steps === 2\n            ? this.createStepText(i, width, false, scale, suffix)\n            : '') +\n          '</div>',\n      );\n    }\n    // render text at the end\n    scaleSteps.push(this.createStepText(steps, width, true, scale, suffix));\n\n    const scaleBarText = this.scaleBarText_\n      ? `<div class=\"ol-scale-text\" style=\"width: ${width}px;\">` +\n        mapScale +\n        '</div>'\n      : '';\n    return scaleBarText + scaleSteps.join('');\n  }\n\n  /**\n   * Creates a marker at given position\n   * @param {'absolute'|'relative'} position The position, absolute or relative\n   * @return {string} The stringified div containing the marker\n   */\n  createMarker(position) {\n    const top = position === 'absolute' ? 3 : -10;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-marker\" ' +\n      `style=\"position: ${position}; top: ${top}px;\"` +\n      '></div>'\n    );\n  }\n\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i The iterator\n   * @param {number} width The width the scalebar will currently use\n   * @param {boolean} isLast Flag indicating if we add the last step text\n   * @param {number} scale The current scale for the whole scalebar\n   * @param {string} suffix The suffix for the scale\n   * @return {string} The stringified div containing the step text\n   */\n  createStepText(i, width, isLast, scale, suffix) {\n    const length =\n      i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n    const lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    const margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n    const minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-text\" ' +\n      'style=\"' +\n      `margin-left: ${margin}px;` +\n      `text-align: ${i === 0 ? 'left' : 'center'};` +\n      `min-width: ${minWidth}px;` +\n      `left: ${isLast ? width + 'px' : 'unset'};` +\n      '\">' +\n      lengthString +\n      '</div>'\n    );\n  }\n\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n  getScaleForResolution() {\n    const resolution = getPointResolution(\n      this.viewState_.projection,\n      this.viewState_.resolution,\n      this.viewState_.center,\n      'm',\n    );\n    const dpi = this.dpi_ || DEFAULT_DPI;\n    const inchesPerMeter = 1000 / 25.4;\n    return resolution * inchesPerMeter * dpi;\n  }\n\n  /**\n   * Update the scale line element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.viewState_ = null;\n    } else {\n      this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n  }\n}\n\nexport default ScaleLine;\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('ol/control/Control'), require('ol/Observable'), require('ol/layer/Group')) :\n\ttypeof define === 'function' && define.amd ? define(['ol/control/Control', 'ol/Observable', 'ol/layer/Group'], factory) :\n\t(global.LayerSwitcher = factory(global.ol.control.Control,global.ol.Observable,global.ol.layer.Group));\n}(this, (function (Control,ol_Observable,LayerGroup) { 'use strict';\n\nControl = 'default' in Control ? Control['default'] : Control;\nLayerGroup = 'default' in LayerGroup ? LayerGroup['default'] : LayerGroup;\n\n/**\n * @protected\n */\nconst CSS_PREFIX = 'layer-switcher-';\n/**\n * OpenLayers LayerSwitcher Control, displays a list of layers and groups\n * associated with a map which have a `title` property.\n *\n * To be shown in the LayerSwitcher panel layers must have a `title` property;\n * base map layers should have a `type` property set to `base`. Group layers\n * (`LayerGroup`) can be used to visually group layers together; a group\n * with a `fold` property set to either `'open'` or `'close'` will be displayed\n * with a toggle.\n *\n * See [BaseLayerOptions](#baselayeroptions) for a full list of LayerSwitcher\n * properties for layers (`TileLayer`, `ImageLayer`, `VectorTile` etc.) and\n * [GroupLayerOptions](#grouplayeroptions) for group layer (`LayerGroup`)\n * LayerSwitcher properties.\n *\n * Layer and group properties can either be set by adding extra properties\n * to their options when they are created or via their set method.\n *\n * Specify a `title` for a Layer by adding a `title` property to it's options object:\n * ```javascript\n * var lyr = new ol.layer.Tile({\n *   // Specify a title property which will be displayed by the layer switcher\n *   title: 'OpenStreetMap',\n *   visible: true,\n *   source: new ol.source.OSM()\n * })\n * ```\n *\n * Alternatively the properties can be set via the `set` method after a layer has been created:\n * ```javascript\n * var lyr = new ol.layer.Tile({\n *   visible: true,\n *   source: new ol.source.OSM()\n * })\n * // Specify a title property which will be displayed by the layer switcher\n * lyr.set('title', 'OpenStreetMap');\n * ```\n *\n * To create a LayerSwitcher and add it to a map, create a new instance then pass it to the map's [`addControl` method](https://openlayers.org/en/latest/apidoc/module-ol_Map-Map.html#addControl).\n * ```javascript\n * var layerSwitcher = new LayerSwitcher({\n *   reverse: true,\n *   groupSelectStyle: 'group'\n * });\n * map.addControl(layerSwitcher);\n * ```\n *\n * @constructor\n * @extends {ol/control/Control~Control}\n * @param opt_options LayerSwitcher options, see  [LayerSwitcher Options](#options) and [RenderOptions](#renderoptions) which LayerSwitcher `Options` extends for more details.\n */\nclass LayerSwitcher extends Control {\n    constructor(opt_options) {\n        const options = Object.assign({}, opt_options);\n        const element = document.createElement('div');\n        super({ element: element, target: options.target });\n        this.activationMode = options.activationMode || 'mouseover';\n        this.startActive = options.startActive === true;\n        // TODO Next: Rename to showButtonContent\n        this.label = options.label !== undefined ? options.label : '';\n        // TODO Next: Rename to hideButtonContent\n        this.collapseLabel =\n            options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n        // TODO Next: Rename to showButtonTitle\n        this.tipLabel = options.tipLabel ? options.tipLabel : 'Legend';\n        // TODO Next: Rename to hideButtonTitle\n        this.collapseTipLabel = options.collapseTipLabel\n            ? options.collapseTipLabel\n            : 'Collapse legend';\n        this.groupSelectStyle = LayerSwitcher.getGroupSelectStyle(options.groupSelectStyle);\n        this.reverse = options.reverse !== false;\n        this.mapListeners = [];\n        this.hiddenClassName = 'ol-unselectable ol-control layer-switcher';\n        if (LayerSwitcher.isTouchDevice_()) {\n            this.hiddenClassName += ' touch';\n        }\n        this.shownClassName = 'shown';\n        element.className = this.hiddenClassName;\n        this.button = document.createElement('button');\n        element.appendChild(this.button);\n        this.panel = document.createElement('div');\n        this.panel.className = 'panel';\n        element.appendChild(this.panel);\n        LayerSwitcher.enableTouchScroll_(this.panel);\n        element.classList.add(CSS_PREFIX + 'group-select-style-' + this.groupSelectStyle);\n        element.classList.add(CSS_PREFIX + 'activation-mode-' + this.activationMode);\n        if (this.activationMode === 'click') {\n            // TODO Next: Remove in favour of layer-switcher-activation-mode-click\n            element.classList.add('activationModeClick');\n            this.button.onclick = (e) => {\n                const evt = e || window.event;\n                if (this.element.classList.contains(this.shownClassName)) {\n                    this.hidePanel();\n                }\n                else {\n                    this.showPanel();\n                }\n                evt.preventDefault();\n            };\n        }\n        else {\n            this.button.onmouseover = () => {\n                this.showPanel();\n            };\n            this.button.onclick = (e) => {\n                const evt = e || window.event;\n                this.showPanel();\n                evt.preventDefault();\n            };\n            this.panel.onmouseout = (evt) => {\n                if (!this.panel.contains(evt.relatedTarget)) {\n                    this.hidePanel();\n                }\n            };\n        }\n        this.updateButton();\n    }\n    /**\n     * Set the map instance the control is associated with.\n     * @param map The map instance.\n     */\n    setMap(map) {\n        // Clean up listeners associated with the previous map\n        for (let i = 0; i < this.mapListeners.length; i++) {\n            ol_Observable.unByKey(this.mapListeners[i]);\n        }\n        this.mapListeners.length = 0;\n        // Wire up listeners etc. and store reference to new map\n        super.setMap(map);\n        if (map) {\n            if (this.startActive) {\n                this.showPanel();\n            }\n            else {\n                this.renderPanel();\n            }\n            if (this.activationMode !== 'click') {\n                this.mapListeners.push(map.on('pointerdown', () => {\n                    this.hidePanel();\n                }));\n            }\n        }\n    }\n    /**\n     * Show the layer panel. Fires `'show'` event.\n     * @fires LayerSwitcher#show\n     */\n    showPanel() {\n        if (!this.element.classList.contains(this.shownClassName)) {\n            this.element.classList.add(this.shownClassName);\n            this.updateButton();\n            this.renderPanel();\n        }\n        /**\n         * Event triggered after the panel has been shown.\n         * Listen to the event via the `on` or `once` methods; for example:\n         * ```js\n         * var layerSwitcher = new LayerSwitcher();\n         * map.addControl(layerSwitcher);\n         *\n         * layerSwitcher.on('show', evt => {\n         *   console.log('show', evt);\n         * });\n         * @event LayerSwitcher#show\n         */\n        this.dispatchEvent('show');\n    }\n    /**\n     * Hide the layer panel. Fires `'hide'` event.\n     * @fires LayerSwitcher#hide\n     */\n    hidePanel() {\n        if (this.element.classList.contains(this.shownClassName)) {\n            this.element.classList.remove(this.shownClassName);\n            this.updateButton();\n        }\n        /**\n         * Event triggered after the panel has been hidden.\n         * @event LayerSwitcher#hide\n         */\n        this.dispatchEvent('hide');\n    }\n    /**\n     * Update button text content and attributes based on current\n     * state\n     */\n    updateButton() {\n        if (this.element.classList.contains(this.shownClassName)) {\n            this.button.textContent = this.collapseLabel;\n            this.button.setAttribute('title', this.collapseTipLabel);\n            this.button.setAttribute('aria-label', this.collapseTipLabel);\n        }\n        else {\n            this.button.textContent = this.label;\n            this.button.setAttribute('title', this.tipLabel);\n            this.button.setAttribute('aria-label', this.tipLabel);\n        }\n    }\n    /**\n     * Re-draw the layer panel to represent the current state of the layers.\n     */\n    renderPanel() {\n        this.dispatchEvent('render');\n        LayerSwitcher.renderPanel(this.getMap(), this.panel, {\n            groupSelectStyle: this.groupSelectStyle,\n            reverse: this.reverse\n        });\n        this.dispatchEvent('rendercomplete');\n    }\n    /**\n     * **_[static]_** - Re-draw the layer panel to represent the current state of the layers.\n     * @param map The OpenLayers Map instance to render layers for\n     * @param panel The DOM Element into which the layer tree will be rendered\n     * @param options Options for panel, group, and layers\n     */\n    static renderPanel(map, panel, options) {\n        // Create the event.\n        const render_event = new Event('render');\n        // Dispatch the event.\n        panel.dispatchEvent(render_event);\n        options = options || {};\n        options.groupSelectStyle = LayerSwitcher.getGroupSelectStyle(options.groupSelectStyle);\n        LayerSwitcher.ensureTopVisibleBaseLayerShown(map, options.groupSelectStyle);\n        while (panel.firstChild) {\n            panel.removeChild(panel.firstChild);\n        }\n        // Reset indeterminate state for all layers and groups before\n        // applying based on groupSelectStyle\n        LayerSwitcher.forEachRecursive(map, function (l, _idx, _a) {\n            l.set('indeterminate', false);\n        });\n        if (options.groupSelectStyle === 'children' ||\n            options.groupSelectStyle === 'none') {\n            // Set visibile and indeterminate state of groups based on\n            // their children's visibility\n            LayerSwitcher.setGroupVisibility(map);\n        }\n        else if (options.groupSelectStyle === 'group') {\n            // Set child indetermiate state based on their parent's visibility\n            LayerSwitcher.setChildVisibility(map);\n        }\n        const ul = document.createElement('ul');\n        panel.appendChild(ul);\n        // passing two map arguments instead of lyr as we're passing the map as the root of the layers tree\n        LayerSwitcher.renderLayers_(map, map, ul, options, function render(_changedLyr) {\n            LayerSwitcher.renderPanel(map, panel, options);\n        });\n        // Create the event.\n        const rendercomplete_event = new Event('rendercomplete');\n        // Dispatch the event.\n        panel.dispatchEvent(rendercomplete_event);\n    }\n    /**\n     * **_[static]_** - Determine if a given layer group contains base layers\n     * @param grp Group to test\n     */\n    static isBaseGroup(grp) {\n        if (grp instanceof LayerGroup) {\n            const lyrs = grp.getLayers().getArray();\n            return lyrs.length && lyrs[0].get('type') === 'base';\n        }\n        else {\n            return false;\n        }\n    }\n    static setGroupVisibility(map) {\n        // Get a list of groups, with the deepest first\n        const groups = LayerSwitcher.getGroupsAndLayers(map, function (l) {\n            return (l instanceof LayerGroup &&\n                !l.get('combine') &&\n                !LayerSwitcher.isBaseGroup(l));\n        }).reverse();\n        // console.log(groups.map(g => g.get('title')));\n        groups.forEach(function (grp) {\n            // TODO Can we use getLayersArray, is it public in the esm build?\n            const descendantVisibility = grp.getLayersArray().map(function (l) {\n                const state = l.getVisible();\n                // console.log('>', l.get('title'), state);\n                return state;\n            });\n            // console.log(descendantVisibility);\n            if (descendantVisibility.every(function (v) {\n                return v === true;\n            })) {\n                grp.setVisible(true);\n                grp.set('indeterminate', false);\n            }\n            else if (descendantVisibility.every(function (v) {\n                return v === false;\n            })) {\n                grp.setVisible(false);\n                grp.set('indeterminate', false);\n            }\n            else {\n                grp.setVisible(true);\n                grp.set('indeterminate', true);\n            }\n        });\n    }\n    static setChildVisibility(map) {\n        // console.log('setChildVisibility');\n        const groups = LayerSwitcher.getGroupsAndLayers(map, function (l) {\n            return (l instanceof LayerGroup &&\n                !l.get('combine') &&\n                !LayerSwitcher.isBaseGroup(l));\n        });\n        groups.forEach(function (grp) {\n            const group = grp;\n            // console.log(group.get('title'));\n            const groupVisible = group.getVisible();\n            const groupIndeterminate = group.get('indeterminate');\n            group\n                .getLayers()\n                .getArray()\n                .forEach(function (l) {\n                l.set('indeterminate', false);\n                if ((!groupVisible || groupIndeterminate) && l.getVisible()) {\n                    l.set('indeterminate', true);\n                }\n            });\n        });\n    }\n    /**\n     * Ensure only the top-most base layer is visible if more than one is visible.\n     * @param map The map instance.\n     * @param groupSelectStyle\n     * @protected\n     */\n    static ensureTopVisibleBaseLayerShown(map, groupSelectStyle) {\n        let lastVisibleBaseLyr;\n        LayerSwitcher.forEachRecursive(map, function (lyr, _idx, _arr) {\n            if (lyr.get('type') === 'base' && lyr.getVisible()) {\n                lastVisibleBaseLyr = lyr;\n            }\n        });\n        if (lastVisibleBaseLyr)\n            LayerSwitcher.setVisible_(map, lastVisibleBaseLyr, true, groupSelectStyle);\n    }\n    /**\n     * **_[static]_** - Get an Array of all layers and groups displayed by the LayerSwitcher (has a `'title'` property)\n     * contained by the specified map or layer group; optionally filtering via `filterFn`\n     * @param grp The map or layer group for which layers are found.\n     * @param filterFn Optional function used to filter the returned layers\n     */\n    static getGroupsAndLayers(grp, filterFn) {\n        const layers = [];\n        filterFn =\n            filterFn ||\n                function (_lyr, _idx, _arr) {\n                    return true;\n                };\n        LayerSwitcher.forEachRecursive(grp, function (lyr, idx, arr) {\n            if (lyr.get('title')) {\n                if (filterFn(lyr, idx, arr)) {\n                    layers.push(lyr);\n                }\n            }\n        });\n        return layers;\n    }\n    /**\n     * Toggle the visible state of a layer.\n     * Takes care of hiding other layers in the same exclusive group if the layer\n     * is toggle to visible.\n     * @protected\n     * @param map The map instance.\n     * @param lyr layer whose visibility will be toggled.\n     * @param visible Set whether the layer is shown\n     * @param groupSelectStyle\n     * @protected\n     */\n    static setVisible_(map, lyr, visible, groupSelectStyle) {\n        // console.log(lyr.get('title'), visible, groupSelectStyle);\n        lyr.setVisible(visible);\n        if (visible && lyr.get('type') === 'base') {\n            // Hide all other base layers regardless of grouping\n            LayerSwitcher.forEachRecursive(map, function (l, _idx, _arr) {\n                if (l != lyr && l.get('type') === 'base') {\n                    l.setVisible(false);\n                }\n            });\n        }\n        if (lyr instanceof LayerGroup &&\n            !lyr.get('combine') &&\n            groupSelectStyle === 'children') {\n            lyr.getLayers().forEach((l) => {\n                LayerSwitcher.setVisible_(map, l, lyr.getVisible(), groupSelectStyle);\n            });\n        }\n    }\n    /**\n     * Render all layers that are children of a group.\n     * @param map The map instance.\n     * @param lyr Layer to be rendered (should have a title property).\n     * @param idx Position in parent group list.\n     * @param options Options for groups and layers\n     * @protected\n     */\n    static renderLayer_(map, lyr, idx, options, render) {\n        const li = document.createElement('li');\n        const lyrTitle = lyr.get('title');\n        const checkboxId = LayerSwitcher.uuid();\n        const label = document.createElement('label');\n        if (lyr instanceof LayerGroup && !lyr.get('combine')) {\n            const isBaseGroup = LayerSwitcher.isBaseGroup(lyr);\n            li.classList.add('group');\n            if (isBaseGroup) {\n                li.classList.add(CSS_PREFIX + 'base-group');\n            }\n            // Group folding\n            if (lyr.get('fold')) {\n                li.classList.add(CSS_PREFIX + 'fold');\n                li.classList.add(CSS_PREFIX + lyr.get('fold'));\n                const btn = document.createElement('button');\n                btn.onclick = function (e) {\n                    const evt = e || window.event;\n                    LayerSwitcher.toggleFold_(lyr, li);\n                    evt.preventDefault();\n                };\n                li.appendChild(btn);\n            }\n            if (!isBaseGroup && options.groupSelectStyle != 'none') {\n                const input = document.createElement('input');\n                input.type = 'checkbox';\n                input.id = checkboxId;\n                input.checked = lyr.getVisible();\n                input.indeterminate = lyr.get('indeterminate');\n                input.onchange = function (e) {\n                    const target = e.target;\n                    LayerSwitcher.setVisible_(map, lyr, target.checked, options.groupSelectStyle);\n                    render(lyr);\n                };\n                li.appendChild(input);\n                label.htmlFor = checkboxId;\n            }\n            label.innerHTML = lyrTitle;\n            li.appendChild(label);\n            const ul = document.createElement('ul');\n            li.appendChild(ul);\n            LayerSwitcher.renderLayers_(map, lyr, ul, options, render);\n        }\n        else {\n            li.className = 'layer';\n            const input = document.createElement('input');\n            if (lyr.get('type') === 'base') {\n                input.type = 'radio';\n            }\n            else {\n                input.type = 'checkbox';\n            }\n            input.id = checkboxId;\n            input.checked = lyr.get('visible');\n            input.indeterminate = lyr.get('indeterminate');\n            input.onchange = function (e) {\n                const target = e.target;\n                LayerSwitcher.setVisible_(map, lyr, target.checked, options.groupSelectStyle);\n                render(lyr);\n            };\n            li.appendChild(input);\n            label.htmlFor = checkboxId;\n            label.innerHTML = lyrTitle;\n            const rsl = map.getView().getResolution();\n            if (rsl >= lyr.getMaxResolution() || rsl < lyr.getMinResolution()) {\n                label.className += ' disabled';\n            }\n            else if (lyr.getMinZoom && lyr.getMaxZoom) {\n                const zoom = map.getView().getZoom();\n                if (zoom <= lyr.getMinZoom() || zoom > lyr.getMaxZoom()) {\n                    label.className += ' disabled';\n                }\n            }\n            li.appendChild(label);\n        }\n        return li;\n    }\n    /**\n     * Render all layers that are children of a group.\n     * @param map The map instance.\n     * @param lyr Group layer whose children will be rendered.\n     * @param elm DOM element that children will be appended to.\n     * @param options Options for groups and layers\n     * @protected\n     */\n    static renderLayers_(map, lyr, elm, options, render) {\n        let lyrs = lyr.getLayers().getArray().slice();\n        if (options.reverse)\n            lyrs = lyrs.reverse();\n        for (let i = 0, l; i < lyrs.length; i++) {\n            l = lyrs[i];\n            if (l.get('title')) {\n                elm.appendChild(LayerSwitcher.renderLayer_(map, l, i, options, render));\n            }\n        }\n    }\n    /**\n     * **_[static]_** - Call the supplied function for each layer in the passed layer group\n     * recursing nested groups.\n     * @param lyr The layer group to start iterating from.\n     * @param fn Callback which will be called for each layer\n     * found under `lyr`.\n     */\n    static forEachRecursive(lyr, fn) {\n        lyr.getLayers().forEach(function (lyr, idx, a) {\n            fn(lyr, idx, a);\n            if (lyr instanceof LayerGroup) {\n                LayerSwitcher.forEachRecursive(lyr, fn);\n            }\n        });\n    }\n    /**\n     * **_[static]_** - Generate a UUID\n     * Adapted from http://stackoverflow.com/a/2117523/526860\n     * @returns {String} UUID\n     */\n    static uuid() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            const r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\n            return v.toString(16);\n        });\n    }\n    /**\n     * Apply workaround to enable scrolling of overflowing content within an\n     * element. Adapted from https://gist.github.com/chrismbarr/4107472\n     * @param elm Element on which to enable touch scrolling\n     * @protected\n     */\n    static enableTouchScroll_(elm) {\n        if (LayerSwitcher.isTouchDevice_()) {\n            let scrollStartPos = 0;\n            elm.addEventListener('touchstart', function (event) {\n                scrollStartPos = this.scrollTop + event.touches[0].pageY;\n            }, false);\n            elm.addEventListener('touchmove', function (event) {\n                this.scrollTop = scrollStartPos - event.touches[0].pageY;\n            }, false);\n        }\n    }\n    /**\n     * Determine if the current browser supports touch events. Adapted from\n     * https://gist.github.com/chrismbarr/4107472\n     * @returns {Boolean} True if client can have 'TouchEvent' event\n     * @protected\n     */\n    static isTouchDevice_() {\n        try {\n            document.createEvent('TouchEvent');\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Fold/unfold layer group\n     * @param lyr Layer group to fold/unfold\n     * @param li List item containing layer group\n     * @protected\n     */\n    static toggleFold_(lyr, li) {\n        li.classList.remove(CSS_PREFIX + lyr.get('fold'));\n        lyr.set('fold', lyr.get('fold') === 'open' ? 'close' : 'open');\n        li.classList.add(CSS_PREFIX + lyr.get('fold'));\n    }\n    /**\n     * If a valid groupSelectStyle value is not provided then return the default\n     * @param groupSelectStyle The string to check for validity\n     * @returns The value groupSelectStyle, if valid, the default otherwise\n     * @protected\n     */\n    static getGroupSelectStyle(groupSelectStyle) {\n        return ['none', 'children', 'group'].indexOf(groupSelectStyle) >= 0\n            ? groupSelectStyle\n            : 'children';\n    }\n}\n// Expose LayerSwitcher as ol.control.LayerSwitcher if using a full build of\n// OpenLayers\nif (window['ol'] && window['ol']['control']) {\n    window['ol']['control']['LayerSwitcher'] = LayerSwitcher;\n}\n\nreturn LayerSwitcher;\n\n})));\n","const mapsettings = {\n    startupzoom: 5,\n    uselocaltime: true,\n    savepositionhistory: false,\n    histintervalmsec: 10000,\n    historyDb: \"positionhistory.db\",\n    stratuxmaxmetarcount: 800,\n    showattribution: true,\n    lockownshiptocenter: true,\n    ownshipimage: \"airplane.png\",\n    trafficimage: \"red-yellow-traffic.png\",\n    usemetricunits: false\n};\n\nexport default mapsettings;\n","\n\nexport async function attachAirportInfo(station) {\n    try {\n        const response = await fetch(`/airport?id=${station}`);\n        if (!response.ok) {\n            return {};\n        }\n        const airport = await response.json();\n        return airport; \n    }\n    catch (error) \n    {\n        return {};\n    }\n}\n","// stratuxconversion.js\n// Converts Stratux ADS-B websocket weather object to FAA pre-processed object format\n\nimport { attachAirportInfo } from './airportInfo.js'\n\n/**\n * Converts a Stratux METAR object to FAA METAR format\n * @param {Object} stratuxObject - The raw Stratux METAR object\n * @param {Object} [stationInfo] - Optional lookup for lat/lon/elevation by station_id\n * @returns {Object} FAA-style METAR object\n */\nexport async function convertStratuxToFAA(stratuxObject, stationInfo) {\n    \n    if (stratuxObject.Type === \"METAR\" || stratuxObject.Type === \"TAF\") {\n        if (!stationInfo) {\n            stationInfo = await attachAirportInfo(stratuxObject.Location);\n            //console.log(\"Airport Info\", stationInfo);\n        }\n    }\n    \n    // Make sure stratuxObject.Location is a string airport code, e.g. \"KORD\"\n    const cleanedData = stratuxObject.Data.replace(/\\s*\\n\\s*/g, ' ').trim();\n    const forecast = parseWeatherForecast(stratuxObject.Data);\n\n    // Time handling\n    let timestamp = stratuxObject.Time;\n    let loc_time = stratuxObject.LocaltimeReceived.replace(/^0001-01-01/, '');\n\n\n    // Weather handling\n    const weatherRaw = `${stratuxObject.Location} ${timestamp} ${cleanedData}`;\n    const station_id = stratuxObject.Location;\n    const observation_time = await parseObservationTime(loc_time);\n    const raw_text = weatherRaw;\n    const metar_type = stratuxObject.Type;\n\n    // Basic regex parsing\n    const tempDewRegex = /(\\d{2})\\/(\\d{2})/;\n    const windRegex = /(\\d{3})(\\d{2})KT/;\n    const altimRegex = /A(\\d{4})/;\n    const visRegex = /(\\d{1,2})SM/;\n    const skyRegex = /(FEW|SCT|BKN|OVC)(\\d{3})/g;\n\n    const tempDewMatch = weatherRaw.match(tempDewRegex);\n    const windMatch = weatherRaw.match(windRegex);\n    const altimMatch = weatherRaw.match(altimRegex);\n    const visMatch = weatherRaw.match(visRegex);\n\n    // Sky conditions\n    let sky_condition = [];\n    let skyMatch;\n    while ((skyMatch = skyRegex.exec(weatherRaw)) !== null) {\n        sky_condition.push({\n            sky_cover: skyMatch[1],\n            cloud_base_ft_agl: String(Number(skyMatch[2]) * 100)\n        });\n    }\n\n    let visMiles = visMatch ? Number(visMatch[1]) : 10;\n    let cond = \"\";\n\n    if (visMiles < 1) cond = \"LIFR\";\n    else if (visMiles < 3) cond = \"IFR\";\n    else if (visMiles < 5) cond = \"MVFR\";\n    else cond = \"VFR\";\n\n    let output = {\n        raw_text,\n        //color: \n        type: stratuxObject.Type,\n        station_id: station_id,\n        station_name: stationInfo?.name ?? null,\n        timestamp: stratuxObject.Time,\n        observation_time,\n        latitude: stationInfo?.lat ?? null,\n        longitude: stationInfo?.lon ?? null,\n        temp_c: tempDewMatch ? Number(tempDewMatch[1]) : null,\n        dewpoint_c: tempDewMatch ? Number(tempDewMatch[2]) : null,\n        wind_dir_degrees: windMatch ? Number(windMatch[1]) : null,\n        wind_speed_kt: windMatch ? Number(windMatch[2]) : null,\n        visibility_statute_mi: visMiles,\n        altim_in_hg: altimMatch ? (Number(altimMatch[1]) / 100).toFixed(2) : null,\n        sky_condition,\n        flight_category: cond, \n        metar_type,\n        elevation_m: stationInfo?.elevation_m ?? null,\n        forecast: forecast,\n    };\n\n    return output;\n}\n\n/**\n * Parses a TAF Data string into forecast periods with wind, visibility, and sky conditions\n * @param {string} tafData - Raw TAF Data string\n * @returns {Array} Array of forecast objects\n */\nfunction parseWeatherForecast(tafData) {\n    // Split into lines/periods\n    const lines = tafData\n        .replace(/\\n/g, ' ')\n        .replace(/=+$/, '')\n        .split(/(?=\\bFM\\d{6}|TEMPO|PROB\\d{2}|BECMG)/)\n        .map(line => line.trim())\n        .filter(line => line.length > 0);\n\n    const forecastPeriods = [];\n\n    for (const line of lines) {\n        // Identify type\n        let type = \"MAIN\";\n        let time = null;\n        let match;\n\n        if (line.startsWith(\"FM\")) {\n            type = \"FM\";\n            match = line.match(/^FM(\\d{6})/);\n            time = match ? match[1] : null;\n        } else if (line.startsWith(\"TEMPO\")) {\n            type = \"TEMPO\";\n            match = line.match(/^TEMPO\\s+(\\d{4})\\/(\\d{4})/);\n            time = match ? { from: match[1], to: match[2] } : null;\n        } else if (line.startsWith(\"PROB\")) {\n            type = \"PROB\";\n            match = line.match(/^PROB(\\d{2})\\s+(\\d{4})\\/(\\d{4})/);\n            time = match ? { prob: match[1], from: match[2], to: match[3] } : null;\n        } else if (line.startsWith(\"BECMG\")) {\n            type = \"BECMG\";\n            match = line.match(/^BECMG\\s+(\\d{4})\\/(\\d{4})/);\n            time = match ? { from: match[1], to: match[2] } : null;\n        }\n\n        // Parse wind, visibility, and sky conditions\n        const windRegex = /(\\d{3})(\\d{2})G?(\\d{2})?KT/;\n        const visRegex = /(\\d{1,2})SM/;\n        const skyRegex = /(FEW|SCT|BKN|OVC)(\\d{3})/g;\n\n        const windMatch = line.match(windRegex);\n        const visMatch = line.match(visRegex);\n\n        // Sky conditions\n        let sky_condition = [];\n        let skyMatch;\n        while ((skyMatch = skyRegex.exec(line)) !== null) {\n            sky_condition.push({\n                sky_cover: skyMatch[1],\n                cloud_base_ft_agl: String(Number(skyMatch[2]) * 100)\n            });\n        }\n\n        forecastPeriods.push({\n            type,\n            time,\n            text: line,\n            wind_dir_degrees: windMatch ? Number(windMatch[1]) : null,\n            wind_speed_kt: windMatch ? Number(windMatch[2]) : null,\n            wind_gust_kt: windMatch && windMatch[3] ? Number(windMatch[3]) : null,\n            visibility_statute_mi: visMatch ? Number(visMatch[1]) : null,\n            sky_condition\n        });\n    }\n\n    return forecastPeriods;\n}\n\nasync function parseObservationTime(timeStr) {\n    // Example: \"061955Z\" => \"YYYY-MM-DDTHH:MM:00Z\" for current day\n    if (!timeStr || !/^\\d{6}Z$/.test(timeStr)) return null;\n    const now = new Date();\n    const year = now.getUTCFullYear();\n    const month = String(now.getUTCMonth() + 1).padStart(2, '0');\n    const day = String(now.getUTCDate()).padStart(2, '0');\n    const hour = timeStr.slice(2, 4);\n    const minute = timeStr.slice(4, 6);\n    return `${year}-${month}-${day}T${hour}:${minute}:00Z`;\n}\n\n// You can add more helper functions as needed\n","import './map.css';\nimport 'ol/ol.css';\nimport 'ol-layerswitcher/dist/ol-layerswitcher.css';\nimport { Map as OLMap, View } from 'ol';\nimport TileLayer from 'ol/layer/Tile';\nimport { TileWMS, XYZ } from 'ol/source';\nimport OSM from 'ol/source/OSM';\nimport TileDebug from 'ol/source/TileDebug';\nimport { fromLonLat, toLonLat, transformExtent } from 'ol/proj';\nimport Feature from 'ol/Feature';\nimport Point from 'ol/geom/Point';\nimport Vector from 'ol/layer/Vector'\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport Style from 'ol/style/Style';\nimport Icon from 'ol/style/Icon';\nimport Collection from 'ol/Collection';\nimport CircleStyle from 'ol/style/Circle';\nimport Fill from 'ol/style/Fill';\nimport Stroke from 'ol/style/Stroke';\nimport Overlay from 'ol/Overlay';\nimport { defaults as defaultControls, ScaleLine } from 'ol/control';\nimport LayerSwitcher from 'ol-layerswitcher';\nimport mapsettings from './mapsettings.js';\nimport { attachAirportInfo } from './airportInfo.js';\nimport { parseWeatherMessage } from './messageparser.js';\nimport { parseMetarData } from './metarParser.js'\nimport { renderMetarPopup } from './metartemplate.js';  \nimport { metarPopupTemplate } from './metartemplate.js';\nimport { parsePirepData } from './pirepParser.js';\nimport { convertStratuxToFAA } from './stratuxconversion.js';\nimport { parseTafAmdData } from './tafParser.js';\n\n\n /**\n * Construct all of the application urls \n */\nlet URL_LOCATION            =  location.hostname;\nlet URL_PROTOCOL            =  location.protocol;\nlet URL_PORT                =  location.port;\nlet URL_HOST_BASE           =  URL_LOCATION;\nif (parseInt(URL_PORT) > 0) {\n    URL_HOST_BASE += `:${URL_PORT}`;\n}\nlet URL_HOST_PROTOCOL       = `${URL_PROTOCOL}//`;\nlet URL_SERVER              = `${URL_HOST_PROTOCOL}${URL_HOST_BASE}`;\nlet URL_GET_HISTORY         = `${URL_SERVER}/gethistory`;\nlet URL_PUT_HISTORY         = `${URL_SERVER}/savehistory`;\n\nlet deg = 0;\nlet alt = 0;\nlet lng = 0;\nlet lat = 0;\n\nlet viewextent = [-180, -85, 180, 85];\nlet viewposition = [];\nlet offset = [-18, -18];\nconst chicagoCoords = fromLonLat([-87.6298, 41.8781]); // Chicago: lon, lat\n\n\n/**\n * global variables\n */\nlet dblist = {};\nlet metadatasets = {};\nlet last_longitude = 0;\nlet last_latitude = 0;\nlet last_heading = 0;\nlet currentZoom = 9.0;\nlet lastcriteria = \"allregions\";\nlet tplcontainer = {};\nlet DistanceUnits = {};\nlet distanceunit = \"\";\nlet closeButton = {};\nlet popup = {}; \nlet popupcontent = {}; \nlet airplaneElement = {};\nlet layerState = {};\nlet mapState = {};\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    \n    // DOM is ready for map.html\n    tplcontainer = document.getElementById('tplcontainer');\n    popup = document.getElementById('popup');\n    popupcontent = document.getElementById('popup-content');\n    airplaneElement = document.getElementById('airplane');\n    closeButton = document.getElementById('closeBtn');\n    \n    closeButton.addEventListener(\"click\", (evt) => {\n\n        const metarFeatures = metarVectorLayer.getSource().getFeatures().map(f => {\n            return {\n                geometry: f.getGeometry().getCoordinates(),\n                properties: f.getProperties()\n            };\n        });\n\n        const tafFeatures = tafVectorLayer.getSource().getFeatures().map(f => {\n            return {\n                geometry: f.getGeometry().getCoordinates(),\n                properties: f.getProperties()\n            };\n        });\n\n        const view = map.getView();\n        mapState = {\n            pirep: pirepVectorLayer.getVisible(),\n            metar: metarVectorLayer.getVisible(),\n            taf: tafVectorLayer.getVisible(),\n            traffic: trafficVectorLayer.getVisible(),\n            osm: osmTileLayer.getVisible(),\n            center: view.getCenter(),\n            zoom: view.getZoom(),\n            rotation: view.getRotation(),\n            metarFeatures: metarFeatures,\n            tafFeatures: tafFeatures\n        };\n        localStorage.setItem('mapState', JSON.stringify(mapState));\n        window.history.back();\n    });\n\n    function restoreMapState() {\n        const saved = localStorage.getItem('mapState');\n        if (saved) {\n            try {\n                const mapState = JSON.parse(saved);\n                // Layer visibility\n                if (typeof mapState.pirep === \"boolean\") pirepVectorLayer.setVisible(mapState.pirep);\n                if (typeof mapState.metar === \"boolean\") metarVectorLayer.setVisible(mapState.metar);\n                if (typeof mapState.taf === \"boolean\") tafVectorLayer.setVisible(mapState.taf);\n                if (typeof mapState.traffic === \"boolean\") trafficVectorLayer.setVisible(mapState.traffic);\n                if (typeof mapState.osm === \"boolean\") osmTileLayer.setVisible(mapState.osm);\n                // Map view\n                if (Array.isArray(mapState.center) && mapState.center.length === 2) map.getView().setCenter(mapState.center);\n                if (typeof mapState.zoom === \"number\") map.getView().setZoom(mapState.zoom);\n                if (typeof mapState.rotation === \"number\") map.getView().setRotation(mapState.rotation);\n                \n                if (Array.isArray(mapState.metarFeatures)) {\n                    metarVectorLayer.getSource().clear();\n                    mapState.metarFeatures.forEach(f => {\n                        const { geometry, ...props } = f.properties || {};\n                        const feature = new Feature({\n                            geometry: new Point(f.geometry),\n                            ...props\n                        });\n                        metarVectorLayer.getSource().addFeature(feature);\n                    });\n                }\n\n                if (Array.isArray(mapState.tafFeatures)) {\n                    tafVectorLayer.getSource().clear();\n                    mapState.tafFeatures.forEach(f => {\n                        const { geometry, ...props } = f.properties || {};\n                        const feature = new Feature({\n                            geometry: new Point(f.geometry),\n                            ...props\n                        });\n                        tafVectorLayer.getSource().addFeature(feature);\n                    });\n                }\n            } catch (err) {\n                console.log(\"RESTORE ERROR:\", err)\n            }\n        }\n    }\n\n    /**\n     * Classes used by the on-the-fly weather SVG in metar popups\n     */\n    class WeatherProcessItem {\n        /**\n         * Extracted Metar data in a human readable format.\n         * @param weathertext raw metar string if provided station and time will be ignored and replaced with the content in the raw METAR\n         * @param station staion name for instance creation\n         * @param time time for instance creation\n         */\n        constructor (weathertext, station, time) {\n            //Wind speed, direction and unit\n            this.wind;// = new Wind();\n            //List of weather conditions reported\n            this.weather = new Array();\n            //List of Cloud observations\n            this.clouds = new Array();\n            this.station = station !== null && station !== void 0 ? station : \"----\";\n            this.time = time !== null && time !== void 0 ? time : new Date();\n            this.flightCategory = \"\";\n            if (weathertext != null) {\n                parseWeatherText(weathertext, this);\n            }\n        }\n    }\n    class Wind {\n        direction = 0;\n        speed = 0;\n        unit = \"\";\n        constructor() {}\n    };\n    class Variation {\n        constructor() {\n        }\n    };\n    class Cloud {\n        constructor() {\n        }\n    };\n    /**************** END OF SVG GENERATION CLASSES *****************/\n\n    /* Map objects used for various keyname lookups */\n    let airportNameKeymap = new Map();\n    let tafFieldKeymap = new Map();\n    let metarFieldKeymap = new Map();\n    let weatherAcronymKeymap = new Map();\n    let icingCodeKeymap = new Map();\n    let turbulenceCodeKeymap = new Map();\n    let skyConditionKeymap = new Map();\n    let trafficMap = new Map();\n    /*******keymap loading ******/\n    loadTafFieldKeymap();\n    loadMetarFieldKeymap();\n    loadWeatherAcronymKeymap();\n    loadTurbulenceCodeKeymap();\n    loadIcingCodeKeymap();\n    loadSkyConditionmKeymap();\n\n    const popupoverlay = new Overlay({\n        element: popup,\n        autoPan: true,\n        autoPanAnimation: { duration: 500 }\n    });\n\n    function buildWebSocketUrl(path) {\n        const protocol = \"ws://\";\n        return `${protocol}${location.host}${path}`;\n    }\n\n    function setupStratuxWebsockets() {\n        const wstfc = buildWebSocketUrl(\"/traffic\");\n        let wsTraffic = new WebSocket(wstfc);\n        wsTraffic.onmessage = function(evt){\n            let data = JSON.parse(evt.data);\n            addTrafficItem(data);\n        }\n\n        const wssit = buildWebSocketUrl(\"/situation\");\n        let wsSituation  = new WebSocket(wssit);\n        wsSituation.onmessage = function(evt){\n            if (myairplane !== null) {\n                let data = JSON.parse(evt.data);\n                setOwnshipOrientation(data);\n            }\n        }\n\n        const wswx = buildWebSocketUrl(\"/weather\");\n        let wsWeather = new WebSocket(wswx);\n        wsWeather.onmessage = async function(evt){\n            let message = JSON.parse(evt.data);\n\n            // TODO: Winds?\n            if (message.Type === \"WINDS\") return;\n            \n            let stratuxWeather = await convertStratuxToFAA(message);\n\n            switch (message.Type) {\n                case \"METAR\":\n                case \"SPECI\":\n                    processMetar(stratuxWeather);\n                    break;\n                case \"TAF\":\n                case \"TAF.AMD\":\n                    processTaf(stratuxWeather);\n                    break;\n                case \"PIREP\":\n                    processPirep(stratuxWeather);\n                    break;\n            }\n        }\n    }\n    setupStratuxWebsockets();\n\n    /**\n     * Icon markers for airports, TAFs, heliports, etc.\n     */\n    let tafMarker = new Icon({\n        crossOrigin: 'anonymous',\n        src: '/images/taf.svg',\n        size: [126, 90],\n        offset: [0, 0],\n        opacity: 1,\n        scale: .2\n    });\n    /*--------------------------------------*/\n    let pirepMarker = new Icon({\n        crossOrigin: 'anonymous',\n        src: '/images/pirep.png',\n        size:[85, 85],\n        offset: [0,0],\n        opacity: 1,\n        scale: .50\n    });\n\n    /**\n     * The scale of miles shown on lower left corner of map\n     */\n    const scaleLine = new ScaleLine({\n        units: 'imperial',\n        bar: true,\n        steps: 4,\n        minWidth: 140\n    });\n\n    const map = new OLMap({\n        target: 'map',\n        view: new View({\n            center: chicagoCoords,        \n            zoom: mapsettings.startupzoom,\n            enableRotation: false,\n            minZoom: 1,\n            maxZoom: 22\n        }),\n        controls: defaultControls().extend([scaleLine])\n    });\n    map.addOverlay(popupoverlay);\n\n    let osmTileLayer = new TileLayer({\n        source: new OSM(),\n        title: \"OSM\",\n        visible: true,\n        type: \"base\",\n        zIndex: 0\n    });\n    map.addLayer(osmTileLayer);\n\n\n    let pirepVectorLayer = new VectorLayer({\n        source: new VectorSource(),\n        title: \"Pireps\",\n        visible: false,\n        zindex: 11\n    });\n    map.addLayer(pirepVectorLayer);\n\n    let metarVectorLayer = new VectorLayer({\n        source: new VectorSource(),\n        title: \"Metars\",\n        visible: false,\n        zIndex: 13\n    });\n    map.addLayer(metarVectorLayer);\n\n    let tafVectorLayer = new VectorLayer({\n        source: new VectorSource(),\n        title: \"TAFs\",\n        visible: false,\n        zIndex: 13\n    });\n    map.addLayer(tafVectorLayer);\n\n    let trafficVectorLayer = new VectorLayer({\n        source: new VectorSource(),\n        title: \"Traffic\",\n        visible: false,\n        zIndex: 14\n    });\n    map.addLayer(trafficVectorLayer);\n\n    console.log(\"Creating ownship position layer\");\n    const myairplane = new Overlay({\n            element: airplaneElement\n    });\n    if (offset) {\n        myairplane.setOffset(offset);\n    }\n    if (viewposition) {\n        myairplane.setPosition(viewposition);\n        map.addOverlay(myairplane);\n    }\n\n    map.once('rendercomplete', function() {\n        restoreMapState();\n    });\n\n    /**\n     * popup close event handler\n     * @returns false!!\n     */\n    function closePopup() {\n        popupoverlay.setPosition(undefined);\n        return false;\n    }\n    window.closePopup = closePopup;\n\n    /**\n     * Add a qualified Traffic item to the traffic Map collection\n     * @param {json object} jsondata \n     */\n    function addTrafficItem(traffic) {\n        try {\n            trafficMap.delete(traffic.Icao_addr);\n        }\n        catch(err){\n            // do nothing\n        }\n        if (traffic.AgeLastAlt < 50 && traffic.Speed > 0) {\n            trafficMap.set(traffic.Icao_addr, traffic);\n            processTraffic(traffic);\n        }\n    }\n\n    /**\n     * Event to handle scaling of feature images\n     */\n    map.on('moveend', function(e) {\n        let newZoom = map.getView().getZoom();\n        if (currentZoom != newZoom) {\n            resizeDots(newZoom);\n            currentZoom = newZoom;\n            closePopup();\n        }\n    });\n\n    /**\n     * Event to view Metar/TAF popup & closure\n     */\n    map.on('click', (evt) => {\n        let hasfeature = false;\n        //let coords = toLonLat(evt.coordinate);\n        \n        map.forEachFeatureAtPixel(evt.pixel, (feature) => {\n            if (feature) {\n                hasfeature = true;\n                let datatype = feature.get(\"datatype\");\n                if (datatype === \"metar\") {\n                    displayMetarPopup(feature);\n                }\n                else if (datatype === \"taf\"){\n                    displayTafPopup(feature);\n                }\n                else if (datatype === \"pirep\") {\n                    displayPirepPopup(feature);\n                }\n                else if (datatype === \"airport\") { // simple airport marker\n                    displayAirportPopup(feature);\n                }\n                else if (datatype === \"traffic\") {\n                    //BAMHERE\n                    displayTrafficPopup(feature);\n                }\n                let coordinate = evt.coordinate;\n                popupoverlay.setPosition(coordinate);\n            }\n        });\n        if (!hasfeature) {\n            closePopup();\n        }\n    });\n\n    /**\n     * Create the html for a METAR popup element\n     * @param {feature} Feature: the metar feature the user clicked on \n     */\n    function displayMetarPopup(feature) {\n        let metar = feature.get(\"metar\");\n        let rawmetar = metar[\"raw_text\"];\n        let ident = metar.station_id;\n        let svg = feature.get(\"svgimage\");\n        let cat = metar.flight_category;\n        \n        if (cat == undefined || cat == \"undefined\"){\n            cat = \"VFR\";\n        }\n        \n        let time = (function() {\n            if (metar.observation_time) {\n                return metar.observation_time;\n            }\n            else if (metar.timestamp) {\n                return metar.timestamp;\n            }\n            else {\n                return new Date();\n            } \n        })();\n\n        let tempC = metar.temp_c;\n        let dewpC = metar.dewpoint_c;\n        let temp = convertCtoF(metar.temp_c);\n        let dewp = convertCtoF(metar.dewpoint_c);\n        let windir = metar.wind_dir_degrees;\n        let winspd = metar.wind_speed_kt + \"\";\n        let wingst = metar.wind_gust_kt + \"\"; \n        let altim = getAltimeterSetting(metar.altim_in_hg);\n        let vis = getDistanceUnits(metar.visibility_statute_mi);\n        let wxcode = metar.wx_string !== undefined ? decodeWxDescriptions(metar.wx_string) : \"\";\n        let taflabelcssClass = \"taflabel\"\n        let skycondition = metar.sky_condition;\n        let skyconditions;\n        let icingconditions;\n        if (skycondition !== undefined) {\n            skyconditions = decodeSkyCondition(skycondition, taflabelcssClass);\n        }\n        let icingcondition = metar.icing_condition;\n        if (icingcondition !== undefined) {\n            icingconditions = decodeIcingOrTurbulenceCondition(icingcondition, taflabelCssClass);\n        }\n        \n        let btncolors = getCategoryColors(cat);\n        let bgcolor = btncolors.bgcolor;\n        let fgcolor = btncolors.fgcolor;\n        let css = `<span class=\"metarheader\" style=\"background-color:${bgcolor}; color:${fgcolor}\";>`;\n\n        if (ident != \"undefined\") {\n            let name = feature.get('station_name');\n            let html = `<div class=\"featurepopup\" id=\"featurepopup\">`;\n            html +=    `${css}${name}<br>${ident} - ${cat}</span><br>`;\n            html +=    `<div class=\"metar-popup-body\">`; // beginning of metar-popup-body\n            html +=   `Time:&nbsp<b>${time}</b><br>`;\n            html +=   temp ? `Temp:&nbsp<b>${tempC} °C</b> (${temp})<br>` : \"\";\n            html +=   dewp ? `Dewpoint:&nbsp<b>${dewpC} °C</b> (${dewp})<br>` : \"\";\n            html +=   windir ? `Wind Direction:&nbsp<b>${windir}°</b><br>` : \"\";\n            html +=   winspd ? `Wind Speed:&nbsp<b>${winspd}&nbspkt</b><br>` : \"\";\n            html +=   wingst ? `Wind Gust:&nbsp<b>${wingst}&nbspkt</b><br>` : \"\";\n            html +=   altim  ? `Altimeter:&nbsp<b>${altim}&nbsphg</b><br>` : \"\";\n            html +=   vis ? `Horizontal Visibility:&nbsp<b>${vis}</b><br>` : \"\";\n            html +=   wxcode ? `Weather:&nbsp<b>${wxcode}</b><br>`: \"\";\n            html +=   skyconditions ? `${skyconditions}` : \"\";\n            html +=   icingconditions ? `${icingconditions}` : \"\";\n            html += `<span class=\"windsvg\">${svg}</span>`;\n            html += `</div>`; // end of metar-popup-body \n            html += `<hr>`;\n            html += `<button class=\"custom-popup-closer\" onclick=\"closePopup()\" style=\"background:${bgcolor}; color:${fgcolor};\">close</button>`\n            html += `<textarea id=\"rawdata\" class=\"rawdata\">${rawmetar}</textarea><br>`; \n            console.log(\"METAR POPUP\", html);\n            //debugger;\n            popupcontent.innerHTML = html;  \n        }\n    }\n\n    /**\n     * Create the html for a TAF popup element\n     * @param {feature} Feature: the taf feature the user clicked on\n     */\n    function displayTafPopup(feature) {\n        let taf = feature.get(\"taf\");\n        let id = feature.get(\"ident\");\n        let rawtaf = taf.raw_text;\n        let btncolors = getCategoryColors(taf.flight_category);\n        let bgcolor = btncolors.bgcolor;\n        let fgcolor = btncolors.fgcolor;\n        let forecast = taf.forecast;\n        \n        let outerhtml = `<div style=\"display:block;\">` +\n                            `<span class=\"taftitlelabel\" style=\"background-color:${bgcolor}; color:${fgcolor};\">Terminal Area Forecast - ${id}</span>` +\n                            `<div class=\"taf-popup-content\">` +\n                                `<div class=\"taf\">` + \n                                    `<pre><code>` +\n                                    `<table class=\"tafmessage\" id=\"taftable\">` +\n                                        `<tr class=\"tafbody\">` + \n                                            `<td id=\"tafdata\">###</td>` +\n                                        `</tr>` +\n                                    `</table>` +\n                                    `</code></pre>` +                 \n                                `</div>`;\n\n        let html = \"<div>\"; // beginning of forecast div\n        \n        for (const item in forecast) {\n            let value = forecast[item];\n            if (typeof(value) === 'object') {\n                for (const subitem in value) {\n                    let subvalue = value[subitem];\n                    let fcv = parseForecastField(subitem, subvalue);\n                    if (fcv) html += fcv; \n                }\n                //html += \"</p><hr>\";\n            } \n            else {\n                let pff = parseForecastField(item, value);\n                if (pff) html += pff; \n            }\n        }\n\n        let temphtml = outerhtml.replace(\"###\", html) + `</p></div>`; // end of forecast div\n        let footerhtml = `<div class=\"taf-popup-footer\">`; // beginning of footer div\n        footerhtml +=        `<button class=\"custom-popup-closer\" onclick=\"closePopup()\" style=\"background:${bgcolor}; color:${fgcolor};\">close</button>`;\n        footerhtml +=        `<textarea id=\"rawdata\" class=\"rawdata\">${rawtaf}</textarea><br>`;\n        footerhtml +=    `</div>`;  // end of footer div\n        footerhtml += `</div>`; // end of taf-popup-container div\n        let innerhtml = temphtml + footerhtml;\n        popupcontent.innerHTML = innerhtml;\n    }\n\n    /**\n     * Create the html for a PIREP popup element\n     * @param {object} feature: the pirep the user clicked on\n     */\n    function displayPirepPopup(feature) {\n        let pirep = feature.get(\"pirep\");\n        let rawpirep = pirep.get(\"raw_text\");\n        let outerhtml = `<div class=\"taftitle\">` + \n                            `<span class=\"taftitlelabel\">${pirep.report_type} FROM AIRCRAFT: ${pirep.aircraft_ref}</span><p></p>` +\n                        `</div>` +\n                        `<div class=\"taf\">` + \n                            `<pre><code>` +\n                            `<table class=\"tafmessage\" id=\"taftable\">` +\n                                `<tr class=\"tafbody\">` + \n                                    `<td id=\"tafdata\">###</td>` +\n                                `</tr>` +\n                            `</table>` +\n                            `</code></pre>` +                 \n                        `</div>` + \n                        `<br><br>`;\n\n        let html = \"<div>\";\n        let pireplabel = `<span class=\"pirepitem\">`\n        let thistime = \"\";\n        for (const pirepkey in pirep) {\n            let pirepvalue = pirep[pirepkey];\n            let fieldname = getFieldDescription(pirepkey);\n            switch (pirepkey) {\n                case \"receipt_time\":\n                    thistime = pirepvalue;\n                    if (mapsettings.uselocaltime) {\n                        thistime = getLocalTime(pirepvalue);\n                    }\n                    html += `${pireplabel}${fieldname}: <b>${thistime}</b></span><br>`;\n                    break;\n                case \"observation_time\":\n                    thistime = pirepvalue;\n                    if (mapsettings.uselocaltime) {\n                        thistime = getLocalTime(pirepvalue);\n                    }\n                    html += `${pireplabel}${fieldname}: <b>${thistime}</b></span><br>`;\n                    break;\n                case \"latitude\":\n                case \"longitude\":\n                case \"altitude_ft_msl\":\n                case \"temp_c\":\n                case \"dewpoint_c\":\n                case \"time_becoming\":\n                case \"probability\":\n                case \"wind_speed_kt\":\n                case \"wind_gust_kt\":\n                case \"wind_dir_degrees\":\n                case \"wind_shear_dir_degrees\":\n                case \"wind_shear_hgt_ft_agl\":\n                case \"wind_shear_speed_kt\":\n                case \"vert_vis_ft\":\n                case \"visibility_statute_mi\":\n                    html += `${pireplabel}${fieldname}: <b>${pirepvalue}°</b></span><br>`;\n                    break;\n                case \"sky_condition\":\n                    html += `<span class=\"pirepskyheader\">${fieldname}</span><br>`;\n                    html += decodeSkyCondition(pirepvalue, \"pirepitem\");\n                    html += \"<hr>\";\n                    break;\n                case \"turbulence_condition\":\n                case \"icing_condition\":\n                    html += `<span class=\"pirepskyheader\">${fieldname}</span><br>`;\n                    html += decodeIcingOrTurbulenceCondition(pirepvalue, \"pirepitem\");\n                    html += \"<hr>\";\n                    break;\n                case \"temperature\":\n                    html += `<span class=\"pirepskyheader\">Weather</span><br>`;\n                    break;\n                case \"altim_in_hg\":\n                    let altimvalue = getInchesOfMercury(pirepvalue);\n                    html += `<span class=\"pirepitem\">${fieldname}: <b>${altimvalue}</b></span><br>`;\n                    break;\n                case \"wx_string\":\n                    let lineval = decodeWxDescriptions(pirepvalue);\n                    html += `<span class=\"pirepitem\">${fieldname}: <b>${lineval}</b></span><br>`;\n                    break;\n                case \"change_indicator\":\n                    let change = getSkyConditionDescription(pirepvalue);\n                    html += `<span class=\"pirepitem\">${fieldname}: <b>${change}</b></span><br>`;\n                    break;\n                case \"pirep_type\":\n                case \"aircraft_ref\":\n                case \"raw_text\":\n                    break;\n                default:\n                    console.log(`${pirepkey} NOT FOUND!`);\n                    break;\n            }\n        }\n        html += `<button class=\"custom-popup-closer\" onclick=\"closePopup()\" style=\"background:${bgcolor}; color:${fgcolor};\">close</button>`\n        html += `<textarea id=\"rawdata\" class=\"rawdata\">${rawpirep}</textarea><br>`; \n        let innerhtml = outerhtml.replace(\"###\", html);\n        popupcontent.innerHTML = innerhtml;\n    }\n\n    /**\n     * Parse forcast fields from metars or tafs\n     * @param {string} rawfieldname - the object key before \"cleaning\" underscores, etc.\n     * @param {object} fieldvalue json object corresponding to the key\n     * @returns \n     */\n    function parseForecastField(rawfieldname, fieldvalue) {\n        let html = \"\";\n        let fieldname = tafFieldKeymap.get(rawfieldname);\n        \n        if (fieldname && rawfieldname) {\n            let formattedvalue = null;\n                switch (rawfieldname) {\n                    case \"fcst_time_from\":\n                        let thistime = fieldvalue;\n                        if (mapsettingsuselocaltime) {\n                            thistime = getLocalTime(fieldvalue);\n                        }\n                        html = `<span class=\"fcstlabel\"><b>${thistime}</b></span>`;\n                        break;\n                    case \"fcst_time_to\": // I'm going to ignore this field to save space on the popup\n                    //html = `&nbspto&nbsp<b>${fieldvalue}</b></span><br>`\n                    //html = `<span class=\"fcstlabel\">${formattedvalue}</span><br>`;\n                        break;\n                    case \"change_indicator\":\n                        let changevalue = getWeatherAcronymDescription(fieldvalue);\n                        if (changevalue) {\n                            html = `<span class=\"taflabel\">${fieldname}: <b>${changevalue}</b></span><br>`;\n                        }\n                        break;\n                    case \"temperature\":\n                    case \"time_becoming\":\n                    case \"probability\":\n                    case \"wind_speed_kt\":\n                    case \"wind_gust_kt\":\n                    case \"wind_shear_hgt_ft_agl\":\n                    case \"wind_shear_speed_kt\":\n                    case \"altim_in_hg\":\n                    case \"vert_vis_ft\":\n                    case \"wx_string\":\n                        if (fieldname === \"wx_string\") {\n                            formattedvalue = decodeWxDescriptions(fieldvalue);\n                            if (formattedvalue) {\n                                html = `<span class=\"tafwxlabel\">${fieldname}: <b>${formattedvalue}</b></span><br>`;\n                            }\n                        }\n                        else {\n                            if (fieldvalue) {\n                                html = `<span class=\"taflabel\">${fieldname}: <b>${fieldvalue}</b></span><br>`;\n                            }\n                        }\n                        break;\n                    case \"sky_condition\":\n                        formattedvalue = decodeSkyCondition(fieldvalue);\n                        if (formattedvalue) {\n                            html = `<span class=\"tafskyheader\">${fieldname}</span><br>${formattedvalue}`;\n                        }\n                        break;\n                    case \"turbulence_condition\":\n                    case \"icing_condition\":\n                        formattedvalue = decodeIcingOrTurbulenceCondition(fieldvalue);\n                        if (formattedvalue) {\n                            html = `<span class=\"tafskyheader\">${fieldname}</span><br>${formattedvalue}`;\n                        }\n                        break;\n                    case \"wind_dir_degrees\":\n                    case \"wind_shear_dir_degrees\":\n                        if (fieldvalue) {  \n                            html = `<span class=\"taflabel\">${fieldname}: <b>${fieldvalue}°</b></span><br>`;\n                        }\n                        break;\n\n            }\n        }\n        return html;\n    }\n\n    /**\n     * Decode sky conditions\n     * @param {object} json object skyconditions \n     * @param {string} css class to use \n     * @returns html string \n     */\n    function decodeSkyCondition(skycondition) {\n        let html = \"\";\n        if (skycondition) {\n            try {\n                let values = Object.values(skycondition);\n                for (const x in values) {\n                    let condition = skycondition[x];\n                    if (condition) {\n                        let fieldname = \"\";\n                        let fieldvalue = \"\";\n                        if (typeof(condition) === \"object\") {\n                            for (const index in condition) {\n                                fieldname = getFieldDescription(index);\n                                fieldvalue = condition[index];\n                                if (fieldname && fieldvalue) {\n                                    html += `<span>${fieldname}: <b>${fieldvalue}</b></span><br>`;\n                                }\n                            }\n                        }\n                        else {\n                            fieldname = getFieldDescription(x);\n                            fieldvalue = getSkyConditionDescription(condition);\n                            if (fieldname && fieldvalue) {\n                                html += `<span>${fieldname}: <b>${fieldvalue}</b></span><br>`;\n                            }\n                        }\n                    }\n                }\n            }\n            catch (error) {\n                console.log(error.message);\n            }\n        }\n        return html;\n    }\n\n    /**\n     * Get inches of mercury fixed at 2 decimal places\n     * @param {float} altimeter \n     * @returns \n     */\n    function getInchesOfMercury(altimeter) {\n        let inhg = parseFloat(altimeter);\n        return inhg.toFixed(2);\n    }\n\n    /**\n     * Decode icing or turbulence condition\n     * @param {object} condition json object \n     * @returns html string\n     */\n    function decodeIcingOrTurbulenceCondition(condition) {\n        let html = \"\";\n        for (const item in condition) {\n            let value = condition[item];\n            if (typeof(value) === 'object') {\n                for (const subitem in value) {\n                    let subvalue = value[subitem];\n                    html += parseConditionField(subitem, subvalue);\n                }\n                html += \"<br><hr>\";\n            } \n            else {\n                html += parseConditionField(item, value);\n            }\n        }        \n        return html;        \n    }\n\n    /**\n     * Parse an icing or turbulence condition field value, \n     * which could be an object or a string and return html\n     * @param {string} rawfieldname \n     * @param {object} fieldvalue \n     * @returns html string\n     */\n    function parseConditionField(rawfieldname, fieldvalue) {\n        let fieldname = getFieldDescription(rawfieldname);\n        let image = \"\";\n        let html = \"\";\n        switch (rawfieldname) {\n            case \"turbulence_type\":\n            case \"icing_type\":\n                html += `<span class=\"pirepitem\">${fieldname}: <b>${fieldvalue}</b></span><br>`;\n                break; \n            case \"turbulence_intensity\":\n            case \"icing_intensity\":\n                image = getConditionImage(rawfieldname, fieldvalue);\n                html += `<span class=\"pirepitem\">${fieldname}</span>`;\n                html += `<div class=\"conditionimage\"><image src=\"${URL_SERVER}/img/${image}\"></div><br>`;\n                break;\n            case \"turbulence_base_ft_msl\":\n            case \"icing_base_ft_msl\":\n                html += `<span class=\"pirepitem\">${fieldname}: <b>${fieldvalue}</b></span><br>`;\n                break;\n            case \"turbulence_top_ft_msl\":\n            case \"icing_top_ft_msl\":\n                html += `<span class=\"pirepitem\">${fieldname}: <b>${fieldvalue}</b></span></br />`;\n                break;\n            default:\n                break;\n        }\n        return html;\n    }\n\n    /**\n     * Get the image that corresponds to icing or turbulence condition\n     * @param {string} conditiontype \n     * @param {string} conditionvalue \n     * @returns html image string\n     */\n    function getConditionImage(conditiontype, conditionvalue) {\n        let image = \"\";\n        if (conditiontype === \"icing_intensity\") {\n            switch (conditionvalue) {\n                case \"NEGclr\":\n                case \"NEG\":\n                    image = \"/images/Nil.png\";\n                    break;\n                case \"RIME\":\n                case \"TRC\":\n                    image = \"/images/IceTrace.png\";\n                    break;\n                case \"TRC-LGT\":\n                    image = \"/images/IceTraceLight.png\"\n                case \"LGT\":\n                    image = \"/images/IceLight.png\";\n                    break;\n                case \"LGT-MOD\":\n                    image = \"/images/IceLightMod.png\";\n                    break;\n                case \"MOD\":\n                    image = \"/images/IceMod.png\";\n                    break;\n                case \"MOD-SEV\":\n                    image = \"/images/IceLight.png\";\n                    break;\n                case \"SEV\":\n                    image = \"/images/IceSevere.png\";\n                    break;\n            }\n        }   \n        else if (conditiontype === \"turbulence_intensity\") { \n            switch (conditionvalue) {\n                case \"NEG\":\n                case \"NEGclr\": \n                    image = \"/images/Nil.png\";\n                    break;\n                case \"SMTH-LGT\":\n                case \"LGT\":\n                    image = \"/images/TurbSmoothLight.png\";\n                case \"LGT-CHOP\":\n                    image = \"/images/TurbLight.png\";    \n                    break;\n                case \"CHOP\":\n                case \"LGT-MOD\":\n                    image = \"/images/TurbLightMod.png\";\n                    image = \"/images/TurbLightMod.png\";\n                    break;\n                case \"MOD\":\n                case \"MOD-CHOP\":\n                    image = \"/images/TurbMod.png\";\n                    break;\n                case \"MOD-SEV\":\n                    image = \"/images/TurbModSevere.png\";\n                    break;\n                case \"SEV\":\n                    image = \"/images/TurbSevere.png\";\n                    break;\n            }\n        }\n        else {\n            image = \"\";\n        }\n        \n        return image;\n    }\n\n    /**\n     * Build the html for an airport feature\n     * @param {*} feature: the airport the user clicked on \n     */\n    function displayAirportPopup(feature) {\n        let ident = feature.get(\"ident\");\n        let name = feature.get(\"station_name\");\n        let html = `<div id=\"#featurepopup\"><pre><code><p>`;\n            html += `<span class=\"airportpopuplabel\">${name} - ${ident}</span><p></p>`;\n            html += `</p></code></pre></div>`;\n            html += `<p><button class=\"ol-airport-closer\" onclick=\"closePopup()\">close</button></p>`;\n        popupcontent.innerHTML = html; \n    }\n\n    /**\n     * Build the html for a traffic feature\n     * @param {*} feature: the traffic the user clicked on \n     */\n    function displayTrafficPopup(feature) {\n        let jsondata = feature.get(\"jsondata\");\n\n        let name = jsondata.Tail; //getFormattedAirportName(ident)\n        let html = `<div id=\"#featurepopup\"><pre><code><p>`;\n            html += `<span>${jsondata.Reg}:alt=${jsondata.Alt},course=${jsondata.Track}@${jsondata.Speed}kt</span><p></p>`;\n            html += `</p></code></pre></div>`;\n            html += `<p><button class=\"ol-airport-closer\" onclick=\"closePopup()\">close</button></p>`;\n        popupcontent.innerHTML = html; \n    }\n\n    /**\n     * Draw any traffic on the map\n     */\n    function processTraffic(trafficObject) {\n        /*-----------------------------------------------------------------------------------------    \n                                    Traffic JSON sample \n        -------------------------------------------------------------------------------------------\n        {\"Icao_addr\":11316589,\"Reg\":\"N916EV\",\"Tail\":\"N916EV\",\"Emitter_category\":0,\n        \"OnGround\":false,\"Addr_type\":0,\"TargetType\":0,\"SignalLevel\":-28.00244822746525,\n        \"Squawk\":0,\"Position_valid\":false,\"Lat\":0,\"Lng\":0,\"Alt\":5550,\"GnssDiffFromBaroAlt\":0,\n        \"AltIsGNSS\":false,\"NIC\":0,\"NACp\":0,\"Track\":0,\"Speed\":0,\"Speed_valid\":false,\"Vvel\":0,\n        \"Timestamp\":\"2019-03-12T13:32:30.563Z\",\"PriorityStatus\":0,\"Age\":18.2,\"AgeLastAlt\":1.83,\n        \"Last_seen\":\"0001-01-01T00:39:27.49Z\",\"Last_alt\":\"0001-01-01T00:39:43.86Z\",\n        \"Last_GnssDiff\":\"0001-01-01T00:00:00Z\",\"Last_GnssDiffAlt\":0,\"Last_speed\":\"0001-01-01T00:00:00Z\",\n        \"Last_source\":1,\"ExtrapolatedPosition\":false,\"BearingDist_valid\":true,\n        \"Bearing\":92.7782277589171,\"Distance\":9.616803034808295e+06}\n        --------------------------------------------------------------------------------------------*/\n        \n        console.log(trafficObject);\n\n        for (const key in trafficObject) {\n            let scalesz = getScaleSize();\n            let geom = new Point(fromLonLat([trafficObject.Lng, trafficObject.Lat]));\n            \n            // convert Track degrees to radians\n            let tradians = trafficObject.Track * 0.0174533;\n\n            let trafficmarker = new Icon({\n                crossOrigin: \"anonymous\",\n                src: `/images/${mapsettings.trafficimage}`,\n                offset: [0,0],\n                opacity: 1,\n                scale: .08,\n                rotation: tradians  \n            });\n            \n            let trafficFeature = new Feature({\n                ident: key,\n                jsondata: trafficObject,\n                datatype: \"traffic\",\n                geometry: geom\n            });\n\n            trafficFeature.setStyle(new Style({\n                image: trafficmarker\n            }));\n            \n            //trafficmarker.style.transform = \"rotate(\" + item.Track + \"deg)\";\n            trafficFeature.setId(key);\n            // TODO: Add trafficFeature to the map\n        }\n    }\n\n    /**\n     * Place metar features on the map. color-coded to the conditions\n     * @param {object} metar object: JSON object with metar data\n     */\n    function processMetar(metar) {\n        let scaleSize = getScaleSize();\n\n        try {\n            let popupSvg = \"\";\n            let mapDotSvg = \"\";\n            let airportInfo = null;\n            try { \n                popupSvg = rawWeatherTextToSVG(metar, 150, 150, mapsettings.usemetricunits);\n                mapDotSvg = getWindBarbSvg(95, 95, metar); \n            }\n            catch { }\n            \n            let metarmarker = new Icon({\n                crossOrigin: 'anonymous',\n                src: `data:image/svg+xml;utf8,${encodeURIComponent(mapDotSvg)}`,\n                offset: [0,0],\n                opacity: 1,\n                scale: scaleSize\n            });\n            let metarFeature = new Feature({\n                metar: metar,\n                datatype: \"metar\",\n                geometry: new Point(fromLonLat([metar.longitude, metar.latitude])),\n                station_name: metar.station_name,\n                svgimage: popupSvg \n            });\n            metarFeature.setStyle(new Style({\n                image: metarmarker\n            }));\n            metarFeature.setId(metar.station_id);\n            const oldFeature = metarVectorLayer.getSource().getFeatureById(metar.station_id);\n            if (oldFeature) {\n                metarVectorLayer.getSource().removeFeature(oldFeature);\n            }\n            metarVectorLayer.getSource().addFeature(metarFeature); \n        }\n        catch(error) {\n            console.log(error.message);\n        }\n    }\n\n    /**\n     * Place taf feature objects on the map\n     * @param {object} taf: JSON object\n     */\n    function processTaf(taf) {\n        try {\n            let tafFeature = new Feature({\n                ident: taf.station_id,\n                taf: taf,\n                datatype: \"taf\",\n                geometry: new Point(fromLonLat([taf.longitude, taf.latitude]))\n            });\n            tafFeature.setStyle(new Style({\n                image: tafMarker\n            }));\n            tafFeature.setId(taf.station_id);\n            const oldFeature = tafVectorLayer.getSource().getFeatureById(taf.station_id);\n            if (oldFeature) {\n                tafVectorLayer.getSource().removeFeature(oldFeature);\n            }\n            tafVectorLayer.getSource().addFeature(tafFeature)\n        }\n        catch (error){\n            console.log(error.message);\n        }\n    }\n\n    /**\n     * Place pirep features on the map\n     * @param {object} pirep: JSON object with LOTS of pireps \n     */\n    function processPirep(pirep) {\n        try {\n            // generate a \"pseudo-heading\" to use if wind dir is absent\n            let heading = Math.random()*Math.PI*2;\n            if (pirep.wind_dir_degrees) {\n                heading = (pirep.wind_dir_degrees * 0.0174533);\n            }\n            let pirepFeature = new Feature({\n                ident: pirep.aircraft_ref,\n                pirep: pirep,\n                datatype: \"pirep\",\n                geometry: new Point(fromLonLat([pirep.longitude, pirep.latitude])),\n            });\n            pirepFeature.setStyle(new Style({\n                image: pirepMarker\n            }));\n\n            let id = pirep.aircraft_ref ? pirep.aircraft_ref : pirep.station_id;\n            pirepFeature.setId(id);\n            const oldFeature = pirepVectorLayer.getSource().getFeatureById(id);\n            if (oldFeature) {\n                pirepVectorLayer.getSource().removeFeature(oldFeature);\n            }\n            pirepVectorLayer.getSource().addFeature(pirepFeature);\n        }\n        catch (error){\n            console.log(error.message);\n        }\n    }\n\n    /**\n     * This routine adjusts feature \"dot\" image \n     * sizes, depending on current zoom level\n     */\n    let resizing = false;\n    function resizeDots(newzoom) {\n        if (!resizing) {\n            resizing = true;\n            currentZoom = parseInt(newzoom.toFixed(0));\n            let newscale = getScaleSize();\n            let metarMarkers = metarVectorLayer.getSource().getFeatures();\n            for (let i = 0; i < metarMarkers.length; i++) {\n                let style = metarMarkers[i].getStyle();\n                if (style && style.getImage && style.getImage()) {\n                    style.getImage().setScale(newscale);\n                    metarMarkers[i].setStyle(style); // update the feature's style\n                }\n            }\n            resizing = false;\n        }\n    }\n\n    function getScaleSize() {\n        let scale = 1;\n        switch(true) {\n            case currentZoom >= 0 && currentZoom < 1:\n                scale = .05;\n                break;\n            case currentZoom >= 1 && currentZoom < 2:\n                scale = .075;\n                break;\n            case currentZoom >=2 && currentZoom < 3:\n                scale = .10;\n                break;\n            case currentZoom >= 3 && currentZoom < 4:\n                scale = .15;\n                break;\n            case currentZoom >= 4 && currentZoom < 5:\n                scale = .275;\n                break;\n            case currentZoom >= 5 && currentZoom < 6:\n                scale = .40;\n                break;\n            case currentZoom >= 6 && currentZoom < 7:\n                scale = .60;\n                break;\n            case currentZoom >= 7 && currentZoom < 8:\n                scale = .80;\n                break;\n            case currentZoom >= 8 && currentZoom < 9:\n                scale = 1;\n                break;\n            case currentZoom >= 9 && currentZoom < 10:\n                scale = 1.2;\n                break;\n            case currentZoom >= 10 && currentZoom < 11:\n                scale = 1.4;\n                break;\n            case currentZoom >= 11:\n                scale = 1.6;\n                break;\n        }\n        return scale;\n    }\n\n\n    const layerSwitcher = new LayerSwitcher({\n        tipLabel: 'Layers', \n        groupSelectStyle: 'children'\n    });\n    map.addControl(layerSwitcher);\n\n    // Add event listeners for layer visibility changes\n    map.getLayers().forEach(layer => {\n        layer.on('change:visible', function() {\n            if (layer.getVisible()) {\n                localStorage.setItem('lastSelectedLayer', layer.get('title'));\n            }\n        });\n    });\n\n    /**\n     * This allows a clicked feature to raise an event\n     */\n    let select = null;\n    function selectStyle(feature) {\n        console.log(`FEATURE: ${feature}`);\n        return selected;\n    }\n\n    /**\n     * If saving position history is enabled,  \n     * save it at a specified time interval\n     */\n    if (mapsettings.savepositionhistory) {\n        setInterval(savePositionHistory, mapsettings.histintervalmsec);\n    }\n\n    /**\n     * For weather animation, gets the time 3 hours ago\n     * @returns Date\n     */\n    function getTimeThreeHoursAgo() {\n        return new Date(Math.round(Date.now() / 3600000) * 3600000 - 3600000 * 3);\n    }\n\n    /**\n     * Convert statute miles to desired unit \n     * @param {*} miles: statute miles\n     * @returns statute miles, kilometers or nautical miles   \n     */\n    function getDistanceUnits(miles) {\n        let num = parseFloat(miles);\n        let label = \"mi\";\n        switch (distanceunit) {\n            case DistanceUnits.kilometers: \n                num = miles * 1.609344;\n                label = \"km\"\n                break;\n            case DistanceUnits.nauticalmiles:\n                num = miles * 0.8689762419;\n                label = \"nm\";\n                break;\n        }\n        return `${num.toFixed(1)} ${label}`;\n    }\n\n    /**\n     * \n     * @param {*} temp: Temperature in Centigrade \n     * @returns Farenheit temperature fixed to 2 decimal places\n     */\n    const convertCtoF = ((temp) => {\n        if (temp == undefined) return \"\";\n        let num = (temp * 9/5 + 32);\n        if (num === NaN || num === undefined) return \"\";\n        else return `${num.toFixed(1)} F°`;\n    });\n\n    /**\n     * Set ownship orientation from Stratux situation, updates airplane image current position\n     */\n    function setOwnshipOrientation(jsondata) {\n        /*---------------------------------------------------------------\n        * Situation json data field example\n        *---------------------------------------------------------------\n        { \"GPSLastFixSinceMidnightUTC\": 61233.1,GPSLatitude\": 30.714376,\"GPSLongitude\": -98.254944,\"GPSFixQuality\": 1,\"GPSHeightAboveEllipsoid\": 1187.6641,\n            \"GPSGeoidSep\": -78.41207,\"GPSSatellites\": 9,\"GPSSatellitesTracked\": 22,\"GPSSatellitesSeen\": 14,\"GPSHorizontalAccuracy\": 4.8500004,\n            \"GPSNACp\": 10,\"GPSAltitudeMSL\": 1266.0762,\"GPSVerticalAccuracy\": 6.85,\"GPSVerticalSpeed\": 0,\"GPSLastFixLocalTime\": \"0001-01-03T18:43:51.48Z\",\n            \"GPSTrueCourse\": 45.51,\"GPSTurnRate\": 0,\"GPSGroundSpeed\": 1.1610000133514404,\"GPSLastGroundTrackTime\": \"0001-01-03T18:43:51.48Z\",\n            \"GPSTime\": \"2022-07-14T17:00:33.18Z\",\"GPSLastGPSTimeStratuxTime\": \"0001-01-03T18:43:51.48Z\",\"GPSLastValidNMEAMessageTime\": \"0001-01-03T18:43:51.48Z\",\n            \"GPSLastValidNMEAMessage\": \"$GNGGA,170033.10,3042.86261,N,09815.29674,W,1,09,0.97,385.9,M,-23.9,M,,*77\",\"GPSPositionSampleRate\": 9.998427260812582,\n            \"BaroTemperature\": 41.89,\"BaroPressureAltitude\": 1085.1527,\"BaroVerticalSpeed\": -3.136783,\"BaroLastMeasurementTime\": \"0001-01-03T18:43:51.53Z\",\n            \"BaroSourceType\": 1,\"AHRSPitch\": -0.0025035837716802546,\"AHRSRoll\": 0.049514056369771665,\"AHRSGyroHeading\": 3276.7,\"AHRSMagHeading\": 3276.7,\n            \"AHRSSlipSkid\": -0.03840070310305229,\"AHRSTurnRate\": 3276.7,\"AHRSGLoad\": 0.9996413993502861,\"AHRSGLoadMin\": 0.9930797723335983,\n            \"AHRSGLoadMax\": 1.0025976589458154,\"AHRSLastAttitudeTime\": \"0001-01-03T18:43:51.53Z\",\"AHRSStatus\": 7\n        }\n        */\n        viewposition = fromLonLat([jsondata.GPSLongitude, jsondata.GPSLatitude]);\n        if (jsondata.GPSLongitude !== 0 && jsondata.GPSLatitude !== 0) {\n            myairplane.setOffset(offset);\n            myairplane.setPosition(viewposition);\n            lng = jsondata.GPSLongitude;\n            lat = jsondata.GPSLatitude;\n            alt = jsondata.GPSAltitudeMSL;\n            deg = parseInt(jsondata.AHRSMagHeading / 10);\n            airplaneElement.style.transform = \"rotate(\" + deg + \"deg)\";\n        }\n    }\n\n    /**\n     * Save the position history in positionhistory.db\n     */\n    function savePositionHistory() {\n        if (last_longitude !== lng || last_latitude !== lat) {\n            if (lng + lat + deg + alt > 0) {\n                let postage = { longitude: lng, \n                    latitude: lat, \n                    heading: deg,\n                    altitude: Math.round(alt) };\n\n                var xhr = new XMLHttpRequest();\n                xhr.open(\"POST\", URL_PUT_HISTORY);\n                xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n                try {    \n                    xhr.send(JSON.stringify(postage));\n                }\n                finally {}\n            }\n        }\n    }\n\n    /**\n     * Utility function to replace all instances of a  \n     * specified string with another specified string\n     * @param {*} string: string to search \n     * @param {*} search: string to search FOR \n     * @param {*} replace: string to replace any found search \n     * @returns sring: the new string with replacements\n     */\n    function replaceAll(string, search, replace) {\n        return string.split(search).join(replace);\n    }\n\n    /**\n     * This just makes a zulu date look nicer...\n     * @param {*} zuludate \n     * @returns string: cleaned zulu date\n     */\n    function formatZuluDate(zuludate) {\n        let workstring = zuludate.split(\"T\");\n        let zstring = workstring[1].slice(0, -1);\n        return  `${workstring[0]} ${zstring} Z`;\n    }\n\n    /**\n     * Get the local machine dae/time from the supplied ZULU date\n     * @param {*} zuludate: the ZULU date to be translated \n     * @returns string: the translated date in standard or daylight time\n     */\n    function getLocalTime(zuludate) {\n        let date = new Date(zuludate);\n        let hours = date.getHours();\n        let minutes = date.getMinutes();\n        let ampm = hours >= 12 ? 'PM' : 'AM';\n        let month = date.getMonth() + 1;\n        let day = date.getDate();\n        let year = date.getFullYear();\n        let tzone = \"\";\n\n        hours = hours % 12;\n        hours = hours ? hours : 12; // the hour '0' should be '12'\n        minutes = minutes < 10 ? '0'+minutes : minutes;\n\n        let timex = date.toString().split(\"GMT\");\n        let time = timex[1];\n\n        if (time.search(\"Eastern Standard\") > -1) {\n            tzone = \"(EST)\"; \n        }\n        if (time.search(\"Eastern Daylignt\") > -1) {\n            tzone = \"(EDT)\"; \n        }\n        if (time.search(\"Central Standard\") > -1) {\n            tzone = \"(CST)\"; \n        }\n        if (time.search(\"Central Daylight\") > -1) {\n            tzone = \"(CDT)\"; \n        }\n        if (time.search(\"Mountain Standard\") > -1) {\n            tzone = \"(MST)\"; \n        }\n        if (time.search(\"Mountain Daylight\") > -1) {\n            tzone = \"(MDT)\"; \n        }\n        if (time.search(\"Pacific Standard\") > -1) {\n            tzone = \"(PST)\"; \n        }\n        if (time.search(\"Pacific Daylight\") > -1) {\n            tzone = \"(PDT)\"; \n        }\n        if (time.search(\"Alaska Standard\") > -1) {\n            tzone = \"(AKST)\"; \n        }\n        if (time.search(\"Alaska Daylight\") > -1) {\n            tzone = \"(AKDT)\"; \n        }\n        if (time.search(\"Atlantic Standard\") > -1) {\n            tzone = \"(AST)\"; \n        }\n        if (time.search(\"Atlantic Daylight\") > -1) {\n            tzone = \"(ADT)\";\n        }\n        return `${month}-${day}-${year} ${hours}:${minutes} ${ampm} ${tzone}`;\n    }\n\n    /**\n     * Utility function to trim and round Metar or TAF  \n     * altimeter value to a standard fixed(2) number\n     * @param {*} altimeter \n     * @returns \n     */\n    function getAltimeterSetting(altimeter) {\n        let dbl = parseFloat(altimeter);\n        return dbl.toFixed(2).toString();\n    }\n\n    /**\n     * Get the formatted name of an airport\n     * @param {string} ident, the airport identifier \n     * @returns string, formatted name of the airport\n     */\n    function getFormattedAirportName(ident) {\n        let retvalue = airportNameKeymap.get(ident);\n        if (retvalue === undefined || \n            retvalue === \"undefined\" ||\n            retvalue === \"\") {\n            retvalue = \"\";\n        } \n        else {\n            retvalue = retvalue.replace(\"/\", \"\\n\");\n            retvalue = retvalue.replace(\",\", \"\\n\");\n        }\n        return retvalue;\n    }\n\n    /**\n     * Get the description for a TAF fieldname abbreviation\n     * @param {string} fieldname \n     * @returns string, readable description of fieldname \n     */\n    function getFieldDescription(fieldname) {\n        let retvalue = fieldname;\n        if (!Number.isInteger(fieldname)) {\n            retvalue = tafFieldKeymap.get(fieldname);\n            if (retvalue === undefined) {\n                retvalue = fieldname;\n            }\n        }\n        return retvalue;\n    }\n\n    /**\n     * Load normalized TAF field names\n     */\n    function loadTafFieldKeymap() {\n        tafFieldKeymap.set(\"temp_c\", \"Temperature °C\");\n        tafFieldKeymap.set(\"icing_type\", \"Icing type\");\n        tafFieldKeymap.set(\"pirep_type\", \"Pirep type\");\n        tafFieldKeymap.set(\"altitude_ft_msl\", \"Altitude in feet MSL\");\n        tafFieldKeymap.set(\"receipt_time\", \"Receipt time\")\n        tafFieldKeymap.set(\"observation_time\", \"Observation time\")\n        tafFieldKeymap.set(\"latitude\", \"Latitude\")\n        tafFieldKeymap.set(\"longitude\", \"Longitude\")\n        tafFieldKeymap.set(\"cloud_type\", \"Cloud type\");\n        tafFieldKeymap.set(\"fcst_time_from\", \"Time from\");\n        tafFieldKeymap.set(\"fcst_time_to\", \"Time to\");\n        tafFieldKeymap.set(\"change_indicator\", \"Change indicator\");\n        tafFieldKeymap.set(\"time_becoming\", \"Time becoming\");\n        tafFieldKeymap.set(\"probability\", \"Probability\");\n        tafFieldKeymap.set(\"wind_dir_degrees\", \"Wind Direction\");\n        tafFieldKeymap.set(\"wind_speed_kt\", \"Wind Speed knots\");\n        tafFieldKeymap.set(\"wind_gust_kt\", \"Wind Gust knots\");\n        tafFieldKeymap.set(\"wind_shear_hgt_ft_agl\", \"Shear height feet AGL\");\n        tafFieldKeymap.set(\"wind_shear_dir_degrees\", \"Shear direction\");\n        tafFieldKeymap.set(\"wind_shear_speed_kt\", \"Shear speed knots\");\n        tafFieldKeymap.set(\"altim_in_hg\", \"Altimeter (Hg)\");\n        tafFieldKeymap.set(\"vert_vis_ft\", \"Vertical visibility in feet\");\n        tafFieldKeymap.set(\"visibility_statute_mi\", \"Horizontal visibility in statute miles\");\n        tafFieldKeymap.set(\"wx_string\", \"Weather\");\n        tafFieldKeymap.set(\"sky_condition\", \"Sky condition\");\n        tafFieldKeymap.set(\"icing_condition\", \"Icing condition\");\n        tafFieldKeymap.set(\"turbulence_condition\", \"Turbulence condition\");\n        tafFieldKeymap.set(\"sky_cover\", \"Sky cover\");\n        tafFieldKeymap.set(\"cloud_base_ft_agl\", \"Cloud base feet AGL\");\n        tafFieldKeymap.set(\"cloud_base_ft_msl\", \"Cloud base feet MSL\");\n        tafFieldKeymap.set(\"cloud_base\", \"Cloud base\");\n        // icing fieldnames\n        tafFieldKeymap.set(\"icing_intensity\", \"Intensity\");\n        tafFieldKeymap.set(\"icing_min_alt_ft_agl\", \"Min altitude feet AGL\");\n        tafFieldKeymap.set(\"icing_max_alt_ft_agl\", \"Max altitude feet AGL\");\n        tafFieldKeymap.set(\"icing_min_alt_ft_msl\", \"Min altitude feet MSL\");\n        tafFieldKeymap.set(\"icing_max_alt_ft_agl\", \"Max altitude feet MSL\");\n        tafFieldKeymap.set(\"icing_type\", \"Type\");\n        tafFieldKeymap.set(\"icing_top_ft_msl\", \"Top in feet MSL\");\n        tafFieldKeymap.set(\"icing_base_ft_msl\", \"Base in feet MSL\");\n        // turbulence fieldnames\n        tafFieldKeymap.set(\"turbulence_intensity\", \"Intensity\");\n        tafFieldKeymap.set(\"turbulence_min_alt_ft_agl\", \"Min altitude feet AGL\");\n        tafFieldKeymap.set(\"turbulence_max_alt_ft_agl\", \"Max altitude feet AGL\");\n        tafFieldKeymap.set(\"turbulence_freq\", \"Frequency\");\n        tafFieldKeymap.set(\"turbulence_type\", \"Type\");\n        tafFieldKeymap.set(\"turbulence_top_ft_msl\", \"Top in feet MSL\");\n        tafFieldKeymap.set(\"turbulence_base_ft_msl\", \"Base in feet MSL\");\n    }\n\n    /**\n     * Get the description for a TAF/Metar fieldname abbreviation\n     * @param {string} fieldname \n     * @returns string, readable description of fieldname \n     */\n    function getMetarFieldDescription(fieldname) {\n        let retvalue = metarFieldKeymap.get(fieldname);\n        if (retvalue === undefined || retvalue === \"\") {\n            retvalue = replaceAll(fieldname, \"_\", \" \");\n        }\n        return retvalue;\n    }\n    /**\n     * Load normalized metar field names\n     */\n    function loadMetarFieldKeymap() {\n        metarFieldKeymap.set(\"change_indicator\", \"Change indicator\");\n        metarFieldKeymap.set(\"raw_text\", \"raw text\");\n        metarFieldKeymap.set(\"station_id\", \"station id\"); \n        metarFieldKeymap.set(\"observation_time\", \"Observation Time\");\n        metarFieldKeymap.set(\"latitude\", \"latitude\");\n        metarFieldKeymap.set(\"longitude\", \"longitude\");\n        metarFieldKeymap.set(\"temp_c\", \"Temp °C\");\n        metarFieldKeymap.set(\"dewpoint_c\", \"Dewpoint °C\");\n        metarFieldKeymap.set(\"wind_dir_degrees\", \"Wind direction\"); \n        metarFieldKeymap.set(\"wind_speed_kt\", \"Wind speed knots\");\n        metarFieldKeymap.set(\"wind_gust_kt\", \"Wind gust knots\");\n        metarFieldKeymap.set(\"visibility_statute_mi\", \"Horizontal visibility in statute miles\");\n        metarFieldKeymap.set(\"altim_in_hg\", \"Altimeter in Hg\");\n        metarFieldKeymap.set(\"sea_level_pressure_mb\", \"Sea-level pressure in MB\");\n        metarFieldKeymap.set(\"quality_control_flags\", \"Quality control flags\");\n        metarFieldKeymap.set(\"wx_string\", \"Weather\");\n        metarFieldKeymap.set(\"sky_condition\", \"Sky cover\");\n        metarFieldKeymap.set(\"sky_cover\", \"Sky cover\");\n        metarFieldKeymap.set(\"cloud_base_ft_agl\", \"Cloud base feet AGL\");\n        metarFieldKeymap.set(\"cloud_base\", \"Cloud base\");\n        metarFieldKeymap.set(\"flight_category\", \"Flight category\");\n        metarFieldKeymap.set(\"three_hr_pressure_tendency_mb\", \"Pressure change past 3 hours in MB\");\n        metarFieldKeymap.set(\"maxT_c\", \"Max air temp °C, past 6 hours\");\n        metarFieldKeymap.set(\"minT_c\", \"Min air temp °C, past 6 hours\");\n        metarFieldKeymap.set(\"maxT24hr_c\", \"Max air temp °C, past 24 hours\");\n        metarFieldKeymap.set(\"minT24hr_c\", \"Min air temp °C, past 24 hours\");\n        metarFieldKeymap.set(\"precip_in\", \"Liquid precipitation since last METAR\");\n        metarFieldKeymap.set(\"pcp3hr_in\", \"Liquid precipitation past 3 hours\");\n        metarFieldKeymap.set(\"pcp6hr_in\", \"Liquid precipitation past 6 hours\");\n        metarFieldKeymap.set(\"pcp24hr_in\", \"Liquid precipitation past 24 hours\");\n        metarFieldKeymap.set(\"snow_in\", \"Snow depth in inches\");\n        metarFieldKeymap.set(\"vert_vis_ft\", \"Vertical visibility in feet\");\n        metarFieldKeymap.set(\"metar_type\", \"Metar type\");\n        metarFieldKeymap.set(\"elevation_m\", \"Station elevation in meters\");\n    }\n\n    /**\n     * Get the description for a TAF/Metar weather acronym\n     * @param {string} acronym \n     * @returns string, readable description of acronym \n     */\n    function getWeatherAcronymDescription(acronym) {\n        let retvalue = weatherAcronymKeymap.get(acronym);\n        if (retvalue === undefined) retvalue = acronym;\n        return retvalue;\n    }\n    /**\n     * Load the wxkeymap Map object with weather code descriptions\n     */\n    function loadWeatherAcronymKeymap() {\n        weatherAcronymKeymap.set(\"FM\", \"From\");\n        weatherAcronymKeymap.set(\"TEMPO\", \"Temporary\");\n        weatherAcronymKeymap.set(\"BECMG\", \"Becoming\");\n        weatherAcronymKeymap.set(\"PROB\", \"Probability\");\n        weatherAcronymKeymap.set(\"FU\", \"Smoke\");\n        weatherAcronymKeymap.set(\"VA\", \"Volcanic Ash\");\n        weatherAcronymKeymap.set(\"HZ\", \"Haze\");\n        weatherAcronymKeymap.set(\"DU\", \"Dust\");\n        weatherAcronymKeymap.set(\"SA\", \"Sand\");\n        weatherAcronymKeymap.set(\"BLDU\", \"Blowing dust\");\n        weatherAcronymKeymap.set(\"BLSA\", \"Blowing sand\");\n        weatherAcronymKeymap.set(\"PO\", \"Dust devil\");\n        weatherAcronymKeymap.set(\"VCSS\", \"Vicinity sand storm\");\n        weatherAcronymKeymap.set(\"BR\", \"Mist or light fog\");\n        weatherAcronymKeymap.set(\"MIFG\", \"More or less continuous shallow fog\");\n        weatherAcronymKeymap.set(\"VCTS\", \"Vicinity thunderstorm\");\n        weatherAcronymKeymap.set(\"VIRGA\", \"Virga or precipitation not hitting ground\");\n        weatherAcronymKeymap.set(\"VCSH\", \"Vicinity showers\");\n        weatherAcronymKeymap.set(\"TS\", \"Thunderstorm with or without precipitation\");\n        weatherAcronymKeymap.set(\"SQ\", \"Squalls\");\n        weatherAcronymKeymap.set(\"FC\", \"Funnel cloud or tornado\");\n        weatherAcronymKeymap.set(\"SS\", \"Sand or dust storm\");\n        weatherAcronymKeymap.set(\"+SS\", \"Strong sand or dust storm\");\n        weatherAcronymKeymap.set(\"BLSN\", \"Blowing snow\");\n        weatherAcronymKeymap.set(\"DRSN\", \"Drifting snow\");\n        weatherAcronymKeymap.set(\"VCFG\", \"Vicinity fog\");\n        weatherAcronymKeymap.set(\"BCFG\", \"Patchy fog\");\n        weatherAcronymKeymap.set(\"PRFG\", \"Fog, sky discernable\");\n        weatherAcronymKeymap.set(\"FG\", \"Fog, sky undiscernable\");\n        weatherAcronymKeymap.set(\"FZFG\", \"Freezing fog\");\n        weatherAcronymKeymap.set(\"-DZ\", \"Light drizzle\");\n        weatherAcronymKeymap.set(\"DZ\", \"Moderate drizzle\");\n        weatherAcronymKeymap.set(\"+DZ\", \"Heavy drizzle\");\n        weatherAcronymKeymap.set(\"-FZDZ\", \"Light freezing drizzle\");\n        weatherAcronymKeymap.set(\"FZDZ\", \"Moderate freezing drizzle\");\n        weatherAcronymKeymap.set(\"+FZDZ\", \"Heavy freezing drizzle\");\n        weatherAcronymKeymap.set(\"-DZRA\", \"Light drizzle and rain\");\n        weatherAcronymKeymap.set(\"DZRA\", \"Moderate to heavy drizzle and rain\");\n        weatherAcronymKeymap.set(\"-RA\", \"Light rain\");\n        weatherAcronymKeymap.set(\"RA\", \"Moderate rain\");\n        weatherAcronymKeymap.set(\"+RA\", \"Heavy rain\");\n        weatherAcronymKeymap.set(\"-FZRA\", \"Light freezing rain\");\n        weatherAcronymKeymap.set(\"FZRA\", \"Moderate freezing rain\");\n        weatherAcronymKeymap.set(\"+FZRA\", \"Heavy freezing rain\");\n        weatherAcronymKeymap.set(\"-RASN\", \"Light rain and snow\");\n        weatherAcronymKeymap.set(\"RASN\", \"Moderate rain and snow\");\n        weatherAcronymKeymap.set(\"+RASN\", \"Heavy rain and snow\");\n        weatherAcronymKeymap.set(\"-SN\", \"Light snow\");\n        weatherAcronymKeymap.set(\"SN\", \"Moderate snow\");\n        weatherAcronymKeymap.set(\"+SN\", \"Heavy snow\");\n        weatherAcronymKeymap.set(\"SG\", \"Snow grains\");\n        weatherAcronymKeymap.set(\"IC\", \"Ice crystals\");\n        weatherAcronymKeymap.set(\"PE PL\", \"Ice pellets\");\n        weatherAcronymKeymap.set(\"PE\", \"Ice pellets\");\n        weatherAcronymKeymap.set(\"PL\", \"Ice pellets\");\n        weatherAcronymKeymap.set(\"-SHRA\", \"Light rain showers\");\n        weatherAcronymKeymap.set(\"SHRA\", \"Moderate rain showers\");\n        weatherAcronymKeymap.set(\"+SHRA\", \"Heavy rain showers\");\n        weatherAcronymKeymap.set(\"-SHRASN\", \"Light rain and snow showers\");\n        weatherAcronymKeymap.set(\"SHRASN\", \"Moderate rain and snow showers\");\n        weatherAcronymKeymap.set(\"+SHRASN\", \"Heavy rain and snow showers\");\n        weatherAcronymKeymap.set(\"-SHSN\", \"Light snow showers\");\n        weatherAcronymKeymap.set(\"SHSN\", \"Moderate snow showers\");\n        weatherAcronymKeymap.set(\"+SHSN\", \"Heavy snow showers\");\n        weatherAcronymKeymap.set(\"-GR\", \"Light showers with hail, not with thunder\");\n        weatherAcronymKeymap.set(\"GR\", \"Moderate to heavy showers with hail, not with thunder\");\n        weatherAcronymKeymap.set(\"TSRA\", \"Light to moderate thunderstorm with rain\");\n        weatherAcronymKeymap.set(\"TSGR\", \"Light to moderate thunderstorm with hail\");\n        weatherAcronymKeymap.set(\"+TSRA\", \"Thunderstorm with heavy rain\");\n        weatherAcronymKeymap.set(\"UP\", \"Unknown precipitation\");\n        weatherAcronymKeymap.set(\"NSW\", \"No significant weather\");\n    }\n\n    /**\n     * Get the description for a sky condition acronym\n     * @param {string} acronym \n     * @returns acronym if found, otherwise just returns key\n     */\n    function getSkyConditionDescription(acronym) {\n        let retvalue = skyConditionKeymap.get(acronym);\n        if (retvalue === undefined || retvalue === null) {\n            return acronym;\n        }\n        return retvalue;\n    }\n    /**\n     * Map containing standard TAF/Metar acronyms\n     */\n    function loadSkyConditionmKeymap() {\n        skyConditionKeymap.set(\"BKN\", \"Broken\");\n        skyConditionKeymap.set(\"FM\", \"From\");\n        skyConditionKeymap.set(\"TEMPO\", \"Temporary\");\n        skyConditionKeymap.set(\"BECMG\", \"Becoming\");\n        skyConditionKeymap.set(\"PROB\", \"Probability\");\n        skyConditionKeymap.set(\"CB\", \"Cumulo-Nimbus\");\n        skyConditionKeymap.set(\"IMC\", \"Instrument meteorological conditions\"),\n        skyConditionKeymap.set(\"IMPR\", \"Improving\");\n        skyConditionKeymap.set(\"INC\", \"In Clouds\");\n        skyConditionKeymap.set(\"INS\", \"Inches\");\n        skyConditionKeymap.set(\"INTER\", \"Intermittent\");\n        skyConditionKeymap.set(\"INTSF\", \"Intensify(ing)\");\n        skyConditionKeymap.set(\"INTST\", \"Intensity\");\n        skyConditionKeymap.set(\"JTST\", \"Jet stream\");\n        skyConditionKeymap.set(\"KM\", \"Kilometers\");\n        skyConditionKeymap.set(\"KMH\", \"Kilometers per hour\");\n        skyConditionKeymap.set(\"KT\", \"Knots\");\n        skyConditionKeymap.set(\"L\", \"Low pressure area\");\n        skyConditionKeymap.set(\"LAN\", \"Land\");\n        skyConditionKeymap.set(\"LDA\", \"Landing distance available\");\n        skyConditionKeymap.set(\"LDG\", \"Landing\");\n        skyConditionKeymap.set(\"LGT\", \"Light\");\n        skyConditionKeymap.set(\"LOC\", \"Locally\");\n        skyConditionKeymap.set(\"LSQ\", \"Line squall\");\n        skyConditionKeymap.set(\"LSR\", \"Loose snow on runway\");\n        skyConditionKeymap.set(\"LTG\", \"Lightning\");\n        skyConditionKeymap.set(\"LYR\", \"Layer\");\n        skyConditionKeymap.set(\"M\", \"Meters\");\n        skyConditionKeymap.set(\"M\", \"Minus or below zero\");\n        skyConditionKeymap.set(\"M\", \"Less than lowest reportable sensor value\");\n        skyConditionKeymap.set(\"MAX\", \"Maximum\");\n        skyConditionKeymap.set(\"MB\", \"Millibars\");\n        skyConditionKeymap.set(\"MET\", \"Meteorological\");\n        skyConditionKeymap.set(\"MI\", \"Shallow\");\n        skyConditionKeymap.set(\"MIN\", \"Minutes\");\n        skyConditionKeymap.set(\"MNM\", \"Minimum\");\n        skyConditionKeymap.set(\"MOD\", \"Moderate\");\n        skyConditionKeymap.set(\"MOV\", \"Move, moving\");\n        skyConditionKeymap.set(\"MPS\", \"Meters per second\");\n        skyConditionKeymap.set(\"MS\", \"Minus\");\n        skyConditionKeymap.set(\"MSL\", \"Mean sea level\");\n        skyConditionKeymap.set(\"MTW\", \"Mountain waves\");\n        skyConditionKeymap.set(\"MU\", \"Runway friction coefficent\");\n        skyConditionKeymap.set(\"NC\", \"No change\");\n        skyConditionKeymap.set(\"NIL\", \"None, nothing\");\n        skyConditionKeymap.set(\"NM\", \"Nautical mile(s)\");\n        skyConditionKeymap.set(\"NMRS\", \"Numerous\");\n        skyConditionKeymap.set(\"NO\", \"Not available\");\n        skyConditionKeymap.set(\"NOSIG\", \"No significant change\");\n        skyConditionKeymap.set(\"NS\", \"Nimbostratus\");\n        skyConditionKeymap.set(\"NSC\", \"No significant clouds\");\n        skyConditionKeymap.set(\"NSW\", \"No Significant Weather\");\n        skyConditionKeymap.set(\"OBS\", \"Observation\");\n        skyConditionKeymap.set(\"OBSC\", \"Obscuring\");\n        skyConditionKeymap.set(\"OCNL\", \"Occasional\");\n        skyConditionKeymap.set(\"OKTA\", \"Eight of sky cover\");\n        skyConditionKeymap.set(\"OTP\", \"On top\");\n        skyConditionKeymap.set(\"OTS\", \"Out of service\");\n        skyConditionKeymap.set(\"OVC\", \"Overcast\");\n        skyConditionKeymap.set(\"P\", \"Greater than highest reportable sensor value\");\n        skyConditionKeymap.set(\"P6SM\", \"Visibility greater than 6 SM\");\n        skyConditionKeymap.set(\"PAEW\", \"Personnel and equipment working\");\n        skyConditionKeymap.set(\"PE\", \"Ice Pellets\");\n        skyConditionKeymap.set(\"PJE\", \"Parachute Jumping Exercise\");\n        skyConditionKeymap.set(\"PK WND\", \"Peak wind\");\n        skyConditionKeymap.set(\"PLW\", \"Plow/plowed\");\n        skyConditionKeymap.set(\"PNO\", \"Precipitation amount not available\");\n        skyConditionKeymap.set(\"PO\", \"Dust/Sand Whirls\");\n        skyConditionKeymap.set(\"PPR\", \"Prior permission required\");\n        skyConditionKeymap.set(\"PR\", \"Partial\");\n        skyConditionKeymap.set(\"PRESFR\", \"Pressure falling rapidly\");\n        skyConditionKeymap.set(\"PRESRR\", \"Pressure rising rapidly\");\n        skyConditionKeymap.set(\"PROB\", \"Probability\");\n        skyConditionKeymap.set(\"PROB30\", \"Probability 30 percent\");\n        skyConditionKeymap.set(\"PS\", \"Plus\");\n        skyConditionKeymap.set(\"PSR\", \"Packed snow on runway\");\n        skyConditionKeymap.set(\"PWINO\", \"Precipitation id sensor not available\");\n        skyConditionKeymap.set(\"PY\", \"Spray\");\n        skyConditionKeymap.set(\"R\", \"Runway (in RVR measurement)\");\n        skyConditionKeymap.set(\"RA\", \"Rain\");\n        skyConditionKeymap.set(\"RAB\", \"Rain Began\");\n        skyConditionKeymap.set(\"RADAT\", \"Radiosonde observation addl data\");\n        skyConditionKeymap.set(\"RAE\", \"Rain Ended\");\n        skyConditionKeymap.set(\"RAPID\", \"Rapid(ly)\");\n        skyConditionKeymap.set(\"RASN\", \"Rain and snow\");\n        skyConditionKeymap.set(\"RCAG\", \"Remote Center Air/Ground Comm Facility\");\n        skyConditionKeymap.set(\"RMK\", \"Remark\");\n        skyConditionKeymap.set(\"RVR\", \"Runway visual range\");\n        skyConditionKeymap.set(\"RVRNO\", \"RVR not available\");\n        skyConditionKeymap.set(\"RY/RWY\", \"Runway\");\n        skyConditionKeymap.set(\"SA\", \"Sand\");\n        skyConditionKeymap.set(\"SAND\", \"Sandstorm\");\n        skyConditionKeymap.set(\"SC\", \"Stratocumulus\");\n        skyConditionKeymap.set(\"SCSL\", \"Stratocumulus standing lenticular cloud\");\n        skyConditionKeymap.set(\"SCT\", \"Scattered cloud coverage\");\n        skyConditionKeymap.set(\"SEC\", \"Seconds\");\n        skyConditionKeymap.set(\"SEV\", \"Severe\");\n        skyConditionKeymap.set(\"SFC\", \"Surface\");\n        skyConditionKeymap.set(\"SG\", \"Snow Grains\");\n        skyConditionKeymap.set(\"SH\", \"Shower\");\n        skyConditionKeymap.set(\"SHWR\", \"Shower\");\n        skyConditionKeymap.set(\"SIGMET\", \"Information from MWO\");\n        skyConditionKeymap.set(\"SIR\", \"Snow and ice on runway\");\n        skyConditionKeymap.set(\"SKC\", \"Sky Clear\");\n        skyConditionKeymap.set(\"SLP\", \"Sea Level Pressure in MB\");\n        skyConditionKeymap.set(\"SLPNO\", \"Sea-level pressure not available\");\n        skyConditionKeymap.set(\"SLR\", \"Slush on runway\");\n        skyConditionKeymap.set(\"SLW\", \"Slow\");\n        skyConditionKeymap.set(\"SM\", \"Statute Miles\");\n        skyConditionKeymap.set(\"SMK\", \"Smoke\");\n        skyConditionKeymap.set(\"SMO\", \"Supplementary meteorological office\");\n        skyConditionKeymap.set(\"SN\", \"Snow\");\n        skyConditionKeymap.set(\"SPECI\", \"Special Report\");\n        skyConditionKeymap.set(\"SQ\", \"Squall\");\n        skyConditionKeymap.set(\"SS\", \"Sandstorm\");\n        skyConditionKeymap.set(\"SSR\", \"Secondary Surveillance Radar\");\n        skyConditionKeymap.set(\"T\", \"Temperature\");\n        skyConditionKeymap.set(\"TAF\", \"Terminal aerodrome forecast in code\");\n        skyConditionKeymap.set(\"TAPLEY\", \"Tapley runway friction coefficient\");\n        skyConditionKeymap.set(\"TAR\", \"Terminal Area Surveillance Radar\");\n        skyConditionKeymap.set(\"TAIL\", \"Tail wind\");\n        skyConditionKeymap.set(\"TCH\", \"Threshold Crossing Height\");\n        skyConditionKeymap.set(\"TCU\", \"Towering Cumulus\");\n        skyConditionKeymap.set(\"TDO\", \"Tornado\");\n        skyConditionKeymap.set(\"TDWR\", \"Terminal Doppler Weather Radar\");\n        skyConditionKeymap.set(\"TEMPO\", \"TEMPO\");\n        skyConditionKeymap.set(\"TEND\", \"Trend or tending to\");\n        skyConditionKeymap.set(\"TKOF\", \"Takeoff\");\n        skyConditionKeymap.set(\"TMPA\", \"Traffic Management Program Alert\");\n        skyConditionKeymap.set(\"TODA\", \"Takeoff distance available\");\n        skyConditionKeymap.set(\"TOP\", \"Cloud top\");\n        skyConditionKeymap.set(\"TORA\", \"Takeoff run available\");\n        skyConditionKeymap.set(\"TS\", \"Thunderstorm\");\n        skyConditionKeymap.set(\"TSNO\", \"Thunderstorm/lightning detector not available\");\n        skyConditionKeymap.set(\"TURB\", \"Turbulence\");\n        skyConditionKeymap.set(\"TWY\", \"Taxiway\");\n        skyConditionKeymap.set(\"UFN\", \"Until further notice\");\n        skyConditionKeymap.set(\"UNL\", \"Unlimited\");\n        skyConditionKeymap.set(\"UP\", \"Unknown Precipitation\");\n        skyConditionKeymap.set(\"UTC\", \"Coordinated Universal Time (=GMT)\");\n        skyConditionKeymap.set(\"V\", \"Variable (wind direction and RVR)\");\n        skyConditionKeymap.set(\"VA\", \"Volcanic Ash\");\n        skyConditionKeymap.set(\"VC\", \"Vicinity\");\n        skyConditionKeymap.set(\"VER\", \"Vertical\");\n        skyConditionKeymap.set(\"VFR\", \"Visual flight rules\");\n        skyConditionKeymap.set(\"VGSI\", \"Visual Glide Slope Indicator\");\n        skyConditionKeymap.set(\"VIS\", \"Visibility\");\n        skyConditionKeymap.set(\"VISNO [LOC]\", \"Visibility Indicator at second location not available\");\n        skyConditionKeymap.set(\"VMS\", \"Visual meteorological conditions\");\n        skyConditionKeymap.set(\"VOLMET\", \"Meteorological information for aircraft in flight\");\n        skyConditionKeymap.set(\"VRB\", \"Variable wind direction\");\n        skyConditionKeymap.set(\"VRBL\", \"Variable\");\n        skyConditionKeymap.set(\"VSP\", \"Vertical speed\");\n        skyConditionKeymap.set(\"VV\", \"Vertical Visibility (indefinite ceiling)\");\n        skyConditionKeymap.set(\"WAAS\", \"Wide Area Augmentation System\");\n        skyConditionKeymap.set(\"WDSPR\", \"Widespread\");\n        skyConditionKeymap.set(\"WEF\", \"With effect from\");\n        skyConditionKeymap.set(\"WIE\", \"With immediate effect\");\n        skyConditionKeymap.set(\"WIP\", \"Work in progress\");\n        skyConditionKeymap.set(\"WKN\", \"Weaken(ing)\");\n        skyConditionKeymap.set(\"WR\", \"Wet runway\");\n        skyConditionKeymap.set(\"WS\", \"Wind shear\");\n        skyConditionKeymap.set(\"WSHFT\", \"Wind shift (in minutes after the hour)\");\n        skyConditionKeymap.set(\"WSP\", \"Weather Systems Processor\");\n        skyConditionKeymap.set(\"WSR\", \"Wet snow on runway\");\n        skyConditionKeymap.set(\"WST\", \"Convective Significant Meteorological Information\");\n        skyConditionKeymap.set(\"WTSPT\", \"Waterspout\");\n        skyConditionKeymap.set(\"WW\", \"Severe Weather Watch Bulletin\");\n        skyConditionKeymap.set(\"WX\", \"Weather\");\n    }\n\n    /**\n     * Decode weather codes from TAFs or METARS\n     * @param {*} codevalue: this could contain multiple space-delimited codes\n     * @returns string with any weather description(s)\n     */\n    function decodeWxDescriptions(codevalue) {\n        let outstr = null;\n        let vals = codevalue.split(\" \");\n        let wak = null;\n\n        for (let i = 0; i < vals.length; i++) {\n            if (i === 0) {\n                wak = weatherAcronymKeymap.get(vals[i]);\n                wak ? outstr = wak : null;\n            }\n            else {\n                wak = eatherAcronymKeymap.get(vals[i]);\n                wak ? outstr += ` / ${wak}` : null;\n            }\n        }\n        return outstr;\n    }\n\n    /**\n     * Get the description for an icing code\n     * @param {string} code \n     * @returns string, readable description of code \n     */\n    function getIcingCodeDescription(code) {\n        let retvalue = icingCodeKeymap.get(code);\n        if (retvalue === undefined) retvalue = code;\n        return retvalue;\n    }\n    /**\n     * Load readable descriptions for Icing codes\n     */\n    function loadIcingCodeKeymap() {\n        icingCodeKeymap.set(\"0\", \"None\");\n        icingCodeKeymap.set(\"1\", \"Light\");\n        icingCodeKeymap.set(\"2\", \"Light in clouds\")\n        icingCodeKeymap.set(\"3\", \"Light in precipitation\")\n        icingCodeKeymap.set(\"4\", \"Moderate\");   \n        icingCodeKeymap.set(\"5\", \"Moderate in clouds\");\n        icingCodeKeymap.set(\"6\", \"Moderate in precipitation\");\n        icingCodeKeymap.set(\"7\", \"Severe\");\n        icingCodeKeymap.set(\"8\", \"Severe in clouds\");\n        icingCodeKeymap.set(\"9\", \"Severe in precipitation\");     \n    }\n\n    /**\n     * Get the description for a turbulence code\n     * @param {string} code \n     * @returns string, readable description of code \n     */\n    function getTurbulenceCodeDescription(code) {\n    let retvalue = turbulenceCodeKeymap.get(code);\n    if (retvalue === undefined) retvalue = code;\n    return retvalue;\n    }\n    /**\n     * Load readable descriptions for Turbulence codes\n     */\n    function loadTurbulenceCodeKeymap() {\n    turbulenceCodeKeymap.set(\"0\", \"Light\");\n    turbulenceCodeKeymap.set(\"1\", \"Light\");\n    turbulenceCodeKeymap.set(\"2\", \"Moderate in clean air occasionally\")\n    turbulenceCodeKeymap.set(\"3\", \"Moderate in clean air frequent\");\n    turbulenceCodeKeymap.set(\"4\", \"Moderate in clouds occasionally\");   \n    turbulenceCodeKeymap.set(\"5\", \"Moderate in clouds frequently\");\n    turbulenceCodeKeymap.set(\"6\", \"Severe in clean air occasionally\");\n    turbulenceCodeKeymap.set(\"7\", \"Severe in clean air frequent\");\n    turbulenceCodeKeymap.set(\"8\", \"Severe in clouds occasionally\");\n    turbulenceCodeKeymap.set(\"9\", \"Severe in clouds frequently\");\n    turbulenceCodeKeymap.set(\"X\", \"Extreme\");\n    turbulenceCodeKeymap.set(\"x\", \"Extreme\");\n    }\n\n    const CONDITIONS = {\n        //Visual Flight Rules\n        VFR: \"green\",\n        //Marginal Visual Flight Rules\n        MVFR: \"blue\",\n        //Instrument Flight Rules\n        IFR: \"red\",\n        //Low Instrument flight Rules\n        LIFR: \"purple\"\n    };\n    var size = 25;\n    var piD = (size / 2) * 3.14 * 2;\n    //clear square\n    var CLR_SQUARE = \"<g id=\\\"clr\\\">\\n        <rect width=\\\"\" + size + \"\\\" height=\\\"\" + size + \"\\\" x=\\\"calc(250 - \" + size / 2 + \")\\\" y=\\\"calc(250 - \" + size / 2 + \")\\\" class=\\\"coverage\\\"/>\\n    </g>\";\n    //clear circle\n    var CLR_CIRCLE = \"<g id=\\\"clr\\\">\\n        <circle cx=\\\"250\\\" cy=\\\"250\\\" r=\\\"\" + size + \"\\\" fill=\\\"#00000000\\\" class=\\\"coverage\\\"/>\\n    </g>\";\n    // Few clouds 25% coverage\n    var FEW = \"<g id=\\\"few\\\">\\n        <circle cx=\\\"250\\\" cy=\\\"250\\\" r=\\\"\" + size + \"\\\" fill=\\\"#00000000\\\" class=\\\"coverage\\\"/>\\n        <circle cx=\\\"250\\\" cy=\\\"250\\\" r=\\\"\" + size / 2 + \"\\\" fill=\\\"#00000000\\\" \\n        stroke-dasharray=\\\"0 calc(75 * \" + piD + \" / 100) calc(25 * \" + piD + \" / 100)\\\"\\n        class=\\\"partial\\\"/>\\n    </g>\";\n    // Scattered clouds 50% coverage\n    var SCT = \"<g id=\\\"few\\\">\\n    <circle cx=\\\"250\\\" cy=\\\"250\\\" r=\\\"\" + size + \"\\\" fill=\\\"#00000000\\\" class=\\\"coverage\\\"/>\\n    <circle cx=\\\"250\\\" cy=\\\"250\\\" r=\\\"\" + size / 2 + \"\\\" fill=\\\"#00000000\\\" \\n    stroke-dasharray=\\\"calc(25 * \" + piD + \" / 100) calc(50 * \" + piD + \" / 100) calc(25 * \" + piD + \" / 100)\\\"\\n    class=\\\"partial\\\"/>\\n</g>\";\n    // Broken clouds 75% coverage\n    var BRK = \"<g id=\\\"few\\\">\\n    <circle cx=\\\"250\\\" cy=\\\"250\\\" r=\\\"\" + size + \"\\\" fill=\\\"#00000000\\\" class=\\\"coverage\\\"/>\\n    <circle cx=\\\"250\\\" cy=\\\"250\\\" r=\\\"\" + size / 2 + \"\\\" fill=\\\"#00000000\\\" \\n    stroke-dasharray=\\\"calc(49 * \" + piD + \" / 100) calc(26 * \" + piD + \" / 100) calc(25 * \" + piD + \" / 100)\\\"\\n    class=\\\"partial\\\"/>\\n</g>\";\n    // Overcast\n    var OVC = \"<g id=\\\"ovc\\\">\\n    <circle cx=\\\"250\\\" cy=\\\"250\\\" r=\\\"\" + size + \"\\\" class=\\\"ovc\\\"/>\\n</g>\";\n    //Cloud abbreviation map\n    let CLOUDS = {\n        NCD: { svg: CLR_CIRCLE, text: \"no clouds\", rank: 0 },\n        SKC: { svg: CLR_CIRCLE, text: \"sky clear\", rank: 0 },\n        CLR: { svg: CLR_CIRCLE, text: \"no clouds under 12,000 ft\", rank: 0 },\n        NSC: { svg: CLR_CIRCLE, text: \"no significant\", rank: 0 },\n        FEW: { svg: FEW, text: \"few\", rank: 1 },\n        SCT: { svg: SCT, text: \"scattered\", rank: 2 },\n        BKN: { svg: BRK, text: \"broken\", rank: 3 },\n        OVC: { svg: OVC, text: \"overcast\", rank: 4 },\n        VV: { svg: OVC, text: \"vertical visibility\", rank: 5 },\n    };\n    /**\n     * Generates SVG for cloud coverage\n     * @param coverage\n     * @param condition\n     * @returns\n     */\n    function genCoverage(coverage, condition) {\n        if (coverage != null && coverage !== \"\") {\n            return \"\\n            <style>\\n                .coverage{ \\n                    stroke-width: 5; \\n                    stroke: \" + (condition != null ? exports.CONDITIONS[condition] : \"black\") + \";\\n                }\\n                .partial{\\n                    stroke-width: 25; \\n                    stroke: \" + (condition != null ? exports.CONDITIONS[condition] : \"black\") + \";\\n                }\\n                .ovc{\\n                    fill: \" + (condition != null ? exports.CONDITIONS[condition] : \"black\") + \";\\n                }\\n            </style>\\n            \" + CLOUDS[coverage].svg;\n        }\n        else {\n            return \"\";\n        }\n    }\n\n    var RVR = /** @class */ (function () {\n        function RVR(rvrString) {\n            this.re = /(R\\d{2})([L|R|C])?(\\/)([P|M])?(\\d+)(?:([V])([P|M])?(\\d+))?([N|U|D])?(FT)?/g;\n            var matches;\n            while ((matches = this.re.exec(rvrString)) != null) {\n                if (matches.index === this.re.lastIndex) {\n                    this.re.lastIndex++;\n                }\n                this.runway = matches[1];\n                this.direction = matches[2];\n                this.seperator = matches[3];\n                this.minIndicator = matches[4];\n                this.minValue = matches[5];\n                this.variableIndicator = matches[6];\n                this.maxIndicator = matches[7];\n                this.maxValue = matches[8];\n                this.trend = matches[9];\n                this.unitsOfMeasure = matches[10];\n            }\n        }\n        return RVR;\n    }());\n\n    /**\n     * Weather Descriptor\n     */\n    var Weather = /** @class */ (function () {\n        function Weather() {\n        }\n        return Weather;\n    }());\n\n    /**\n     * Deprecated - for internal use only please use getWeatherLegend(key: string)\n     * @param key weather abbriviation\n     * @returns\n     */\n    function getWeatherSVG(key) {\n        var weather = WEATHER[key] != null ? WEATHER[key].svg : \"\";\n        return \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"65\\\" height=\\\"65\\\" viewBox=\\\"0 0 500 500\\\" x=\\\"140\\\" y=\\\"220\\\">\\n                <style>\\n                    .wx_text{ \\n                        color: black;\\n                        font-size: 400px;\\n                        font-family: \\\"Noto Sans\\\";\\n                        white-space: pre;\\n                    }\\n                    .snow{ \\n                        color: black;\\n                        font-size: 300px;\\n                        font-family: \\\"Noto Sans\\\";\\n                        white-space: pre;\\n                    }\\n                    .wx_graphic {\\n                        stroke: black;\\n                        fill: none;\\n                        stroke-width: 30\\n                    }\\n                    .wx_graphic_thin {\\n                        stroke: black;\\n                        fill: none;\\n                        stroke-width: 15\\n                    }\\n                </style>\\n                \" + weather + \"\\n            </svg>\";\n    }\n    /**\n     * Returns SVG icon\n     * @param key weather abbriviation\n     */\n    function getWeatherLegend(key) {\n        var weather = WEATHER[key] != null ? WEATHER[key].svg : \"\";\n        return \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"65\\\" height=\\\"65\\\" viewBox=\\\"0 0 500 500\\\">\\n                <style>\\n                    .wx_text{ \\n                        color: black;\\n                        font-size: 400px;\\n                        font-family: \\\"Noto Sans\\\";\\n                        white-space: pre;\\n                    }\\n                    .snow{ \\n                        color: black;\\n                        font-size: 300px;\\n                        font-family: \\\"Noto Sans\\\";\\n                        white-space: pre;\\n                    }\\n                    .wx_graphic {\\n                        stroke: black;\\n                        fill: none;\\n                        stroke-width: 30\\n                    }\\n                    .wx_graphic_thin {\\n                        stroke: black;\\n                        fill: none;\\n                        stroke-width: 15\\n                    }\\n                </style>\\n                \" + weather + \"\\n            </svg>\";\n    }\n    var BRK_DWN_ARW = \"<line class=\\\"wx_graphic\\\" x1=\\\"350\\\" y1=\\\"50\\\" x2=\\\"175\\\" y2=\\\"250\\\"></line>\\n    <line class=\\\"wx_graphic\\\" x1=\\\"170\\\" y1=\\\"245\\\" x2=\\\"350\\\" y2=\\\"415\\\"></line>\\n    <line class=\\\"wx_graphic\\\" x1=\\\"350\\\" y1=\\\"415\\\" x2=\\\"250\\\" y2=\\\"415\\\"></line>\\n    <line class=\\\"wx_graphic\\\" x1=\\\"350\\\" y1=\\\"425\\\" x2=\\\"350\\\" y2=\\\"315\\\"></line>\";\n    var RIGHT_ARROW = \"<line class=\\\"wx_graphic\\\" x1=\\\"120\\\" y1=\\\"250\\\" x2=\\\"430\\\" y2=\\\"250\\\"></line>\\n    <line class=\\\"wx_graphic\\\" x1=\\\"380\\\" y1=\\\"250\\\" x2=\\\"465\\\" y2=\\\"250\\\" transform=\\\"rotate(-45, 450, 250)\\\"></line>\\n    <line class=\\\"wx_graphic\\\" x1=\\\"380\\\" y1=\\\"250\\\" x2=\\\"450\\\" y2=\\\"250\\\" transform=\\\"rotate(45, 450, 250)\\\"></line>\";\n    var TRANSFORM = \"transform=\\\"matrix(1.4,0,0,1.2,-102.2,-30.3)\\\"\";\n    var DWN_TRI = \"<polygon style=\\\"stroke: black\\\" points=\\\"150 160 350 160 250 475\\\"></polygon>\";\n    /*\n    SVG Icons\n    */\n    //DUST OR SAND\n    var sine = \"<path transform=\\\"matrix(1.4,0,0,1.6,-84,-118)\\\" style=\\\"fill: none; stroke: black; stroke-width: 10\\\" d=\\\"M 232.3 217.2 C 231.4 184.3 201 163.6 176.6 180.1 C 165.3 187.8 158.3 201.9 158.3 217.2\\\"></path>\\n    <path transform=\\\"matrix(1.4,0,0,1.6,-121,-147)\\\" style=\\\"fill: none; stroke: black; stroke-width: 10\\\" d=\\\"M 337.1 223.5 C 337.1 255.3 304.1 275.2 277.8 259.3 C 265.6 251.9 258 238.2 258 223.5\\\"></path>    \\n\";\n    //Smoke or volcanic ash\n    var FU_VA = \"<g id=\\\"FU_VA\\\">\\n        <line class=\\\"wx_graphic\\\" x1=\\\"100\\\" y1=\\\"150\\\" x2=\\\"100\\\" y2=\\\"400\\\"></line>\\n        <path class=\\\"wx_graphic\\\" d=\\\"M 100 150 C 115 75 185 75 200 150\\\"></path>\\n        <path class=\\\"wx_graphic\\\" d=\\\"M 200 150 C 215 215 285 215 300 150\\\"></path>\\n        <path class=\\\"wx_graphic\\\" d=\\\"M 300 150 C 315 75 380 75 400 150\\\"></path>\\n    </g>\";\n    //Haze\n    var HZ = \"<g id=\\\"HZ\\\">\\n        <text class=\\\"snow\\\" x=\\\"100\\\" y=\\\"365\\\">\\u267E\\uFE0F</text>\\n    </g>\";\n    //Dust or Sand\n    var DU_SA = \"<g id=\\\"DU_SA\\\">\\n        <text class=\\\"wx_text\\\" x=\\\"160\\\" y=\\\"360\\\">S</text>\\n    </g>\";\n    //Blowing dust or sand\n    var BLDU_BLSA = \"<g id=\\\"BLDU_BLSA\\\">\\n        <text class=\\\"wx_text\\\" x=\\\"160\\\" y=\\\"360\\\">$</text>\\n    </g>\";\n    //Dust Devil\n    var PO = \"<g id=\\\"PO\\\">\\n      <text class=\\\"wx_text\\\" style=\\\"font-size: 375px;\\\" x=\\\"50\\\" y=\\\"360\\\">(\\u25CF)</text>\\n    </g>\";\n    //Vicinity sand storm\n    var VCSS = \"<g id=\\\"VCSS\\\">\\n        <text class=\\\"wx_text\\\" x=\\\"50\\\" y=\\\"360\\\">($)</text>\\n        \" + RIGHT_ARROW + \"\\n    </g>\";\n    //FOG OR SPEACIAL WEATHER\n    //Mist or light fog\n    var BR = \"<g id=\\\"BR\\\">\\n        <line class=\\\"wx_graphic\\\" x1=\\\"50\\\" y1=\\\"200\\\" x2=\\\"450\\\" y2=\\\"200\\\"></line>\\n        <line class=\\\"wx_graphic\\\" x1=\\\"50\\\" y1=\\\"300\\\" x2=\\\"450\\\" y2=\\\"300\\\"></line>\\n    </g>\";\n    //More or less continuous shallow fog\n    var MIFG = \"<g id=\\\"MIFG\\\">\\n        <line class=\\\"wx_graphic\\\" x1=\\\"50\\\" y1=\\\"200\\\" x2=\\\"200\\\" y2=\\\"200\\\"></line>\\n        <line class=\\\"wx_graphic\\\" x1=\\\"300\\\" y1=\\\"200\\\" x2=\\\"450\\\" y2=\\\"200\\\"></line>\\n        <line class=\\\"wx_graphic\\\" x1=\\\"50\\\" y1=\\\"300\\\" x2=\\\"450\\\" y2=\\\"300\\\"></line>\\n    </g>\\n    \";\n    //Vicinity thunderstorm\n    var VCTS = \"<g id=\\\"VCTS\\\">\" + BRK_DWN_ARW + \"</g>\";\n    //Virga or precipitation not hitting ground\n    var VIRGA = \"<g id=\\\"VIGRA\\\">\\n        <text transform=\\\"matrix(0, -1, 1, 0, 366, 389)\\\" class=\\\"wx_text\\\" style=\\\"font-size:300px;\\\" dx=\\\"-5 -9\\\" dy=\\\"-40 0.5\\\">(\\u25CF</text>\\n    </g>\";\n    //Vicinity showers\n    var VCSH = \"<g id=\\\"VCSS\\\">\\n        <text class=\\\"wx_text\\\" x=\\\"50\\\" y=\\\"360\\\">( )</text>\\n        <circle style=\\\"fill: black\\\" cx=\\\"230\\\" cy=\\\"260\\\" r=\\\"50\\\"></circle>\\n    </g>\";\n    //Thunderstorm with or without precipitation\n    var TS = \"<g id=\\\"TS\\\">\\n        \" + BRK_DWN_ARW + \"\\n        <line class=\\\"wx_graphic\\\" x1=\\\"355\\\" y1=\\\"50\\\" x2=\\\"50\\\" y2=\\\"50\\\"></line>\\n        <line class=\\\"wx_graphic\\\" x1=\\\"60\\\" y1=\\\"50\\\" x2=\\\"60\\\" y2=\\\"440\\\"></line>\\n    </g>\\n    \";\n    //Squalls\n    var SQ = \"<g id=\\\"SQ\\\">\\n        <line class=\\\"wx_graphic\\\" x1=\\\"250\\\" y1=\\\"450\\\" x2=\\\"150\\\" y2=\\\"50\\\"></line>\\n        <line class=\\\"wx_graphic\\\" x1=\\\"150\\\" y1=\\\"50\\\" x2=\\\"250\\\" y2=\\\"125\\\"></line>\\n        <line class=\\\"wx_graphic\\\" x1=\\\"250\\\" y1=\\\"125\\\" x2=\\\"350\\\" y2=\\\"50\\\"></line>\\n        <line class=\\\"wx_graphic\\\" x1=\\\"350\\\" y1=\\\"50\\\" x2=\\\"250\\\" y2=\\\"450\\\"></line>\\n    </g>\";\n    //Funnel cloud or tornado\n    var FC = \"<g id=\\\"FC\\\">\\n        <line class=\\\"wx_graphic\\\" x1=\\\"200\\\" y1=\\\"100\\\" x2=\\\"200\\\" y2=\\\"400\\\"></line>\\n        <line class=\\\"wx_graphic\\\" x1=\\\"300\\\" y1=\\\"100\\\" x2=\\\"300\\\" y2=\\\"400\\\"></line>\\n        <line class=\\\"wx_graphic\\\" x1=\\\"300\\\" y1=\\\"100\\\" x2=\\\"375\\\" y2=\\\"50\\\"></line>\\n        <line class=\\\"wx_graphic\\\" x1=\\\"300\\\" y1=\\\"400\\\" x2=\\\"375\\\" y2=\\\"450\\\"></line>\\n        <line class=\\\"wx_graphic\\\" x1=\\\"200\\\" y1=\\\"400\\\" x2=\\\"125\\\" y2=\\\"450\\\"></line>\\n        <line class=\\\"wx_graphic\\\" x1=\\\"200\\\" y1=\\\"100\\\" x2=\\\"125\\\" y2=\\\"50\\\"></line>\\n    </g>\\n    \";\n    //BLOWING WEATHER\n    //Sand or dust storm\n    var SS = \"<g id=\\\"SS\\\">\\n        <text class=\\\"wx_text\\\" x=\\\"160\\\" y=\\\"360\\\">S</text>\\n        \" + RIGHT_ARROW + \"\\n    </g>\";\n    //Strong sand or dust storm\n    var PLUS_SS = \"<g =\\\"+SS\\\">\\n        <text class=\\\"wx_text\\\" x=\\\"160\\\" y=\\\"360\\\">S</text>\\n    </g>\";\n    //Blowing snow\n    var BLSN = \"<g id=\\\"BLSN\\\">\\n        <text x=\\\"0\\\" y=\\\"350\\\" class=\\\"wx_text\\\" transform=\\\"rotate(270, 250, 250)\\\">\\u2192</text>\\n        <text x=\\\"50\\\" y=\\\"450\\\" class=\\\"wx_text\\\">\\u2192</text>\\n    </g>\";\n    //Drifting snow\n    var DRSN = \"<g id=\\\"DRSN\\\">\\n        <text x=\\\"110\\\" y=\\\"350\\\" class=\\\"wx_text\\\" transform=\\\"rotate(90, 250, 250)\\\">\\u2192</text>\\n        <text x=\\\"110\\\" y=\\\"400\\\" class=\\\"wx_text\\\">\\u2192</text>\\n    </g>\\n    \";\n    //FOG//////////////////////////////////////////////\n    //Vicinity fog\n    var VCFG = \"<g id=\\\"VCFG\\\">\\n        <line class=\\\"wx_graphic\\\" x1=\\\"100\\\" y1=\\\"150\\\" x2=\\\"400\\\" y2=\\\"150\\\"></line>\\n        <line class=\\\"wx_graphic\\\" x1=\\\"100\\\" y1=\\\"250\\\" x2=\\\"400\\\" y2=\\\"250\\\"></line>\\n        <line class=\\\"wx_graphic\\\" x1=\\\"100\\\" y1=\\\"350\\\" x2=\\\"400\\\" y2=\\\"350\\\"></line>\\n        <path class=\\\"wx_graphic\\\" d=\\\"M 60 135 C 15 165 15 335 65 365\\\"></path>\\n        <path class=\\\"wx_graphic\\\" d=\\\"M 435 135 C 485 150 500 345 435 365\\\"></path>\\n    </g>\";\n    //Patchy fog\n    var BCFG = \"<g id=\\\"BCFG\\\">\\n        <line class=\\\"wx_graphic\\\" x1=\\\"50\\\" y1=\\\"150\\\" x2=\\\"150\\\" y2=\\\"150\\\"></line>\\n        <line class=\\\"wx_graphic\\\" x1=\\\"350\\\" y1=\\\"150\\\" x2=\\\"450\\\" y2=\\\"150\\\"></line>\\n        <line class=\\\"wx_graphic\\\" x1=\\\"50\\\" y1=\\\"250\\\" x2=\\\"450\\\" y2=\\\"250\\\"></line>\\n        <line class=\\\"wx_graphic\\\" x1=\\\"50\\\" y1=\\\"350\\\" x2=\\\"150\\\" y2=\\\"350\\\"></line>\\n        <line class=\\\"wx_graphic\\\" x1=\\\"350\\\" y1=\\\"350\\\" x2=\\\"450\\\" y2=\\\"350\\\"></line>\\n    </g>\";\n    //Fog, sky discernable\n    var PRFG = \"<g id=\\\"BCFG\\\">\\n        <line class=\\\"wx_graphic\\\" x1=\\\"50\\\" y1=\\\"150\\\" x2=\\\"150\\\" y2=\\\"150\\\"></line>\\n        <line class=\\\"wx_graphic\\\" x1=\\\"350\\\" y1=\\\"150\\\" x2=\\\"450\\\" y2=\\\"150\\\"></line>\\n        <line class=\\\"wx_graphic\\\" x1=\\\"50\\\" y1=\\\"250\\\" x2=\\\"450\\\" y2=\\\"250\\\"></line>\\n        <line class=\\\"wx_graphic\\\" x1=\\\"50\\\" y1=\\\"350\\\" x2=\\\"450\\\" y2=\\\"350\\\"></line>\\n    </g>\";\n    //Fog, sky undiscernable\n    var FG = \"<g id=\\\"FG\\\">\\n        <line class=\\\"wx_graphic\\\" x1=\\\"50\\\" y1=\\\"150\\\" x2=\\\"450\\\" y2=\\\"150\\\"></line>\\n        <line class=\\\"wx_graphic\\\" x1=\\\"50\\\" y1=\\\"250\\\" x2=\\\"450\\\" y2=\\\"250\\\"></line>\\n        <line class=\\\"wx_graphic\\\" x1=\\\"50\\\" y1=\\\"350\\\" x2=\\\"450\\\" y2=\\\"350\\\"></line>\\n    </g>\";\n    //Freezing fog\n    var FZFG = \"<g id=\\\"FG\\\">\\n        <line class=\\\"wx_graphic\\\" x1=\\\"50\\\" y1=\\\"150\\\" x2=\\\"450\\\" y2=\\\"150\\\"></line>\\n        <line class=\\\"wx_graphic\\\" x1=\\\"50\\\" y1=\\\"250\\\" x2=\\\"450\\\" y2=\\\"250\\\"></line>\\n        <line class=\\\"wx_graphic\\\" x1=\\\"50\\\" y1=\\\"350\\\" x2=\\\"450\\\" y2=\\\"350\\\"></line>\\n        <line class=\\\"wx_graphic\\\" x1=\\\"50\\\" y1=\\\"150\\\" x2=\\\"250\\\" y2=\\\"350\\\"></line>\\n        <line class=\\\"wx_graphic\\\" x1=\\\"450\\\" y1=\\\"150\\\" x2=\\\"250\\\" y2=\\\"350\\\"></line>\\n    </g>\";\n    //Drizzle\n    //Light drizzle\n    var MIN_DZ = \"<g id=\\\"-DZ\\\">\\n        <text class=\\\"wx_text\\\" x=\\\"130\\\" y=\\\"240\\\">,,</text>\\n    </g>\";\n    //Moderate drizzle\n    var DZ = \"<g id=\\\"RA\\\">\\n        <text class=\\\"wx_text\\\" x=\\\"130\\\" y=\\\"285\\\">,,</text>\\n        <text class=\\\"wx_text\\\" x=\\\"170\\\" y=\\\"175\\\">,</text>\\n    </g>\";\n    //Heavy drizzle\n    var PLUS_DZ = \"<g id=\\\"RA\\\">\\n        <text class=\\\"wx_text\\\" x=\\\"130\\\" y=\\\"240\\\">,,</text>\\n        <text class=\\\"wx_text\\\" x=\\\"170\\\" y=\\\"145\\\">,</text>\\n        <text class=\\\"wx_text\\\" x=\\\"170\\\" y=\\\"320\\\">,</text>\\n    </g>\";\n    //Light freezing drizzle\n    var MIN_FZDZ = \"<g id=\\\"-DZ\\\" \" + TRANSFORM + \">\\n        <text class=\\\"wx_text\\\" x=\\\"130\\\" y=\\\"240\\\">,</text>\\n        \" + sine + \"\\n    </g>\";\n    //Moderate to heavy freezing drizzle\n    var FZDZ = \"<g id=\\\"-DZ\\\" \" + TRANSFORM + \">\\n        <text class=\\\"wx_text\\\" x=\\\"130\\\" y=\\\"240\\\">,,</text>\\n        \" + sine + \"    \\n    </g>\";\n    //Light drizzle and rain\n    var MIN_DZRA = \"<g id=\\\"MIN_DZRA>\\n        <text style=\\\"fill: rgb(51, 51, 51); font-family: Georgia; font-size: 300px; white-space: pre;\\\" x=\\\"198.442\\\" y=\\\"348.054\\\" dx=\\\"0.743\\\" dy=\\\"-39.081\\\">,</text>\\n        <text style=\\\"fill: rgb(51, 51, 51); font-family: &quot;Roboto Slab&quot;; font-size: 100px; white-space: pre;\\\" x=\\\"313.598\\\" y=\\\"154.93\\\" dx=\\\"-105.782\\\" dy=\\\"92.343\\\">\\u25CF</text>\\n    </g>\";\n    //Moderate to heavy drizzle and rain\n    var DZRA = \"<g id=\\\"MIN_DZRA>\\n        <text x=\\\"198.442\\\" y=\\\"348.054\\\" style=\\\"white-space: pre; fill: rgb(51, 51, 51); font-family: &quot;Georgia&quot;; font-size: 300px;\\\">,</text>\\n        <text style=\\\"fill: rgb(51, 51, 51); font-family: Georgia; font-size: 300px; white-space: pre;\\\" x=\\\"200.662\\\" y=\\\"301.835\\\" dx=\\\"-0.441\\\" dy=\\\"-136.772\\\">,</text>\\n        <text style=\\\"fill: rgb(51, 51, 51); font-family: &quot;Roboto Slab&quot;; font-size: 100px; white-space: pre;\\\" x=\\\"313.598\\\" y=\\\"154.93\\\" dx=\\\"-106.683\\\" dy=\\\"133.71\\\">\\u25CF</text>\\n    </g>\";\n    //RAIN\n    //Light rain\n    var MIN_RA = \"<g id=\\\"-RA\\\">\\n        <text class=\\\"wx_text\\\" x=\\\"130\\\" y=\\\"240\\\">..</text>\\n    </g>\";\n    //Moderate rain\n    var RA = \"<g id=\\\"RA\\\">\\n        <text class=\\\"wx_text\\\" x=\\\"130\\\" y=\\\"285\\\">..</text>\\n        <text class=\\\"wx_text\\\" x=\\\"170\\\" y=\\\"175\\\">.</text>\\n    </g>\";\n    //Heavy rain\n    var PLUS_RA = \"<g id=\\\"RA\\\">\\n        <text class=\\\"wx_text\\\" x=\\\"130\\\" y=\\\"240\\\">..</text>\\n        <text class=\\\"wx_text\\\" x=\\\"170\\\" y=\\\"145\\\">.</text>\\n        <text class=\\\"wx_text\\\" x=\\\"170\\\" y=\\\"320\\\">.</text>\\n    </g>\";\n    //Light freezing rain\n    var MIN_FZRA = \"<g id=\\\"-RA\\\" transform=\\\"matrix(1.4,0,0,1.2,-102.2,-30.3)\\\">\\n        <text class=\\\"wx_text\\\" x=\\\"130\\\" y=\\\"240\\\">.</text>\\n        \" + sine + \"\\n    </g>\";\n    //Moderate to heavy freezing rain\n    var FZRA = \"<g id=\\\"-RA\\\" \" + TRANSFORM + \">\\n    <text class=\\\"wx_text\\\" x=\\\"130\\\" y=\\\"240\\\">..</text>\\n    \" + sine + \"\\n    </g>\";\n    //Light rain and snow\n    var MIN_RASN = \"<g id=\\\"MIN_RASN\\\">\\n        <text style=\\\"fill: rgb(51, 51, 51); font-family: Georgia; font-size: 200px; white-space: pre;\\\" x=\\\"198.442\\\" y=\\\"348.054\\\" dx=\\\"-0.648\\\" dy=\\\"82.18\\\">*</text>\\n        <text style=\\\"fill: rgb(51, 51, 51); font-family: &quot;Roboto Slab&quot;; font-size: 200px; white-space: pre;\\\" x=\\\"313.598\\\" y=\\\"154.93\\\" dx=\\\"-129.822\\\" dy=\\\"98.015\\\">\\u25CF</text>\\n    </g>\";\n    //Moderate to heavy rain and snow\n    var RASN = \"<g id=\\\"RASN\\\">\\n        <text style=\\\"fill: rgb(51, 51, 51); font-family: Georgia; font-size: 200px; white-space: pre;\\\" x=\\\"198.442\\\" y=\\\"348.054\\\" dx=\\\"6.111\\\" dy=\\\"137.208\\\">*</text>\\n        <text style=\\\"fill: rgb(51, 51, 51); font-family: &quot;Roboto Slab&quot;; font-size: 200px; white-space: pre;\\\" x=\\\"313.598\\\" y=\\\"154.93\\\" dx=\\\"-124.964\\\" dy=\\\"158.382\\\">\\u25CF</text>\\n        <text transform=\\\"matrix(1, 0, 0, 1, 11.82478, 80.656288)\\\" style=\\\"fill: rgb(51, 51, 51); font-family: Georgia; font-size: 200px; white-space: pre;\\\" x=\\\"198.442\\\" y=\\\"348.054\\\" dx=\\\"-10.654\\\" dy=\\\"-182.434\\\">*</text>\\n    </g>\";\n    //SNOW and MISC FROZEN PERCIP\n    //Light snow\n    var MIN_SN = \"<g id=\\\"-SN\\\">\\n        <text class=\\\"snow\\\" x=\\\"50\\\" y=\\\"370\\\">**</text>\\n    </g>\\n    \";\n    //Moderate snow\n    var SN = \"<g id=\\\"SN\\\">\\n        <text class=\\\"snow\\\" x=\\\"50\\\" y=\\\"460\\\">**</text>\\n        <text class=\\\"snow\\\" x=\\\"120\\\" y=\\\"325\\\">*</text>\\n    </g>\";\n    //Heavy snow\n    var PLUS_SN = \"<g id=\\\"+SN\\\">\\n        <text class=\\\"snow\\\" x=\\\"50\\\" y=\\\"420\\\">**</text>\\n        <text class=\\\"snow\\\" x=\\\"120\\\" y=\\\"285\\\">*</text>\\n        <text class=\\\"snow\\\" x=\\\"120\\\" y=\\\"540\\\">*</text>\\n    </g>\";\n    //Snow grains\n    var SG = \"<g id=\\\"SG\\\">\\n        <polygon class=\\\"wx_graphic\\\" points=\\\"250 150 150 300 350 300\\\"></polygon>\\n        <line class=\\\"wx_graphic\\\" x1=\\\"50\\\" y1=\\\"230\\\" x2=\\\"197\\\" y2=\\\"230\\\"></line>\\n        <line class=\\\"wx_graphic\\\" x1=\\\"303\\\" y1=\\\"230\\\" x2=\\\"450\\\" y2=\\\"230\\\"></line>\\n    </g>\";\n    //Ice crystals\n    var IC = \"<g id=\\\"IC\\\">\\n        <line class=\\\"wx_graphic\\\" x1=\\\"50\\\" y1=\\\"250\\\" x2=\\\"450\\\" y2=\\\"250\\\"></line>\\n        <line class=\\\"wx_graphic\\\" x1=\\\"175\\\" y1=\\\"175\\\" x2=\\\"325\\\" y2=\\\"325\\\"></line>\\n        <line class=\\\"wx_graphic\\\" x1=\\\"325\\\" y1=\\\"175\\\" x2=\\\"174\\\" y2=\\\"325\\\"></line>  \\n    </g>\";\n    //Ice pellets\n    var PE_PL = \"<g id=\\\"PE_PL\\\">\\n      <polygon class=\\\"wx_graphic\\\" points=\\\"250 150 150 300 350 300\\\"></polygon>\\n      <text style=\\\"fill: black; font-size: 100px;\\\" x=\\\"237.271\\\" y=\\\"242.526\\\" dx=\\\"-18.412\\\" dy=\\\"32.137\\\">\\u25CF</text>\\n    </g>\";\n    //SHOWERY PERCIPITATION\n    //Light rain showers\n    var MIN_SHRA = \"<g id=\\\"MIN_SHRA\\\">\\n        <polygon class=\\\"wx_graphic\\\"  points=\\\"150 160 350 160 250 475\\\"></polygon>\\n        <text x=\\\"190\\\" y=\\\"140\\\" style=\\\"font-size: 200px;\\\">\\u25CF</text>\\n    </g>\";\n    //Moderate to heavy rain showers\n    var SHRA = \"\";\n    //Light rain and snow showers\n    var MIN_SHRASN = \"\";\n    //Moderate to heavy rain and snow showers\n    var SHRASN = \"\";\n    //Light snow showers\n    var MIN_SHSN = \"\";\n    //Moderate to heavy snow showers\n    var SHSN = \"\";\n    //Light showers with hail, not with thunder\n    var MIN_GR = \"\";\n    //Moderate to heavy showers with hail, not with thunder\n    var GR = \"\";\n    // THUNDERSTORMS\n    //Light to moderate thunderstorm with rain\n    var TSRA = \"\";\n    //Light to moderate thunderstorm with hail\n    var TSGR = \"\";\n    //Thunderstorm with heavy rain\n    var PLUS_TSRA = \"\";\n    /**\n     * Map of weather abbriviation to SVG data and Full text\n     */\n    let WEATHER = {\n        \"FU\": { svg: FU_VA, text: \"Smoke\" },\n        \"VA\": { svg: FU_VA, text: \"Volcanic Ash\" },\n        \"HZ\": { svg: HZ, text: \"Haze\" },\n        \"DU\": { svg: DU_SA, text: \"Dust\" },\n        \"SA\": { svg: DU_SA, text: \"Sand\" },\n        \"BLDU\": { svg: BLDU_BLSA, text: \"Blowing Dust\" },\n        \"BLDA\": { svg: BLDU_BLSA, text: \"Blowing Sand\" },\n        \"PO\": { svg: PO, text: \"Dust Devil\" },\n        \"VCSS\": { svg: VCSS, text: \"Vicinity Sand Storm\" },\n        \"BR\": { svg: BR, text: \"Mist or light fog\" },\n        \"MIFG\": { svg: MIFG, text: \"Continuous Shallow Fog\" },\n        \"VCTS\": { svg: VCTS, text: \"Vicinity Thunderstorm\" },\n        \"VIRGA\": { svg: VIRGA, text: \"Virga\" },\n        \"VCSH\": { svg: VCSH, text: \"Vicinity showers\" },\n        \"TS\": { svg: TS, text: \"Thunderstorm\" },\n        \"SQ\": { svg: SQ, text: \"Squall\" },\n        \"FC\": { svg: FC, text: \"Funnel Cloud/Tornado\" },\n        \"SS\": { svg: SS, text: \"Sand/Dust Storm\" },\n        \"+SS\": { svg: PLUS_SS, text: \"Strong Sand/Dust Storm\" },\n        \"BLSN\": { svg: BLSN, text: \"Blowing Snow\" },\n        \"DRSN\": { svg: DRSN, text: \"Drifting Snow\" },\n        \"VCFG\": { svg: VCFG, text: \"Vicinity Fog\" },\n        \"BCFG\": { svg: BCFG, text: \"Patchy Fog\" },\n        \"PRFG\": { svg: PRFG, text: \"Fog, Sky Discernable\" },\n        \"FG\": { svg: FG, text: \"Fog, Sky Undiscernable\" },\n        \"FZFG\": { svg: FZFG, text: \"Freezing Fog\" },\n        \"-DZ\": { svg: MIN_DZ, text: \"Light Drizzle\" },\n        \"DZ\": { svg: DZ, text: \"Moderate Drizzle\" },\n        \"+DZ\": { svg: PLUS_DZ, text: \"Heavy Drizzle\" },\n        \"-FZDZ\": { svg: MIN_FZDZ, text: \"Light Freezing Drizzle\" },\n        \"FZDZ\": { svg: FZDZ, text: \"Moderate Freezing Drizzle\" },\n        \"+FZDZ\": { svg: FZDZ, text: \"Heavy Freezing Drizzle\" },\n        \"-DZRA\": { svg: MIN_DZRA, text: \"Light Drizzle & Rain\" },\n        \"DZRA\": { svg: DZRA, text: \"Moderate to Heavy Drizzle & Rain\" },\n        \"-RA\": { svg: MIN_RA, text: \"Light Rain\" },\n        \"RA\": { svg: RA, text: \"Moderate Rain\" },\n        \"+RA\": { svg: PLUS_RA, text: \"Heavy Rain\" },\n        \"-FZRA\": { svg: MIN_FZRA, text: \"Light Freezing Rain\" },\n        \"FZRA\": { svg: FZRA, text: \"Moderate Freezing Rain\" },\n        \"+FZRA\": { svg: FZRA, text: \"Heavy Freezing Rain\" },\n        \"-RASN\": { svg: MIN_RASN, text: \"Light Rain & Snow\" },\n        \"RASN\": { svg: RASN, text: \"Moderate Rain & Snow\" },\n        \"+RASN\": { svg: RASN, text: \"Heavy Rain & Snow\" },\n        \"-SN\": { svg: MIN_SN, text: \"Light Snow\" },\n        \"SN\": { svg: SN, text: \"Moderate Snow\" },\n        \"+SN\": { svg: PLUS_SN, text: \"Heavy Snow\" },\n        \"SG\": { svg: SG, text: \"Snow Grains\" },\n        \"IC\": { svg: IC, text: \"Ice Crystals\" },\n        \"PE\": { svg: PE_PL, text: \"Ice Pellets\" },\n        \"PL\": { svg: PE_PL, text: \"Ice Pellets\" }\n    };\n    let RECENT_WEATHER = {\n        REBLSN: \"Moderate/heavy blowing snow (visibility significantly reduced)reduced\",\n        REDS: \"Dust Storm\",\n        REFC: \"Funnel Cloud\",\n        REFZDZ: \"Freezing Drizzle\",\n        REFZRA: \"Freezing Rain\",\n        REGP: \"Moderate/heavy snow pellets\",\n        REGR: \"Moderate/heavy hail\",\n        REGS: \"Moderate/heavy small hail\",\n        REIC: \"Moderate/heavy ice crystals\",\n        REPL: \"Moderate/heavy ice pellets\",\n        RERA: \"Moderate/heavy rain\",\n        RESG: \"Moderate/heavy snow grains\",\n        RESHGR: \"Moderate/heavy hail showers\",\n        RESHGS: \"Moderate/heavy small hail showers\",\n        // RESHGS: \"Moderate/heavy snow pellet showers\", // dual meaning?\n        RESHPL: \"Moderate/heavy ice pellet showers\",\n        RESHRA: \"Moderate/heavy rain showers\",\n        RESHSN: \"Moderate/heavy snow showers\",\n        RESN: \"Moderate/heavy snow\",\n        RESS: \"Sandstorm\",\n        RETS: \"Thunderstorm\",\n        REUP: \"Unidentified precipitation (AUTO obs. only)\",\n        REVA: \"Volcanic Ash\",\n    };\n\n    var GUST_WIDTH = 8;\n    var WS_WIDTH = 8;\n    /**\n     * Creates a windbarb for the metar\n     * @param metar\n     * @returns\n     */\n    function genWind(metar) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n        var WDD = metar.wind_direction ? metar.wind_direction : 0;\n        var WSP = metar.wind_speed ? metar.wind_speed : 0;\n        var WGSP = metar.gust_speed ? metar.gust_speed : 0;\n        var wind = \"\";\n        var gust = \"\";\n        if (WSP === 0) {\n            wind =\n                `<g id=\"calm\"><ellipse id=\"calm-marker\" stroke=\"#000\" fill=\"#00000000\" cx=\"250\" cy=\"250\" rx=\"35\" ry=\"35\"/></g>`;\n        }\n        else {\n            gust = (metar.gust_speed === null || metar.gust_speed === undefined) ? \"\" :\n                `<g id=\"gustBarb\" transform=\"rotate(${WDD}, 250, 250)\"> ` +\n                    `${genBarb1((_a = WGSP) !== null && _a !== void 0 ? _a : 0, true)} ` + \n                    `${genBarb2((_b = WGSP) !== null && _b !== void 0 ? _b : 0, true)} ` + \n                    `${genBarb3((_c = WGSP) !== null && _c !== void 0 ? _c : 0, true)} ` + \n                    `${genBarb4((_d = WGSP) !== null && _d !== void 0 ? _d : 0, true)} ` + \n                    `${genBarb5((_e = WGSP) !== null && _e !== void 0 ? _e : 0, true)} ` + \n                `</g>`;\n            wind =\n                `<g id=\"windBarb\" transform=\"rotate(${WDD}, 250, 250)\">` + \n                `<line stroke-width=\"8\" y1=\"225\" x1=\"250\" y2=\"90\" x2=\"250\" stroke=\"#000\" fill=\"none\"/>` +\n                    `${genBarb1((_f = WSP) !== null && _f !== void 0 ? _f : 0, false)} ` + \n                    `${genBarb2((_g = WSP) !== null && _g !== void 0 ? _g : 0, false)} ` + \n                    `${genBarb3((_h = WSP) !== null && _h !== void 0 ? _h : 0, false)} ` + \n                    `${genBarb4((_j = WSP) !== null && _j !== void 0 ? _j : 0, false)} ` + \n                    `${genBarb5((_k = WSP) !== null && _k !== void 0 ? _k : 0, false)} ` + \n                `</g>`;\n        }\n        return gust + wind;\n    }\n\n    /**\n     * Generate first barb\n     * @param speed wind or gust speed\n     * @param gust set to true for gust\n     * @returns\n     */\n    function genBarb1(speed, gust) {\n        var fill = gust ? 'red' : '#000';\n        var tag = gust ? 'gs' : 'ws';\n        var width = gust ? GUST_WIDTH : WS_WIDTH;\n        var barb = \"\";\n        if (speed >= 10 && speed < 50) {\n            //barb = `<line id=\"${tag}-barb-1-long\" stroke-width=\"${width}\" y1=\"50\" x1=\"250\" y2=\"50\" x2=\"300\" stroke=\"${fill}\" transform=\"rotate(-35, 250, 50)\"/>`;\n            barb = `<line id=\"${tag}-barb-1-long\" stroke-width=\"${width}\" y1=\"90\" x1=\"250\" y2=\"90\" x2=\"305\" stroke=\"${fill}\" transform=\"rotate(-35, 250, 90)\"/>`;\n        }\n        else if (speed >= 50) {\n            barb = `<polygon id=\"${tag}-barb-1-flag\" points=\"248,98 290,68 248,68\" fill=\"${fill}\" />`;\n        }\n        return barb;\n    }\n    /**\n     * Generate second barb\n     * @param speed wind or gust speed\n     * @param gust set to true for gust\n     * @returns\n     */\n    function genBarb2(speed, gust) {\n        var fill = gust ? 'red' : '#000';\n        var tag = gust ? 'gs' : 'ws';\n        var width = gust ? GUST_WIDTH : WS_WIDTH;\n        var barb = \"\";\n        if ((speed < 10) || (15 <= speed && speed < 20) || (55 <= speed && speed < 60)) {\n            barb = `<line id=\"${tag}-barb-2-short\" stroke-width=\"${width}\" y1=\"110\" x1=\"250\" y2=\"110\" x2=\"285\" stroke=\"${fill}\" transform=\"rotate(-35, 250, 110)\"/>`;\n        }\n        else if ((15 < speed && speed < 50) || (speed >= 60)) {\n            barb = `<line id=\"${tag}-barb-2-long\" stroke-width=\"${width}\" y1=\"110\" x1=\"250\" y2=\"110\" x2=\"305\" stroke=\"${fill}\" transform=\"rotate(-35, 250, 110)\"/>`;\n        }\n        return barb;\n    }\n    /**\n     * Generate third barb\n     * @param speed wind or gust speed\n     * @param gust set to true for gust\n     * @returns\n     */\n    function genBarb3(speed, gust) {\n        var fill = gust ? 'red' : '#000';\n        var tag = gust ? 'gs' : 'ws';\n        var width = gust ? GUST_WIDTH : WS_WIDTH;\n        var barb = \"\";\n        if ((25 <= speed && speed < 30) || (65 <= speed && speed < 70)) {\n            barb = `<line id=\"${tag}-barb-3-short\" stroke-width=\"${width}\" y1=\"150\"  x1=\"250\" y2=\"150\" x2=\"285\" stroke=\"${fill}\" transform=\"rotate(-35, 250, 150)\"/>`;\n        }\n        else if ((25 < speed && speed < 50) || speed >= 70) {\n            barb = `<line id=\"${tag}-bard-3-long\" stroke-width=\"${width}\" y1=\"150\"  x1=\"250\" y2=\"150\" x2=\"305\" stroke=\"${fill}\" transform=\"rotate(-35, 250, 150)\"/>`;\n        }\n        return barb;\n    }\n    /**\n     * Generate forth barb\n     * @param speed wind or gust speed\n     * @param gust set to true for gust\n     * @returns\n     */\n    function genBarb4(speed, gust) {\n        var fill = gust ? 'red' : '#000';\n        var tag = gust ? 'gs' : 'ws';\n        var width = gust ? GUST_WIDTH : WS_WIDTH;\n        var barb = \"\";\n        if ((35 <= speed && speed < 40) || (75 <= speed && speed < 80)) {\n            barb = `<line id=\"${tag}-barb-4-short\" stroke-width=\"${width}\" y1=\"190\" x1=\"250\" y2=\"190\" x2=\"285\" stroke=\"${fill}\" transform=\"rotate(-35, 250, 190)\"/>`;\n        }\n        else if ((35 < speed && speed < 50) || speed >= 80) {\n            barb = `<line id=\"${tag}-barb-4-long\" stroke-width=\"${width}\" y1=\"190\" x1=\"250\" y2=\"190\" x2=\"305\"  stroke=\"${fill}\" transform=\"rotate(-35, 250, 190)\"/>`;\n        }\n        return barb;\n    }\n    /**\n     * Generate fifth barb\n     * @param speed wind or gust speed\n     * @param gust set to true for gust\n     * @returns\n     */\n    function genBarb5(speed, gust) {\n        var fill = gust ? 'red' : '#000';\n        var tag = gust ? 'gs' : 'ws';\n        var width = gust ? GUST_WIDTH : WS_WIDTH;\n        var barb = \"\";\n        if ((45 <= speed && speed < 50) || (85 <= speed && speed < 90)) {\n            barb = `<line id=\"${tag}-barb-5-short\" stroke-width=\"${width}\" y1=\"230\" x1=\"250\" y2=\"230\" x2=\"285\" stroke=\"${fill}\" transform=\"rotate(-35, 250, 230)\"/>`;\n        }\n        return barb;\n    }\n\n    //Meassage types\n    var TYPES = [\"METAR\", \"SPECI\"];\n\n    /**\n     * Parses a raw metar and binds or creates a METAR object\n     * @param weathertext Raw Weather text string\n     * @param ref Reference to a WeatherProcessItem object. This object fields will be shallow replaced with the Raw weather values.\n     *  Meaning values will be updated or added but not removed.\n     * @returns\n     */\n    function parseWeatherText(weathertext, ref) {\n        var station = parseStation(weathertext);\n        var time = parseDate(weathertext);\n        if (ref != null) {\n            ref.station = station;\n            ref.time = time;\n        }\n        else {\n            ref = new WeatherProcessItem(undefined, station, time);\n        }\n        ref.auto = parseAuto(weathertext);\n        ref.wind = parseWind(weathertext);\n        ref.cavok = parseCavok(weathertext);\n        ref.visibility = parseVisibility(weathertext);\n        ref.weather = parseWeather(weathertext);\n        ref.clouds = parseClouds(weathertext);\n        var temps_int = parseTempInternation(weathertext);\n        if (temps_int != null) {\n            ref.temperature = temps_int[0];\n            ref.dewpoint = temps_int[1];\n        }\n        \n        var temps_ne = parseTempNA(weathertext);\n        if (temps_ne != null) {\n            ref.temperature = temps_ne[0];\n            ref.dewpoint = temps_ne[1];\n        }\n        \n        ref.altimeter = parseAltimeter(weathertext);\n        return ref;\n    }\n\n    /**\n     * Parses the station name form the metar\n     * @param metar raw metar\n     * @returns\n     */\n    function parseStation(metar) {\n        var re = /^(METAR\\s)?([A-Z]{1,4})\\s/g;\n        var matches = re.exec(metar);\n        if (matches != null) {\n            return matches[2];\n        }\n        else {\n            return null;\n        }\n    }\n\n    /**\n     * Parse Date object from metar.\n     * NOTE: Raw metar data does not contain month or year data. So this function assumes this metar was created in the current month and current year\n     * @param metar raw metar\n     * @returns\n     */\n    function parseDate(metar) {\n        var re = /([\\d]{2})([\\d]{2})([\\d]{2})Z/g;\n        var matches = re.exec(metar);\n        if (matches != null) {\n            var d = new Date();\n            d.setUTCDate(parseInt(matches[1]));\n            d.setUTCHours(parseInt(matches[2]));\n            d.setUTCMinutes(parseInt(matches[3]));\n            d.setUTCSeconds(0);\n            d.setUTCMilliseconds(0);\n            return d;\n        }\n        else {\n            throw new Error(\"Failed to parse Date\");\n        }\n    }\n\n    /**\n     * Parses for CAVOK (Ceiling and visabiliy OK)\n     * @param metar raw metar\n     * @returns\n     */\n    function parseCavok(metar) {\n        var re = /\\sCAVOK\\s/g;\n        return metar.match(re) != null ? true : false;\n    }\n\n    /**\n     * Parses for Automation\n     * @param metar raw metar\n     * @returns\n     */\n    function parseAuto(metar) {\n        var re = /\\s(AUTO)?(AO1)?(AO2)?\\s/g;\n        return metar.match(re) != null ? true : false;\n    }\n\n    /**\n     * Parse international temp dewp point format.\n     * @param metar raw metar\n     * @returns\n     */\n    function parseTempInternation(metar) {\n        var re = /\\s(M)?(\\d{2})\\/(M)?(\\d{2})\\s/g;\n        var matches = re.exec(metar);\n        if (matches != null) {\n            var temp = parseInt(matches[2]) * (matches[1] == null ? 1 : -1);\n            var dew_point = parseInt(matches[4]) * (matches[3] == null ? 1 : -1);\n            return [temp, dew_point];\n        }\n    }\n\n    /**\n     * Parse North American temp dew point format\n     * @param metar raw metar\n     * @returns\n     */\n    function parseTempNA(metar) {\n        var re = /(T)(\\d{1})(\\d{2})(\\d{1})(\\d{1})(\\d{2})(\\d{1})/g;\n        var matches = re.exec(metar);\n        if (matches != null) {\n            var temp = parseFloat(matches[3] + \".\" + matches[4]) * (matches[2] === \"0\" ? 1 : -1);\n            var dew_point = parseFloat(matches[6] + \".\" + matches[7]) * (matches[5] === \"0\" ? 1 : -1);\n            return [temp, dew_point];\n        }\n    }\n\n    /**\n     * Parse Weather items\n     * @param metar raw metar\n     * @returns\n     */\n    function parseWeather(metar) {\n        var obs_keys = Object.keys(WEATHER).join('|').replace(/\\+/g, \"\\\\+\");\n        var re = new RegExp(\"\\\\s?(\" + obs_keys + \")\\\\s\", 'g');\n        try {\n            var matches = metar.match(re);\n            if (matches != null) {\n                return matches.map(function (match) {\n                    var key = match.trim();\n                    return {\n                        abbreviation: key,\n                        meaning: WEATHER[key].text\n                    };\n                });\n            }\n        }\n        catch {}\n        return new Array();\n    }\n\n    /**\n     * Parse visibility\n     * @param metar raw metar\n     * @returns\n     */\n    function parseVisibility(metar) {\n        var re = /\\s([0-9]{1,2})?\\s?([0-9]{1}\\/[0-9]{1})?(SM)\\s|\\s([0-9]{1,4})\\s/g;\n        if (metar.match(re)) {\n            var vis_parts = re.exec(metar);\n            if (vis_parts != null) {\n                var meters = vis_parts[4];\n                var miles = vis_parts[1];\n                var frac_miles = vis_parts[2];\n                //Metric case ex: 1000, 9999 \n                if (meters != null) {\n                    return parseInt(meters);\n                }\n                //whole miles case ex: 1SM 10SM\n                else if (frac_miles != null) {\n                    var total = 0.0;\n                    if (miles != null) {\n                        total += parseFloat(miles);\n                    }\n                    total += frac_miles ? parseFloat(frac_miles) : 0.0;\n                    return total * 1609.34;\n                }\n                //factional miles case \"1 1/2SM\" \"1/4SM\"\n                else {\n                    return parseInt(miles) * 1609.34;\n                }\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Parse cloud coverages\n     * @param metarString raw metar\n     * @returns\n     */\n    function parseClouds(metarString) {\n        var _a;\n        var re = /(NCD|SKC|CLR|NSC|FEW|SCT|BKN|OVC|VV)(\\d{3})/g;\n        var clouds = new Array();\n        var matches;\n        while ((matches = re.exec(metarString)) != null) {\n            var cloud = {\n                abbreviation: matches[1],\n                meaning: (_a = CLOUDS[matches[1]]) === null || _a === void 0 ? void 0 : _a.text,\n                altitude: parseInt(matches[2]) * 100\n            };\n            clouds.push(cloud);\n        }\n        return clouds;\n    }\n\n    /**\n     * Parse wind data\n     * @param metar raw metar\n     * @returns\n     */\n    function parseWind(metar) {\n        var wind = new Wind();\n        var re = /\\s(\\d{3})(\\d{2})(G)?(\\d{2})?(KT|MPS)\\s/g;\n        var matches = re.exec(metar);\n        if (matches != null) {\n            wind.direction = parseInt(matches[1]);\n            wind.speed = parseInt(matches[2]);\n            wind.unit = matches[5];\n        }\n        return wind;\n    }\n\n    function parseAltimeter(metar) {\n        var re = /(A|Q)(\\d{2})(\\d{2})/g;\n        var matches = re.exec(metar);\n        if (matches != null) {\n            if (matches[1] === \"Q\") {\n                var pressure = parseFloat(matches[2] + matches[3]);\n                return parseFloat((pressure * 0.029529).toFixed(2));\n            }\n            else {\n                return parseFloat(matches[2] + \".\" + matches[3]);\n            }\n        }\n    }\n\n\n    /**\n     * Turns a Weather JSON object into an SVG image\n     * @param weatherobject weather JSON object\n     * @param width css width of svg\n     * @param height css height of svg\n     * @param metric true for metric units(m, hPa, mps), false for north american units (miles, inHg, Kts)\n     * @returns\n     */\n    function rawWeatherTextToSVG(weatherobject, width, height, metric) {\n        var plot = rawWeatherTextToWeatherPlot(weatherobject, metric);\n        return metarToSVG(plot, width, height);\n    }\n\n    /**\n     *\n     * @param weatherobject weather JSON object\n     * @param metric true for metric units(m, hPa, mps), false for north american units (miles, inHg, Kts)\n     * @returns\n     */\n    function rawWeatherTextToWeatherPlot(weatherobject, metric) {\n        var _a;\n        let rawMetar = weatherobject.raw_text;\n        let time = weatherobject.timestamp;\n        var weatherItem = new WeatherProcessItem(rawMetar, weatherobject.station_id, time);\n        var wx = weatherItem.weather.map(function (weather) { return weather.abbreviation; }).join(\"\");\n        //Metric converion\n        var pressure;\n        var vis = undefined;\n        var temp = weatherItem.temperature;\n        var dp = weatherItem.dewpoint;\n        if (metric) {\n            pressure = (weatherItem.altimeter != null) ? Math.round(weatherItem.altimeter * 33.86) : undefined;\n            if (weatherItem.visibility != null) {\n                vis = weatherItem.visibility > 9999 ? 9999 : Math.round(weatherItem.visibility);\n            }\n        }\n        else {\n            temp = cToF(temp);\n            dp = cToF(dp);\n            pressure = weatherItem.altimeter;\n            vis = milePrettyPrint((_a = weatherItem.visibility) !== null && _a !== void 0 ? _a : -1);\n        }\n        return {\n            metric: metric !== null && metric !== void 0 ? metric : false,\n            visiblity: vis,\n            temp: temp,\n            dew_point: dp,\n            station: weatherItem.station,\n            wind_direction: (typeof weatherItem.wind.direction === \"number\") ? weatherItem.wind.direction : undefined,\n            wind_speed: weatherItem.wind.speed,\n            gust_speed: weatherItem.wind.gust,\n            wx: wx,\n            pressure: pressure,\n            coverage: determineCoverage(weatherItem)\n        };\n    }\n\n    /**\n     * Pretty print Miles in fractions if under 1 mile\n     */\n    function milePrettyPrint(meters) {\n        var print = \"\";\n        if (meters === -1) {\n            return print;\n        }\n        var miles = meters * 0.0006213712;\n        //round to nearest quarter\n        var text = (Math.round(miles * 4) / 4).toFixed(2).toString();\n        return text.replace(\".00\", \"\");\n    }\n\n    function getCategoryColors(category) {\n        switch (category) {\n            case \"IFR\":\n                return {bgcolor: \"#ff0000\", fgcolor: \"#ffffff\"};\n            case \"LIFR\":\n                return {bgcolor: \"#ff00ff\", fgcolor: \"#000000\"};\n            case \"MVFR\": \n                return {bgcolor: \"#0000cd\", fgcolor: \"#ffffff\"};\n            case \"VFR\":\n            default:\n                return {bgcolor: \"#12f23c\", fgcolor: \"#000000\"};\n        }\n    }\n\n    /**\n     * Determines the coverage symbol\n     * @param metar\n     * @returns\n     */\n    function determineCoverage(metar) {\n        var _a;\n        var prevailingCoverage;\n        metar.clouds.forEach(function (cloud) {\n            if (prevailingCoverage != null) {\n                var curr = prevailingCoverage.abbreviation != null ? CLOUDS[prevailingCoverage.abbreviation].rank : undefined;\n                var rank = cloud.abbreviation != null ? CLOUDS[cloud.abbreviation].rank : undefined;\n                //console.log(\"cur: \" + curr + \", rank: \" + rank);\n                if (rank != null) {\n                    if (rank > curr) {\n                        prevailingCoverage = cloud;\n                    }\n                }\n            }\n            else {\n                prevailingCoverage = cloud;\n            }\n        });\n        return (_a = prevailingCoverage === null || prevailingCoverage === void 0 ? void 0 : prevailingCoverage.abbreviation) !== null && _a !== void 0 ? _a : \"\";\n    }\n    /**\n     * Turns a Metar plot object to a SVG image\n     * @param metar MetarPlot Object\n     * @param width css width for svg\n     * @param height css height for svg\n     * @returns\n     */\n    function metarToSVG(metar, width, height) {\n        var _a, _b, _c, _d, _e, _f;\n        var VIS = (_a = metar.visiblity) !== null && _a !== void 0 ? _a : \"\";\n        var TMP = (_b = metar.temp) !== null && _b !== void 0 ? _b : \"\";\n        var DEW = (_c = metar.dew_point) !== null && _c !== void 0 ? _c : \"\";\n        var STA = (_d = metar.station) !== null && _d !== void 0 ? _d : \"\";\n        var ALT = (_e = metar.pressure) !== null && _e !== void 0 ? _e : \"\";\n        return `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${width}\" height=\"${height}\" viewBox=\"0 0 500 500\"> ` +\n            `<style> ` + \n                    `.txt{ font-size: 47.5px; font-family: sans-serif; } ` +\n                    `.tmp{ fill: red } ` + \n                    `.sta{ fill: grey } ` + \n                    `.dew{ fill: blue } ` +\n                    `.vis{ fill: violet } ` +\n            `</style> ${(0, genWind)(metar)} ${(0, getWeatherSVG)((_f = metar.wx) !== null && _f !== void 0 ? _f : \"\")} ` +\n            `         ${(0, genCoverage)(metar.coverage, metar.condition)} ` + \n            `<g id=\"text\"><text class=\"vis txt\" fill=\"#000000\" stroke=\"#000\" stroke-width=\"0\" x=\"80\" y=\"260\" text-anchor=\"middle\" ` +\n            `xml:space=\"preserve\">${VIS}</text><text class=\"tmp txt\" fill=\"#000000\" stroke=\"#000\" stroke-width=\"0\" x=\"160\" y=\"220\" text-anchor=\"middle\" ` +\n            `xml:space=\"preserve\">${TMP}</text><text class=\"dew txt\" fill=\"#000000\" stroke=\"#000\" stroke-width=\"0\" x=\"160\"  y=\"315\" text-anchor=\"middle\" ` +\n            `xml:space=\"preserve\">${DEW}</text><text class=\"sta txt\" fill=\"#000000\" stroke=\"#000\" stroke-width=\"0\" x=\"275\"  y=\"315\" text-anchor=\"start\" ` +\n            `xml:space=\"preserve\">${STA}</text><text class=\"sta txt\" fill=\"#000000\" stroke=\"#000\" stroke-width=\"0\" x=\"275\"  y=\"220\" text-anchor=\"start\" ` +\n            `xml:space=\"preserve\">${ALT}</text></g></svg>`;\n    }\n\n    /**\n     * Generate a wind barb SVG image\n     * @param {int} width \n     * @param {int} height \n     * @param {object} metar \n     * @returns \n     */\n    function getWindBarbSvg(width, height, metar) {\n        let catcolor = \"\";\n        let svg = \"\";\n        let thismetar = {\n            wind_direction: metar.wind_dir_degrees,\n            wind_speed: metar.wind_speed_kt,\n            gust_speed: metar.gust_speed_kt,\n            station: metar.station_id\n        };\n        try {\n            switch (metar.flight_category) {\n                case \"IFR\":\n                    catcolor =\"ff0000\";\n                    break;\n                case \"LIFR\":\n                    catcolor = \"ff00ff\";\n                    break;\n                case \"MVFR\": \n                    catcolor = \"0000cd\";\n                    break;\n                case \"VFR\":\n                default:\n                    catcolor = \"12f23c\";\n                    break;\n            }\n        svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" ` +\n                    `width=\"${width}\" height=\"${height}\" ` + \n                    `viewBox=\"0 0 500 500\">` + \n                    (0, genWind)(thismetar) + \n                    `<g id=\"clr\">` + \n                        `<circle cx=\"250\" cy=\"250\" r=\"30\" stroke=\"#000000\" stroke-width=\"5\" fill=\"#${catcolor}\"/>` +\n                    `</g>` + \n                `</svg>`;\n        }\n        catch {}\n        return svg; \n    }\n    /**\n     * Convert ºF to ºF\n     * @param celsius\n     */\n    function cToF(celsius) {\n        if (celsius != null) {\n            return Math.round(celsius * 9 / 5 + 32);\n        }\n    }\n});"],"names":["CollectionEventType","ObjectEventType","EventType","Disposable","binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","found","a","b","descending","linearFindNearest","arr","target","direction","n","i","candidate","reverseSubArray","begin","end","tmp","extend","data","extension","length","equals","arr1","arr2","len1","isSorted","func","strict","compare","currentVal","index","res","TRUE","FALSE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","nextArgs","arrayEquals","toPromise","getter","promiseGetter","value","err","clear","object","property","isEmpty","BaseEvent","type","Target","listener","listeners","listenersForType","event","isString","evt","Event","dispatching","pendingRemovals","propagate","ii","pr","listen","thisArg","once","originalListener","eventsKey","listenOnce","unlistenByKey","key","Observable","EventTarget","len","keys","unByKey","abstract","uidCounter_","getUid","obj","ObjectEvent","oldValue","BaseObject","values","eventType","silent","source","Property","CollectionEvent","element","Collection","array","options","f","elem","prev","except","assert","assertion","errorMessage","Feature","geometryOrProperties","geometry","properties","clone","style","createStyleFunction","id","name","styles","Relationship","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","buffer","dest","closestSquaredDistanceXY","x","y","dx","dy","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","center","resolution","rotation","size","x0","y0","x1","y1","x2","y2","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","returnOrUpdate","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","wrapX","projection","projectionExtent","worldWidth","wrapAndSliceX","multiWorld","clamp","min","max","squaredSegmentDistance","t","squaredDistance","solveLinearSystem","mat","maxRow","maxEl","r","absValue","j","coef","k","l","m","toDegrees","angleInRadians","toRadians","angleInDegrees","modulo","lerp","toFixed","decimals","factor","floor","ceil","wrap","range","DEFAULT_RADIUS","getDistance","c1","c2","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","warn","args","add","delta","coordinate1","coordinate2","rotate","angle","cosAngle","sinAngle","scale","worldsAway","getWorldsAway","sourceExtentWidth","METERS_PER_UNIT","Projection","global","tileGrid","worldExtent","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","EPSG3857Projection","code","point","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","EPSG4326Projection","axisOrientation","cache","get","transforms","destination","transformFn","sourceCode","destinationCode","K0","E","E2","E3","E_P2","SQRT_E","_E","_E2","_E3","_E4","_E5","M1","M2","M3","M4","P2","P3","P4","P5","R","toLonLat","easting","northing","zone","mu","pRad","pSin","pSin2","pCos","pTan","pTan2","pTan4","epSin","epSinSqrt","c","d","d2","d3","d4","d5","d6","latitude","longitude","zoneToCentralLongitude","MIN_LATITUDE","MAX_LATITUDE","MIN_LONGITUDE","MAX_LONGITUDE","fromLonLat","latRad","latSin","latCos","latTan","latTan2","latTan4","lonRad","centralLon","centralLonRad","a2","a3","a4","a5","a6","epsgRegExes","zoneFromCode","epsgId","re","match","number","north","makeTransformFunction","transformer","coord","makeProjection","makeTransforms","transformFactories","makeUTMTransforms","projectionFactories","makeUTMProjection","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","getProj","getPointResolution","units","pointResolution","metersPerUnit","projUnits","getTransformFromProjections","vertices","width","height","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","pointLength","jj","transform","equivalent","equalUnits","transformFunc","getTransformFunc","sourceTransforms","destinationTransforms","intermediateCode","composeTransformFuncs","fromSource","toDestination","t1","t2","dimensions","getTransform","sourceProjection","destinationProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","create","setFromArray","transform1","transform2","apply","compose","dx1","dy1","sx","sy","dx2","dy2","sin","cos","makeInverse","det","determinant","e","matrixPrecision","toString","fromString","cssTransform","cssTransform1","cssTransform2","mat1","mat2","transform2D","destinationStride","anchor","anchorX","anchorY","deltaX","deltaY","translate","tmpTransform","createTransform","tmpPoint","Geometry","revision","squaredTolerance","closestPoint","minSquaredDistance","tolerance","sourceProj","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","transformed","projTransform","SimpleGeometry","simplifiedGeometry","layout","getStrideForLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","linearRing","twiceArea","linearRings","ends","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","assignClosestArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","endss","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","snap","quantize","quantizeArray","LinearRing","linearRingArea","Point","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","forEach","ret","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","intersectsLinearRing","intersectsLinearRingArray","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","orientLinearRings","reverseCoordinates","inflateEnds","prevEndIndex","startOrientation","orientation","Polygon","polygon","linearRingsArea","flatCenter","fromExtent","interpolatePoint","fraction","o","cumulativeLengths","lineStringLength","RenderEventType","ua","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","WORKER_OFFSCREEN_CANVAS","IMAGE_DECODE","PASSIVE_EVENT_LISTENERS","passive","ImageState","createCanvasContext2D","canvasPool","settings","canvas","sharedCanvasContext","getSharedCanvasContext2D","releaseCanvas","context","outerWidth","outerHeight","replaceNode","newNode","oldNode","parent","removeChildren","node","replaceChildren","children","oldChildren","oldChild","newChild","NO_COLOR","colorParseContext","getColorParseContext","rgbModernRegEx","rgbLegacyAbsoluteRegEx","rgbLegacyPercentageRegEx","hexRegEx","toColorComponent","divider","throwInvalidColor","color","parseRgba","rgb","alpha","rgbDivider","hex","step","colorFromHex","colorComponent","invalidCheckFillStyle","colorString","colorFromImage","asString","MAX_CACHE_SIZE","cacheSize","withAlpha","b1","v","b2","a1","rgbaToLcha","g","q","h","lchaToRgba","z","asArray","listenImage","image","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","error","load","src","resolve","reject","handleLoad","unlisten","handleError","decodeFallback","IconImageCache","iconImage","crossOrigin","getCacheKey","pattern","update","maxCacheSize","shared","taintedTestContext","IconImage","imageState","pixelRatio","ctx","onChange","cacheKey","iconImageCache","asColorLike","asCanvasPattern","iconCache","canvasPattern","patternCanvasContext","getIconImage","VectorContext","feature","renderer","hitDetectionRenderer","circleGeometry","geometryCollectionGeometry","lineStringGeometry","multiLineStringGeometry","multiPointGeometry","multiPolygonGeometry","pointGeometry","polygonGeometry","fillStyle","strokeStyle","imageStyle","declutterImageWithText","textStyle","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","fontRegExMatchIndex","getFontParameters","fontSpec","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureContext","measureFont","textHeights","registerFont","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","weight","family","families","measureTextHeight","measureElement","metrics","measureText","measureAndCacheTextWidth","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","lineHeight","currentWidth","currentHeight","drawImageOrLabel","opacity","labelOrImage","originX","originY","w","executeLabelInstructions","label","contextInstructions","CanvasImmediateRenderer","viewRotation","userTransform","pixelCoordinates","localTransform","centerX","centerY","close","geometries","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","textState","contextTextState","textAlign","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","lineDash","imageSize","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textOffsetX","textOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","textTextBaseline","acc","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","builderGroup","circleReplay","textReplay","renderFeature","replayGroup","declutter","loadingPromises","loading","renderFeatureInternal","renderGeometry","geometryRenderer","declutterBuilderGroup","lineStringReplay","polygonReplay","hasText","imageReplay","hasImage","withCredentials","loadFeaturesXhr","url","format","success","failure","xhr","features","dataProjection","all","linearRingss","RenderFeature","linearRingssCenter","midpoint","quickselect","left","quickselectStep","defaultCompare","s","sd","newLeft","newRight","swap","RBush$1","maxEntries","bbox","result","toBBox","nodesToSearch","child","childBBox","contains","tmpNode","item","createNode","equalsFn","path","indexes","goingUp","findItem","items","N","M","calcBBox","N2","N1","multiSelect","right2","right3","level","minArea","minEnlargement","targetNode","bboxArea","enlargement","enlargedArea","isNode","insertPath","splitIndex","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareMinX","compareNodeMinX","compareMinY","compareNodeMinY","xMargin","yMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","p","destNode","RBush","RBush_","extents","uid","rbush","Source","adaptAttributions","self","attributions","state","attributionLike","frameState","VectorEventType","VectorSourceEvent","VectorSource","allStrategy","useSpatialIndex","collection","featureKey","valid","indexedFeature","newFeatures","geometryFeatures","modifyingCollection","fast","featureId","clearEvent","anExtent","filter","closestFeature","previousMinSquaredDistance","minDistance","sid","loadedExtentsRtree","extentsToLoad","extentToLoad","removed","idString","loader","overlaps","Fill","patternImage","fill","Stroke","lineCap","lineDashOffset","lineJoin","miterLimit","hasArea","ratio","toSize","ImageStyle","displacement","rotateWithView","RegularShape","fillKey","renderOptions","stroke","strokeWidth","r1","r2","points","miterRatio","bevelAdd","aa","bb","dd","innerMiterRatio","innerLength","maxRadius","radius2","startAngle","angle0","radiusC","CircleStyle","Style","defaultGeometryFunction","zIndex","toFunction","styleFunction","defaultStyles","createDefaultStyle","DEFAULT_FILL_COLOR","Text","overflow","maxAngle","offsetX","offsetY","placement","repeat","keepUpright","justify","textBaseline","padding","ViewHint","Instruction","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","CanvasBuilder","maxExtent","dashArray","dash","tmpCoord","myEnd","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","skipped","lastRel","nextRel","builderEnds","builderEnd","builderBegin","builderEndss","myEnds","CanvasInstruction","hitDetectionInstructions","instruction","createFill","applyStroke","endGeometryInstruction","CanvasImageBuilder","myBegin","filteredFlatCoordinates","sharedData","origin","CanvasLineStringBuilder","moveToLineToInstruction","CanvasPolygonBuilder","numEnds","circleInstruction","lineChunk","chunkLength","cursor","chunkM","currentChunk","missing","matchingChunk","chunkStart","chunkEnd","acos","m12","m23","x12","y12","x23","y23","TEXT_ALIGN","CanvasTextBuilder","instructions","geometryType","flatOffset","oo","cc","chunk","chunkBegin","geometryWidths","beg","keep","backgroundFill","backgroundStroke","p0","p1","p2","p3","hitDetectionBackgroundFill","strokeKey","textKey","baseline","textKeepUpright","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","BuilderGroup","builderInstructions","zKey","builders","builderKey","builderInstruction","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","segmentM","advance","interpolate","beginX","beginY","startOffset","startLength","endM","reverse","flat","PI","singleSegment","previousAngle","iStart","charLength","chars","ZIndexContext","render","instructionsAtIndex","instructionAtIndex","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","rtlRegEx","horizontalTextAlign","align","createTextChunks","line","richTextToPlainText","part","Executor","deferredRendering","renderWidth","leftRight","strokeInstructions","fillInstructions","lineOffset","widthHeightIndex","lineWidthIndex","previousFont","fillStrokeArgs","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","applyTransform","scaledCanvasSize","imageOrLabel","box","strokePadding","alignAndScale","repeatSize","featureCallback","hitExtent","declutterTree","zIndexContext","transformSetFromArray","declutterMode","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","coordinateCache","viewRotationFromTransform","batchSize","currentGeometry","coords","labelWithAnchor","backgroundFillInstruction","backgroundStrokeInstruction","widthIndex","imageArgs","imageDeclutterMode","imageDeclutterBox","imageDeclutter","renderImage","renderText","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","ALL","DECLUTTER","NON_DECLUTTER","ExecutorGroup","allInstructions","renderBuffer","flatClipCoords","executors","instructionByZindex","candidates","hitTolerance","declutteredFeatures","contextSize","newContext","getPixelIndexArray","imageData","idx","zs","executor","targetContext","builderTypes","maxBuilderTypes","requireClip","deferredZIndexContexts","circlePixelIndexArrayCache","maxDistanceSq","distances","distanceSq","distance","pixelIndex","calculateScale","wantedWidth","wantedHeight","Icon","onload","iconImageSize","HIT_DETECT_RESOLUTION","createHitDetectionImageData","userExtent","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","originalStyle","imgSize","imgContext","byGeometryType","zIndexKeys","geomAndStyle","kk","hitDetect","pixel","resultFeatures","RenderEvent","inversePixelTransform","maxStaleKeys","LayerRenderer","layer","matches","pixelContext","createPixelContext","CanvasLayerRenderer","col","row","background","backgroundColor","layerClassName","container","topLeft","topRight","bottomRight","bottomLeft","inverted","canvasTransform","toTransformString","CanvasVectorLayerRenderer","vectorLayer","executorGroup","declutterable","viewState","vectorSource","viewHints","endWorld","world","layerState","layerExtent","intersectsExtent","getSquaredRenderTolerance","animating","interacting","updateWhileAnimating","updateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","renderedExtent","loadExtents","gutter","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","ready","dirty","replayGroupInstructions","numTypes","BooleanType","NumberType","StringType","ColorType","NumberArrayType","SizeType","AnyType","typeNames","namedTypes","isSpecific","typeName","names","namedType","includesType","broad","specific","isType","expected","LiteralExpression","CallExpression","operator","newParsingContext","parse","encoded","expectedType","colorFromString","parseCallExpression","Ops","parsers","createCallExpressionParser","hasArgsCount","withGetArgs","withVarArgs","usesFeatureId","withNoArgs","withArgsOfType","usesGeometryType","usesMapState","withArgsOfReturnType","hasEvenArgs","withMatchArgs","withInterpolateArgs","hasOddArgs","withCaseArgs","withInArgs","withPaletteArgs","returnType","argsCount","operation","minArgs","maxArgs","argCount","plural","expression","argType","inputType","fallback","interpolationType","base","interpolation","stop","condition","needleType","arg","colors","parsedColors","validators","parsed","parser","computeGeometryType","newEvaluationContext","buildExpression","compileExpression","colorValue","compileAssertionExpression","compileAccessorExpression","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileCaseExpression","compileMatchExpression","compileInterpolateExpression","compileConvertExpression","op","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","input1","output1","input2","output2","along","rgba1","rgba2","lcha1","lcha2","deltaHue","lcha","always","rulesToStyleFunction","rules","parsingContext","evaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","evaluators","buildStyle","nonNullCount","compiledRules","rule","styleLength","someMatched","filterEvaluator","styleEvaluator","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","buildText","evaluateImage","buildImage","evaluateZIndex","numberEvaluator","empty","prefix","evaluateColor","patternEvaluator","colorLikeEvaluator","evaluateWidth","evaluateLineCap","stringEvaluator","evaluateLineJoin","evaluateLineDash","numberArrayEvaluator","evaluateLineDashOffset","evaluateMiterLimit","evaluateValue","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluateKeepUpright","evaluatePadding","optionalDeclutterMode","buildIcon","buildShape","buildCircle","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","anchorOrigin","optionalIconOrigin","anchorXUnits","optionalIconAnchorUnits","anchorYUnits","optionalColorLike","optionalString","optionalNumberArray","offsetOrigin","optionalNumber","optionalSize","icon","pointsName","radiusName","requireNumber","shape","evaluateRadius","circle","Circle","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","requireColorLike","requireNumberArray","requireSize","requireSizeLike","ViewProperty","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","none","easeIn","easeOut","inAndOut","linear","getViewportClampedResolution","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","createSnapToResolutions","resolutions","cappedMaxRes","capped","createSnapToPower","power","minZoomLevel","cappedZoomLevel","zoomLevel","newResolution","createMinMaxResolution","createSnapToN","theta","createSnapToZero","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","DEFAULT_MIN_ZOOM","View","resolutionConstraintInfo","createResolutionConstraint","centerConstraint","createCenterConstraint","resolutionConstraint","rotationConstraint","createRotationConstraint","oldPadding","newPadding","newOptions","var_args","animationCount","animationCallback","series","animation","isNoopAnimation","now","more","seriesComplete","elapsed","progress","constrainedResolution","constrainedRotation","currentCenter","rotateCoordinate","addCoordinate","currentResolution","hints","zoom","enabled","logPower","reducedSize","calculateCenterOn","zoomFactor","nearest","baseLevel","geometryOrExtent","polygonFromExtent","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","position","shiftedCenter","deltaCoordinates","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","duration","resolutionDirection","targetCenter","targetResolution","targetZoom","targetRes","returnValue","centerNone","minZoom","maxZoom","projExtent","constrainOnlyCenter","defaultMaxResolution","defaultMinResolution","constrainRotation","rotationNone","coordinatesEqual","LayerProperty","BaseLayer","managed","states","visible","zindex","Layer","baseOptions","view","map","inView","getAttributions","layerRenderer","renderEvent","layerStatesArray","arrayLayerState","BaseVectorLayer","declutterGroup","renderOrder","styleLike","toStyleLike","toStyleFunction","VectorLayer","TileState","Tile","tileCoord","time","ImageTile","tileLoadFunction","getBlankImage","Kinetic","decay","minVelocity","delay","lastIndex","firstIndex","MapEvent","MapBrowserEvent","originalEvent","dragging","activePointers","MapBrowserEventType","PointerEventType","MapBrowserEventHandler","moveTolerance","pointerEvent","newEvent","pointerId","doc","MapEventType","MapProperty","DROP","PriorityQueue","priorityFunction","keyFunction","elements","priorities","elementKey","priority","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","TileQueue","tilePriorityFunction","tileChangeCallback","added","tile","tileKey","maxTotalLoading","maxNewLoads","newLoads","getTilePriority","tileSourceKey","tileCenter","tileResolution","Control","mapEvent","Attribution","className","tipLabel","expandClassName","collapseLabel","collapseClassName","activeLabel","cssClasses","layers","visibleAttributions","collapsible","attribution","collapsed","Rotate","compassClassName","button","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","currentZoom","newZoom","defaults","controls","InteractionProperty","Interaction","mapBrowserEvent","active","pan","zoomByDelta","DoubleClickZoom","stopEvent","browserEvent","conditions","pass","altShiftKeysOnly","focus","targetElement","rootNode","activeElement","focusWithTabindex","mouseActionButton","noModifierKeys","platformModifierKey","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","primaryAction","PointerInteraction","handledUp","handled","centroid","pointerEvents","clientX","clientY","DragPan","targetPointers","centroidFromPointers","scaleCoordinate","centerpx","DragRotate","RenderBox","startPixel","endPixel","px","DragBoxEventType","DragBoxEvent","DragBox","completeBox","DragZoom","Key","KeyboardPan","keyEvent","mapUnitsDelta","KeyboardZoom","MouseWheelZoom","wheelEvent","timeLeft","useAnchor","PinchRotate","pointerOptions","rotationDelta","touch0","touch1","PinchZoom","scaleDelta","interactions","kinetic","GroupEvent","LayerGroup","layersArray","collectionEvent","currentLayers","pos","ownLayerState","defaultZIndex","MapRenderer","coordinateToPixelTransform","pixelToCoordinateTransform","checkWrapped","layerFilter","thisArg2","forEachFeatureAtCoordinate","translatedCoordinate","offsets","layerStates","numLayers","order","expireIconCache","CompositeMapRenderer","renderedLayerStates","previousElement","sourceState","removeLayerMapProperty","setLayerMapProperty","optionsInternal","createOptionsInternal","defaultControls","defaultInteractions","viewOptions","control","interaction","overlay","addLayersFrom","layerGroup","viewportPosition","scaleX","scaleY","eventPosition","group","viewCoordinate","currentDoc","interactionsArray","tileQueue","lowOnFrameBudget","postRenderFunctions","keyboardEventTarget","targetRoot","previousFrameState","equalsExtent","oldLayerGroup","computedStyle","oldSize","overlays","Overlay","panIntoViewOptions","mapRect","overlayRect","myMargin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","positioning","mapSize","posX","posY","TileRange","tileRange","asImageLike","disposedError","defaultSize","DataTile","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","isBrokenDiagonalRendering","calculateSourceResolution","targetProj","sourceCenter","sourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","calculateSourceExtentResolution","targetExtent","triangulation","sources","renderEdges","drawSingle","clipExtent","pixelRound","sourceDataExtent","stitchContext","stitchScale","inverseScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","triangle","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","steps","ud","vd","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation","maxSourceExtent","errorThreshold","destinationResolution","sourceMatrix","transformInvCache","transformInv","applyMatrix","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","leftBound","newTriangle","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","ERROR_THRESHOLD","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","sourceRange","srcX","srcY","renderReprojected","leftToLoad","sourceListenKey","LRUCache","highWaterMark","entry","getKeyZXY","hash","hashZXY","withinExtentAndZ","sourceKey","addTileToLookup","tilesByZ","set","existing","removeTileFromLookup","getRenderExtent","gridExtent","CanvasTileLayerRenderer","tileLayer","createTileCoord","tileCache","tileSource","tilePixelRatio","tileOrigin","tileSize","sourceRevision","initialZ","preload","wantedTiles","minZ","viewport","tileQueueKey","staleKeys","altZ","covered","viewResolution","viewCenter","frameExtent","canvasExtent","targetZ","nextExtent","renderExtent","tileState","parentZ","canvasScale","currentClip","clips","clipZs","currentZ","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","xIndex","nextX","yIndex","nextY","transition","contextSaved","clip","postRenderFunction","tilesCount","tileCount","alphaChanged","usedTiles","TileProperty","BaseTileLayer","useInterimTilesOnError","TileLayer","tmpTileCoord","DECIMALS","TileGrid","restrictedTileRange","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","tileCoordZ","tileCoordX","tileCoordY","opt_tileCoord","reverseIntersectionPolicy","createOrUpdateTileCoord","opt_direction","fullTileRanges","getForProjection","createForProjection","extentFromProjection","createForExtent","resolutionsFromExtent","createXYZ","xyzOptions","gridOptions","half","zRegEx","xRegEx","yRegEx","dashYRegEx","renderXYZTemplate","template","expandUrl","urls","startCharCode","stopCharCode","charCode","createFromTemplate","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","tileCoordHash","TileSource","getTileGridForProjection","scaleSize","gridProjection","TileSourceEvent","TileEventType","UrlTile","tileUrlFunction","TileImage","defaultTileLoadFunction","thisProj","projKey","urlTileCoord","tileUrl","tilegrid","proj","imageTile","XYZ","ATTRIBUTION","OSM","UNITS_PROP","LEADING_DIGITS","DEFAULT_DPI","ScaleLine","dpi","pointResolutionUnits","minWidth","maxWidth","nominalCount","suffix","metersPerDegree","decimalCount","previousCount","previousWidth","previousDecimalCount","decimal","html","resolutionScale","mapScale","stepWidth","scaleSteps","cls","isLast","lengthString","inchesPerMeter","factory","module","require$$0","require$$1","require$$2","this","ol_Observable","CSS_PREFIX","LayerSwitcher","opt_options","panel","render_event","_idx","_a","ul","_changedLyr","rendercomplete_event","grp","lyrs","descendantVisibility","groupVisible","groupIndeterminate","groupSelectStyle","lastVisibleBaseLyr","lyr","_arr","filterFn","_lyr","li","lyrTitle","checkboxId","isBaseGroup","btn","rsl","elm","scrollStartPos","mapsettings","attachAirportInfo","station","response","convertStratuxToFAA","stratuxObject","stationInfo","cleanedData","forecast","parseWeatherForecast","timestamp","loc_time","weatherRaw","station_id","observation_time","parseObservationTime","raw_text","metar_type","tempDewRegex","windRegex","altimRegex","visRegex","skyRegex","tempDewMatch","windMatch","altimMatch","visMatch","sky_condition","skyMatch","visMiles","cond","tafData","lines","forecastPeriods","timeStr","year","month","day","hour","minute","URL_LOCATION","URL_PROTOCOL","URL_PORT","URL_HOST_BASE","URL_HOST_PROTOCOL","URL_SERVER","deg","viewposition","chicagoCoords","DistanceUnits","distanceunit","closeButton","popup","popupcontent","airplaneElement","mapState","metarFeatures","metarVectorLayer","tafFeatures","tafVectorLayer","pirepVectorLayer","trafficVectorLayer","osmTileLayer","restoreMapState","saved","props","WeatherProcessItem","weathertext","parseWeatherText","Wind","tafFieldKeymap","metarFieldKeymap","weatherAcronymKeymap","icingCodeKeymap","turbulenceCodeKeymap","skyConditionKeymap","trafficMap","loadTafFieldKeymap","loadMetarFieldKeymap","loadWeatherAcronymKeymap","loadTurbulenceCodeKeymap","loadIcingCodeKeymap","loadSkyConditionmKeymap","popupoverlay","buildWebSocketUrl","setupStratuxWebsockets","wstfc","wsTraffic","addTrafficItem","wssit","wsSituation","myairplane","setOwnshipOrientation","wswx","wsWeather","message","stratuxWeather","processMetar","processTaf","processPirep","tafMarker","pirepMarker","scaleLine","OLMap","closePopup","traffic","processTraffic","resizeDots","hasfeature","datatype","displayMetarPopup","displayTafPopup","displayPirepPopup","displayAirportPopup","displayTrafficPopup","metar","rawmetar","ident","svg","cat","tempC","dewpC","temp","convertCtoF","dewp","windir","winspd","wingst","altim","getAltimeterSetting","vis","getDistanceUnits","wxcode","decodeWxDescriptions","skycondition","skyconditions","icingconditions","decodeSkyCondition","icingcondition","decodeIcingOrTurbulenceCondition","btncolors","getCategoryColors","bgcolor","fgcolor","css","taf","rawtaf","outerhtml","subitem","subvalue","fcv","parseForecastField","pff","temphtml","footerhtml","innerhtml","pirep","rawpirep","pireplabel","thistime","pirepkey","pirepvalue","fieldname","getFieldDescription","getLocalTime","altimvalue","getInchesOfMercury","lineval","change","getSkyConditionDescription","rawfieldname","fieldvalue","formattedvalue","changevalue","getWeatherAcronymDescription","altimeter","parseConditionField","getConditionImage","conditiontype","conditionvalue","jsondata","trafficObject","getScaleSize","geom","tradians","trafficmarker","trafficFeature","popupSvg","mapDotSvg","airportInfo","rawWeatherTextToSVG","getWindBarbSvg","metarmarker","metarFeature","oldFeature","tafFeature","heading","pirepFeature","resizing","newzoom","newscale","metarMarkers","layerSwitcher","miles","num","zuludate","date","hours","minutes","ampm","tzone","retvalue","acronym","codevalue","outstr","vals","wak","piD","CLR_CIRCLE","FEW","SCT","BRK","OVC","CLOUDS","genCoverage","coverage","exports","getWeatherSVG","weather","WEATHER","BRK_DWN_ARW","RIGHT_ARROW","TRANSFORM","sine","FU_VA","HZ","DU_SA","BLDU_BLSA","PO","VCSS","BR","MIFG","VCTS","VIRGA","VCSH","TS","SQ","FC","SS","PLUS_SS","BLSN","DRSN","VCFG","BCFG","PRFG","FG","FZFG","MIN_DZ","DZ","PLUS_DZ","MIN_FZDZ","FZDZ","MIN_DZRA","DZRA","MIN_RA","RA","PLUS_RA","MIN_FZRA","FZRA","MIN_RASN","RASN","MIN_SN","SN","PLUS_SN","SG","IC","PE_PL","GUST_WIDTH","WS_WIDTH","genWind","_b","_c","_d","_e","_f","_g","_h","_j","_k","WDD","WSP","WGSP","wind","gust","genBarb1","genBarb2","genBarb3","genBarb4","genBarb5","speed","tag","barb","ref","parseStation","parseDate","parseAuto","parseWind","parseCavok","parseVisibility","parseWeather","parseClouds","temps_int","parseTempInternation","temps_ne","parseTempNA","parseAltimeter","dew_point","obs_keys","vis_parts","meters","frac_miles","total","metarString","clouds","cloud","pressure","weatherobject","metric","plot","rawWeatherTextToWeatherPlot","metarToSVG","rawMetar","weatherItem","wx","dp","cToF","milePrettyPrint","determineCoverage","print","category","prevailingCoverage","rank","VIS","TMP","DEW","STA","ALT","catcolor","thismetar","celsius"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180]}